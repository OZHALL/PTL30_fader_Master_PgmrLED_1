

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jul 08 12:14:03 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	swtext2,local,class=CONST,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 1.45
    62                           ; Generated 16/11/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F18855 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  001C                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0110                     	;# 
   150  0110                     	;# 
   151  0111                     	;# 
   152  0112                     	;# 
   153  0112                     	;# 
   154  0113                     	;# 
   155  0114                     	;# 
   156  0114                     	;# 
   157  0115                     	;# 
   158  0116                     	;# 
   159  0116                     	;# 
   160  0117                     	;# 
   161  0119                     	;# 
   162  0119                     	;# 
   163  0119                     	;# 
   164  011A                     	;# 
   165  011A                     	;# 
   166  011A                     	;# 
   167  011B                     	;# 
   168  011B                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011C                     	;# 
   173  011C                     	;# 
   174  011C                     	;# 
   175  011D                     	;# 
   176  011D                     	;# 
   177  011D                     	;# 
   178  011E                     	;# 
   179  011E                     	;# 
   180  011E                     	;# 
   181  011F                     	;# 
   182  011F                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  018E                     	;# 
   189  018F                     	;# 
   190  0190                     	;# 
   191  0191                     	;# 
   192  0192                     	;# 
   193  0196                     	;# 
   194  0197                     	;# 
   195  0198                     	;# 
   196  0199                     	;# 
   197  019A                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  020C                     	;# 
   201  020C                     	;# 
   202  020D                     	;# 
   203  020E                     	;# 
   204  020F                     	;# 
   205  020F                     	;# 
   206  0210                     	;# 
   207  0210                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0216                     	;# 
   217  0216                     	;# 
   218  0217                     	;# 
   219  0217                     	;# 
   220  0218                     	;# 
   221  0218                     	;# 
   222  0219                     	;# 
   223  021A                     	;# 
   224  021B                     	;# 
   225  021B                     	;# 
   226  021C                     	;# 
   227  021C                     	;# 
   228  021D                     	;# 
   229  021D                     	;# 
   230  021E                     	;# 
   231  021F                     	;# 
   232  028C                     	;# 
   233  028C                     	;# 
   234  028D                     	;# 
   235  028D                     	;# 
   236  028E                     	;# 
   237  028F                     	;# 
   238  0290                     	;# 
   239  0290                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0292                     	;# 
   243  0293                     	;# 
   244  0293                     	;# 
   245  0294                     	;# 
   246  0295                     	;# 
   247  0296                     	;# 
   248  0296                     	;# 
   249  0297                     	;# 
   250  0298                     	;# 
   251  0298                     	;# 
   252  0299                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  029B                     	;# 
   256  029C                     	;# 
   257  029C                     	;# 
   258  029D                     	;# 
   259  030C                     	;# 
   260  030C                     	;# 
   261  030D                     	;# 
   262  030E                     	;# 
   263  030F                     	;# 
   264  0310                     	;# 
   265  0310                     	;# 
   266  0311                     	;# 
   267  0312                     	;# 
   268  0313                     	;# 
   269  0314                     	;# 
   270  0314                     	;# 
   271  0315                     	;# 
   272  0316                     	;# 
   273  0317                     	;# 
   274  0318                     	;# 
   275  0318                     	;# 
   276  0319                     	;# 
   277  031A                     	;# 
   278  031B                     	;# 
   279  031C                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  031F                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  038E                     	;# 
   287  0390                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  040C                     	;# 
   291  040D                     	;# 
   292  040E                     	;# 
   293  040F                     	;# 
   294  0410                     	;# 
   295  0411                     	;# 
   296  0416                     	;# 
   297  0416                     	;# 
   298  0417                     	;# 
   299  0418                     	;# 
   300  0418                     	;# 
   301  0419                     	;# 
   302  041A                     	;# 
   303  041A                     	;# 
   304  041B                     	;# 
   305  041C                     	;# 
   306  041C                     	;# 
   307  041D                     	;# 
   308  041E                     	;# 
   309  041F                     	;# 
   310  048C                     	;# 
   311  048C                     	;# 
   312  048D                     	;# 
   313  048E                     	;# 
   314  048F                     	;# 
   315  048F                     	;# 
   316  0490                     	;# 
   317  0491                     	;# 
   318  0492                     	;# 
   319  0492                     	;# 
   320  0493                     	;# 
   321  0494                     	;# 
   322  0495                     	;# 
   323  0495                     	;# 
   324  0496                     	;# 
   325  0497                     	;# 
   326  0498                     	;# 
   327  0499                     	;# 
   328  049A                     	;# 
   329  049B                     	;# 
   330  049C                     	;# 
   331  049D                     	;# 
   332  050C                     	;# 
   333  050C                     	;# 
   334  050D                     	;# 
   335  050E                     	;# 
   336  050F                     	;# 
   337  050F                     	;# 
   338  0510                     	;# 
   339  0511                     	;# 
   340  0512                     	;# 
   341  0512                     	;# 
   342  0513                     	;# 
   343  0514                     	;# 
   344  0515                     	;# 
   345  0515                     	;# 
   346  0516                     	;# 
   347  0517                     	;# 
   348  0518                     	;# 
   349  0519                     	;# 
   350  051A                     	;# 
   351  051B                     	;# 
   352  051C                     	;# 
   353  051D                     	;# 
   354  058C                     	;# 
   355  058C                     	;# 
   356  058D                     	;# 
   357  058E                     	;# 
   358  058F                     	;# 
   359  058F                     	;# 
   360  0590                     	;# 
   361  0591                     	;# 
   362  0592                     	;# 
   363  0593                     	;# 
   364  060C                     	;# 
   365  060D                     	;# 
   366  060E                     	;# 
   367  060F                     	;# 
   368  0610                     	;# 
   369  0611                     	;# 
   370  0612                     	;# 
   371  0613                     	;# 
   372  0614                     	;# 
   373  0616                     	;# 
   374  0617                     	;# 
   375  0618                     	;# 
   376  0619                     	;# 
   377  061A                     	;# 
   378  061B                     	;# 
   379  061C                     	;# 
   380  061D                     	;# 
   381  061E                     	;# 
   382  068C                     	;# 
   383  068D                     	;# 
   384  068E                     	;# 
   385  068F                     	;# 
   386  0690                     	;# 
   387  0691                     	;# 
   388  0692                     	;# 
   389  0693                     	;# 
   390  0694                     	;# 
   391  070C                     	;# 
   392  070D                     	;# 
   393  070E                     	;# 
   394  070F                     	;# 
   395  0710                     	;# 
   396  0711                     	;# 
   397  0712                     	;# 
   398  0713                     	;# 
   399  0714                     	;# 
   400  0716                     	;# 
   401  0717                     	;# 
   402  0718                     	;# 
   403  0719                     	;# 
   404  071A                     	;# 
   405  071B                     	;# 
   406  071C                     	;# 
   407  071D                     	;# 
   408  071E                     	;# 
   409  0796                     	;# 
   410  0797                     	;# 
   411  0798                     	;# 
   412  0799                     	;# 
   413  079A                     	;# 
   414  079B                     	;# 
   415  080C                     	;# 
   416  080D                     	;# 
   417  080E                     	;# 
   418  080F                     	;# 
   419  0810                     	;# 
   420  0811                     	;# 
   421  0812                     	;# 
   422  0813                     	;# 
   423  0814                     	;# 
   424  081A                     	;# 
   425  081B                     	;# 
   426  081C                     	;# 
   427  081D                     	;# 
   428  081E                     	;# 
   429  081F                     	;# 
   430  088C                     	;# 
   431  088D                     	;# 
   432  088E                     	;# 
   433  088F                     	;# 
   434  0890                     	;# 
   435  0891                     	;# 
   436  0892                     	;# 
   437  0893                     	;# 
   438  0895                     	;# 
   439  0896                     	;# 
   440  0897                     	;# 
   441  0898                     	;# 
   442  0899                     	;# 
   443  089A                     	;# 
   444  089B                     	;# 
   445  090C                     	;# 
   446  090E                     	;# 
   447  090F                     	;# 
   448  091F                     	;# 
   449  091F                     	;# 
   450  098F                     	;# 
   451  098F                     	;# 
   452  0990                     	;# 
   453  0991                     	;# 
   454  0992                     	;# 
   455  0993                     	;# 
   456  0994                     	;# 
   457  0995                     	;# 
   458  0996                     	;# 
   459  0997                     	;# 
   460  0E0F                     	;# 
   461  0E10                     	;# 
   462  0E11                     	;# 
   463  0E12                     	;# 
   464  0E13                     	;# 
   465  0E14                     	;# 
   466  0E15                     	;# 
   467  0E16                     	;# 
   468  0E17                     	;# 
   469  0E18                     	;# 
   470  0E19                     	;# 
   471  0E1A                     	;# 
   472  0E1B                     	;# 
   473  0E1C                     	;# 
   474  0E1D                     	;# 
   475  0E1E                     	;# 
   476  0E1F                     	;# 
   477  0E20                     	;# 
   478  0E21                     	;# 
   479  0E22                     	;# 
   480  0E23                     	;# 
   481  0E24                     	;# 
   482  0E25                     	;# 
   483  0E26                     	;# 
   484  0E27                     	;# 
   485  0E28                     	;# 
   486  0E29                     	;# 
   487  0E2A                     	;# 
   488  0E2B                     	;# 
   489  0E2C                     	;# 
   490  0E2D                     	;# 
   491  0E2E                     	;# 
   492  0E2F                     	;# 
   493  0E30                     	;# 
   494  0E31                     	;# 
   495  0E32                     	;# 
   496  0E33                     	;# 
   497  0E34                     	;# 
   498  0E35                     	;# 
   499  0E36                     	;# 
   500  0E37                     	;# 
   501  0E8F                     	;# 
   502  0E90                     	;# 
   503  0E91                     	;# 
   504  0E92                     	;# 
   505  0E93                     	;# 
   506  0E94                     	;# 
   507  0E95                     	;# 
   508  0E96                     	;# 
   509  0E97                     	;# 
   510  0E9C                     	;# 
   511  0E9D                     	;# 
   512  0E9E                     	;# 
   513  0EA1                     	;# 
   514  0EA2                     	;# 
   515  0EA3                     	;# 
   516  0EA4                     	;# 
   517  0EA5                     	;# 
   518  0EA9                     	;# 
   519  0EAA                     	;# 
   520  0EAB                     	;# 
   521  0EAC                     	;# 
   522  0EB1                     	;# 
   523  0EB2                     	;# 
   524  0EB3                     	;# 
   525  0EB8                     	;# 
   526  0EB9                     	;# 
   527  0EBA                     	;# 
   528  0EBB                     	;# 
   529  0EBC                     	;# 
   530  0EBD                     	;# 
   531  0EBE                     	;# 
   532  0EC3                     	;# 
   533  0EC5                     	;# 
   534  0EC6                     	;# 
   535  0EC7                     	;# 
   536  0EC8                     	;# 
   537  0EC9                     	;# 
   538  0ECA                     	;# 
   539  0ECB                     	;# 
   540  0ECC                     	;# 
   541  0F10                     	;# 
   542  0F11                     	;# 
   543  0F12                     	;# 
   544  0F13                     	;# 
   545  0F14                     	;# 
   546  0F15                     	;# 
   547  0F16                     	;# 
   548  0F17                     	;# 
   549  0F18                     	;# 
   550  0F19                     	;# 
   551  0F1A                     	;# 
   552  0F1B                     	;# 
   553  0F1C                     	;# 
   554  0F1D                     	;# 
   555  0F1E                     	;# 
   556  0F1F                     	;# 
   557  0F20                     	;# 
   558  0F21                     	;# 
   559  0F22                     	;# 
   560  0F23                     	;# 
   561  0F24                     	;# 
   562  0F25                     	;# 
   563  0F26                     	;# 
   564  0F27                     	;# 
   565  0F38                     	;# 
   566  0F39                     	;# 
   567  0F3A                     	;# 
   568  0F3B                     	;# 
   569  0F3C                     	;# 
   570  0F3D                     	;# 
   571  0F3E                     	;# 
   572  0F3F                     	;# 
   573  0F40                     	;# 
   574  0F41                     	;# 
   575  0F43                     	;# 
   576  0F44                     	;# 
   577  0F45                     	;# 
   578  0F46                     	;# 
   579  0F47                     	;# 
   580  0F48                     	;# 
   581  0F49                     	;# 
   582  0F4A                     	;# 
   583  0F4B                     	;# 
   584  0F4C                     	;# 
   585  0F4E                     	;# 
   586  0F4F                     	;# 
   587  0F50                     	;# 
   588  0F51                     	;# 
   589  0F52                     	;# 
   590  0F53                     	;# 
   591  0F54                     	;# 
   592  0F55                     	;# 
   593  0F56                     	;# 
   594  0F57                     	;# 
   595  0F65                     	;# 
   596  0F68                     	;# 
   597  0F69                     	;# 
   598  0F6A                     	;# 
   599  0F6B                     	;# 
   600  0FE4                     	;# 
   601  0FE5                     	;# 
   602  0FE6                     	;# 
   603  0FE7                     	;# 
   604  0FE8                     	;# 
   605  0FE9                     	;# 
   606  0FEA                     	;# 
   607  0FEB                     	;# 
   608  0FED                     	;# 
   609  0FEE                     	;# 
   610  0FEF                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  000E                     	;# 
   626  0010                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  001C                     	;# 
   634  001C                     	;# 
   635  001D                     	;# 
   636  001D                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  008C                     	;# 
   640  008C                     	;# 
   641  008D                     	;# 
   642  008E                     	;# 
   643  008E                     	;# 
   644  008F                     	;# 
   645  0090                     	;# 
   646  0090                     	;# 
   647  0091                     	;# 
   648  0093                     	;# 
   649  0094                     	;# 
   650  0095                     	;# 
   651  0096                     	;# 
   652  0097                     	;# 
   653  0098                     	;# 
   654  0099                     	;# 
   655  009A                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009E                     	;# 
   660  010C                     	;# 
   661  010D                     	;# 
   662  010E                     	;# 
   663  010E                     	;# 
   664  010F                     	;# 
   665  0110                     	;# 
   666  0110                     	;# 
   667  0111                     	;# 
   668  0112                     	;# 
   669  0112                     	;# 
   670  0113                     	;# 
   671  0114                     	;# 
   672  0114                     	;# 
   673  0115                     	;# 
   674  0116                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  0119                     	;# 
   678  0119                     	;# 
   679  0119                     	;# 
   680  011A                     	;# 
   681  011A                     	;# 
   682  011A                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011C                     	;# 
   689  011C                     	;# 
   690  011C                     	;# 
   691  011D                     	;# 
   692  011D                     	;# 
   693  011D                     	;# 
   694  011E                     	;# 
   695  011E                     	;# 
   696  011E                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  018C                     	;# 
   703  018D                     	;# 
   704  018E                     	;# 
   705  018F                     	;# 
   706  0190                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0198                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  020C                     	;# 
   717  020C                     	;# 
   718  020D                     	;# 
   719  020E                     	;# 
   720  020F                     	;# 
   721  020F                     	;# 
   722  0210                     	;# 
   723  0210                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0218                     	;# 
   737  0218                     	;# 
   738  0219                     	;# 
   739  021A                     	;# 
   740  021B                     	;# 
   741  021B                     	;# 
   742  021C                     	;# 
   743  021C                     	;# 
   744  021D                     	;# 
   745  021D                     	;# 
   746  021E                     	;# 
   747  021F                     	;# 
   748  028C                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028D                     	;# 
   752  028E                     	;# 
   753  028F                     	;# 
   754  0290                     	;# 
   755  0290                     	;# 
   756  0291                     	;# 
   757  0292                     	;# 
   758  0292                     	;# 
   759  0293                     	;# 
   760  0293                     	;# 
   761  0294                     	;# 
   762  0295                     	;# 
   763  0296                     	;# 
   764  0296                     	;# 
   765  0297                     	;# 
   766  0298                     	;# 
   767  0298                     	;# 
   768  0299                     	;# 
   769  0299                     	;# 
   770  029A                     	;# 
   771  029B                     	;# 
   772  029C                     	;# 
   773  029C                     	;# 
   774  029D                     	;# 
   775  030C                     	;# 
   776  030C                     	;# 
   777  030D                     	;# 
   778  030E                     	;# 
   779  030F                     	;# 
   780  0310                     	;# 
   781  0310                     	;# 
   782  0311                     	;# 
   783  0312                     	;# 
   784  0313                     	;# 
   785  0314                     	;# 
   786  0314                     	;# 
   787  0315                     	;# 
   788  0316                     	;# 
   789  0317                     	;# 
   790  0318                     	;# 
   791  0318                     	;# 
   792  0319                     	;# 
   793  031A                     	;# 
   794  031B                     	;# 
   795  031C                     	;# 
   796  031C                     	;# 
   797  031D                     	;# 
   798  031E                     	;# 
   799  031F                     	;# 
   800  038C                     	;# 
   801  038D                     	;# 
   802  038E                     	;# 
   803  0390                     	;# 
   804  0391                     	;# 
   805  0392                     	;# 
   806  040C                     	;# 
   807  040D                     	;# 
   808  040E                     	;# 
   809  040F                     	;# 
   810  0410                     	;# 
   811  0411                     	;# 
   812  0416                     	;# 
   813  0416                     	;# 
   814  0417                     	;# 
   815  0418                     	;# 
   816  0418                     	;# 
   817  0419                     	;# 
   818  041A                     	;# 
   819  041A                     	;# 
   820  041B                     	;# 
   821  041C                     	;# 
   822  041C                     	;# 
   823  041D                     	;# 
   824  041E                     	;# 
   825  041F                     	;# 
   826  048C                     	;# 
   827  048C                     	;# 
   828  048D                     	;# 
   829  048E                     	;# 
   830  048F                     	;# 
   831  048F                     	;# 
   832  0490                     	;# 
   833  0491                     	;# 
   834  0492                     	;# 
   835  0492                     	;# 
   836  0493                     	;# 
   837  0494                     	;# 
   838  0495                     	;# 
   839  0495                     	;# 
   840  0496                     	;# 
   841  0497                     	;# 
   842  0498                     	;# 
   843  0499                     	;# 
   844  049A                     	;# 
   845  049B                     	;# 
   846  049C                     	;# 
   847  049D                     	;# 
   848  050C                     	;# 
   849  050C                     	;# 
   850  050D                     	;# 
   851  050E                     	;# 
   852  050F                     	;# 
   853  050F                     	;# 
   854  0510                     	;# 
   855  0511                     	;# 
   856  0512                     	;# 
   857  0512                     	;# 
   858  0513                     	;# 
   859  0514                     	;# 
   860  0515                     	;# 
   861  0515                     	;# 
   862  0516                     	;# 
   863  0517                     	;# 
   864  0518                     	;# 
   865  0519                     	;# 
   866  051A                     	;# 
   867  051B                     	;# 
   868  051C                     	;# 
   869  051D                     	;# 
   870  058C                     	;# 
   871  058C                     	;# 
   872  058D                     	;# 
   873  058E                     	;# 
   874  058F                     	;# 
   875  058F                     	;# 
   876  0590                     	;# 
   877  0591                     	;# 
   878  0592                     	;# 
   879  0593                     	;# 
   880  060C                     	;# 
   881  060D                     	;# 
   882  060E                     	;# 
   883  060F                     	;# 
   884  0610                     	;# 
   885  0611                     	;# 
   886  0612                     	;# 
   887  0613                     	;# 
   888  0614                     	;# 
   889  0616                     	;# 
   890  0617                     	;# 
   891  0618                     	;# 
   892  0619                     	;# 
   893  061A                     	;# 
   894  061B                     	;# 
   895  061C                     	;# 
   896  061D                     	;# 
   897  061E                     	;# 
   898  068C                     	;# 
   899  068D                     	;# 
   900  068E                     	;# 
   901  068F                     	;# 
   902  0690                     	;# 
   903  0691                     	;# 
   904  0692                     	;# 
   905  0693                     	;# 
   906  0694                     	;# 
   907  070C                     	;# 
   908  070D                     	;# 
   909  070E                     	;# 
   910  070F                     	;# 
   911  0710                     	;# 
   912  0711                     	;# 
   913  0712                     	;# 
   914  0713                     	;# 
   915  0714                     	;# 
   916  0716                     	;# 
   917  0717                     	;# 
   918  0718                     	;# 
   919  0719                     	;# 
   920  071A                     	;# 
   921  071B                     	;# 
   922  071C                     	;# 
   923  071D                     	;# 
   924  071E                     	;# 
   925  0796                     	;# 
   926  0797                     	;# 
   927  0798                     	;# 
   928  0799                     	;# 
   929  079A                     	;# 
   930  079B                     	;# 
   931  080C                     	;# 
   932  080D                     	;# 
   933  080E                     	;# 
   934  080F                     	;# 
   935  0810                     	;# 
   936  0811                     	;# 
   937  0812                     	;# 
   938  0813                     	;# 
   939  0814                     	;# 
   940  081A                     	;# 
   941  081B                     	;# 
   942  081C                     	;# 
   943  081D                     	;# 
   944  081E                     	;# 
   945  081F                     	;# 
   946  088C                     	;# 
   947  088D                     	;# 
   948  088E                     	;# 
   949  088F                     	;# 
   950  0890                     	;# 
   951  0891                     	;# 
   952  0892                     	;# 
   953  0893                     	;# 
   954  0895                     	;# 
   955  0896                     	;# 
   956  0897                     	;# 
   957  0898                     	;# 
   958  0899                     	;# 
   959  089A                     	;# 
   960  089B                     	;# 
   961  090C                     	;# 
   962  090E                     	;# 
   963  090F                     	;# 
   964  091F                     	;# 
   965  091F                     	;# 
   966  098F                     	;# 
   967  098F                     	;# 
   968  0990                     	;# 
   969  0991                     	;# 
   970  0992                     	;# 
   971  0993                     	;# 
   972  0994                     	;# 
   973  0995                     	;# 
   974  0996                     	;# 
   975  0997                     	;# 
   976  0E0F                     	;# 
   977  0E10                     	;# 
   978  0E11                     	;# 
   979  0E12                     	;# 
   980  0E13                     	;# 
   981  0E14                     	;# 
   982  0E15                     	;# 
   983  0E16                     	;# 
   984  0E17                     	;# 
   985  0E18                     	;# 
   986  0E19                     	;# 
   987  0E1A                     	;# 
   988  0E1B                     	;# 
   989  0E1C                     	;# 
   990  0E1D                     	;# 
   991  0E1E                     	;# 
   992  0E1F                     	;# 
   993  0E20                     	;# 
   994  0E21                     	;# 
   995  0E22                     	;# 
   996  0E23                     	;# 
   997  0E24                     	;# 
   998  0E25                     	;# 
   999  0E26                     	;# 
  1000  0E27                     	;# 
  1001  0E28                     	;# 
  1002  0E29                     	;# 
  1003  0E2A                     	;# 
  1004  0E2B                     	;# 
  1005  0E2C                     	;# 
  1006  0E2D                     	;# 
  1007  0E2E                     	;# 
  1008  0E2F                     	;# 
  1009  0E30                     	;# 
  1010  0E31                     	;# 
  1011  0E32                     	;# 
  1012  0E33                     	;# 
  1013  0E34                     	;# 
  1014  0E35                     	;# 
  1015  0E36                     	;# 
  1016  0E37                     	;# 
  1017  0E8F                     	;# 
  1018  0E90                     	;# 
  1019  0E91                     	;# 
  1020  0E92                     	;# 
  1021  0E93                     	;# 
  1022  0E94                     	;# 
  1023  0E95                     	;# 
  1024  0E96                     	;# 
  1025  0E97                     	;# 
  1026  0E9C                     	;# 
  1027  0E9D                     	;# 
  1028  0E9E                     	;# 
  1029  0EA1                     	;# 
  1030  0EA2                     	;# 
  1031  0EA3                     	;# 
  1032  0EA4                     	;# 
  1033  0EA5                     	;# 
  1034  0EA9                     	;# 
  1035  0EAA                     	;# 
  1036  0EAB                     	;# 
  1037  0EAC                     	;# 
  1038  0EB1                     	;# 
  1039  0EB2                     	;# 
  1040  0EB3                     	;# 
  1041  0EB8                     	;# 
  1042  0EB9                     	;# 
  1043  0EBA                     	;# 
  1044  0EBB                     	;# 
  1045  0EBC                     	;# 
  1046  0EBD                     	;# 
  1047  0EBE                     	;# 
  1048  0EC3                     	;# 
  1049  0EC5                     	;# 
  1050  0EC6                     	;# 
  1051  0EC7                     	;# 
  1052  0EC8                     	;# 
  1053  0EC9                     	;# 
  1054  0ECA                     	;# 
  1055  0ECB                     	;# 
  1056  0ECC                     	;# 
  1057  0F10                     	;# 
  1058  0F11                     	;# 
  1059  0F12                     	;# 
  1060  0F13                     	;# 
  1061  0F14                     	;# 
  1062  0F15                     	;# 
  1063  0F16                     	;# 
  1064  0F17                     	;# 
  1065  0F18                     	;# 
  1066  0F19                     	;# 
  1067  0F1A                     	;# 
  1068  0F1B                     	;# 
  1069  0F1C                     	;# 
  1070  0F1D                     	;# 
  1071  0F1E                     	;# 
  1072  0F1F                     	;# 
  1073  0F20                     	;# 
  1074  0F21                     	;# 
  1075  0F22                     	;# 
  1076  0F23                     	;# 
  1077  0F24                     	;# 
  1078  0F25                     	;# 
  1079  0F26                     	;# 
  1080  0F27                     	;# 
  1081  0F38                     	;# 
  1082  0F39                     	;# 
  1083  0F3A                     	;# 
  1084  0F3B                     	;# 
  1085  0F3C                     	;# 
  1086  0F3D                     	;# 
  1087  0F3E                     	;# 
  1088  0F3F                     	;# 
  1089  0F40                     	;# 
  1090  0F41                     	;# 
  1091  0F43                     	;# 
  1092  0F44                     	;# 
  1093  0F45                     	;# 
  1094  0F46                     	;# 
  1095  0F47                     	;# 
  1096  0F48                     	;# 
  1097  0F49                     	;# 
  1098  0F4A                     	;# 
  1099  0F4B                     	;# 
  1100  0F4C                     	;# 
  1101  0F4E                     	;# 
  1102  0F4F                     	;# 
  1103  0F50                     	;# 
  1104  0F51                     	;# 
  1105  0F52                     	;# 
  1106  0F53                     	;# 
  1107  0F54                     	;# 
  1108  0F55                     	;# 
  1109  0F56                     	;# 
  1110  0F57                     	;# 
  1111  0F65                     	;# 
  1112  0F68                     	;# 
  1113  0F69                     	;# 
  1114  0F6A                     	;# 
  1115  0F6B                     	;# 
  1116  0FE4                     	;# 
  1117  0FE5                     	;# 
  1118  0FE6                     	;# 
  1119  0FE7                     	;# 
  1120  0FE8                     	;# 
  1121  0FE9                     	;# 
  1122  0FEA                     	;# 
  1123  0FEB                     	;# 
  1124  0FED                     	;# 
  1125  0FEE                     	;# 
  1126  0FEF                     	;# 
  1127  0000                     	;# 
  1128  0001                     	;# 
  1129  0002                     	;# 
  1130  0003                     	;# 
  1131  0004                     	;# 
  1132  0005                     	;# 
  1133  0006                     	;# 
  1134  0007                     	;# 
  1135  0008                     	;# 
  1136  0009                     	;# 
  1137  000A                     	;# 
  1138  000B                     	;# 
  1139  000C                     	;# 
  1140  000D                     	;# 
  1141  000E                     	;# 
  1142  0010                     	;# 
  1143  0011                     	;# 
  1144  0012                     	;# 
  1145  0013                     	;# 
  1146  0016                     	;# 
  1147  0017                     	;# 
  1148  0018                     	;# 
  1149  001C                     	;# 
  1150  001C                     	;# 
  1151  001D                     	;# 
  1152  001D                     	;# 
  1153  001E                     	;# 
  1154  001F                     	;# 
  1155  008C                     	;# 
  1156  008C                     	;# 
  1157  008D                     	;# 
  1158  008E                     	;# 
  1159  008E                     	;# 
  1160  008F                     	;# 
  1161  0090                     	;# 
  1162  0090                     	;# 
  1163  0091                     	;# 
  1164  0093                     	;# 
  1165  0094                     	;# 
  1166  0095                     	;# 
  1167  0096                     	;# 
  1168  0097                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009A                     	;# 
  1172  009B                     	;# 
  1173  009C                     	;# 
  1174  009D                     	;# 
  1175  009E                     	;# 
  1176  010C                     	;# 
  1177  010D                     	;# 
  1178  010E                     	;# 
  1179  010E                     	;# 
  1180  010F                     	;# 
  1181  0110                     	;# 
  1182  0110                     	;# 
  1183  0111                     	;# 
  1184  0112                     	;# 
  1185  0112                     	;# 
  1186  0113                     	;# 
  1187  0114                     	;# 
  1188  0114                     	;# 
  1189  0115                     	;# 
  1190  0116                     	;# 
  1191  0116                     	;# 
  1192  0117                     	;# 
  1193  0119                     	;# 
  1194  0119                     	;# 
  1195  0119                     	;# 
  1196  011A                     	;# 
  1197  011A                     	;# 
  1198  011A                     	;# 
  1199  011B                     	;# 
  1200  011B                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011C                     	;# 
  1205  011C                     	;# 
  1206  011C                     	;# 
  1207  011D                     	;# 
  1208  011D                     	;# 
  1209  011D                     	;# 
  1210  011E                     	;# 
  1211  011E                     	;# 
  1212  011E                     	;# 
  1213  011F                     	;# 
  1214  011F                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  018C                     	;# 
  1219  018D                     	;# 
  1220  018E                     	;# 
  1221  018F                     	;# 
  1222  0190                     	;# 
  1223  0191                     	;# 
  1224  0192                     	;# 
  1225  0196                     	;# 
  1226  0197                     	;# 
  1227  0198                     	;# 
  1228  0199                     	;# 
  1229  019A                     	;# 
  1230  019B                     	;# 
  1231  019C                     	;# 
  1232  020C                     	;# 
  1233  020C                     	;# 
  1234  020D                     	;# 
  1235  020E                     	;# 
  1236  020F                     	;# 
  1237  020F                     	;# 
  1238  0210                     	;# 
  1239  0210                     	;# 
  1240  0211                     	;# 
  1241  0211                     	;# 
  1242  0212                     	;# 
  1243  0212                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0215                     	;# 
  1247  0215                     	;# 
  1248  0216                     	;# 
  1249  0216                     	;# 
  1250  0217                     	;# 
  1251  0217                     	;# 
  1252  0218                     	;# 
  1253  0218                     	;# 
  1254  0219                     	;# 
  1255  021A                     	;# 
  1256  021B                     	;# 
  1257  021B                     	;# 
  1258  021C                     	;# 
  1259  021C                     	;# 
  1260  021D                     	;# 
  1261  021D                     	;# 
  1262  021E                     	;# 
  1263  021F                     	;# 
  1264  028C                     	;# 
  1265  028C                     	;# 
  1266  028D                     	;# 
  1267  028D                     	;# 
  1268  028E                     	;# 
  1269  028F                     	;# 
  1270  0290                     	;# 
  1271  0290                     	;# 
  1272  0291                     	;# 
  1273  0292                     	;# 
  1274  0292                     	;# 
  1275  0293                     	;# 
  1276  0293                     	;# 
  1277  0294                     	;# 
  1278  0295                     	;# 
  1279  0296                     	;# 
  1280  0296                     	;# 
  1281  0297                     	;# 
  1282  0298                     	;# 
  1283  0298                     	;# 
  1284  0299                     	;# 
  1285  0299                     	;# 
  1286  029A                     	;# 
  1287  029B                     	;# 
  1288  029C                     	;# 
  1289  029C                     	;# 
  1290  029D                     	;# 
  1291  030C                     	;# 
  1292  030C                     	;# 
  1293  030D                     	;# 
  1294  030E                     	;# 
  1295  030F                     	;# 
  1296  0310                     	;# 
  1297  0310                     	;# 
  1298  0311                     	;# 
  1299  0312                     	;# 
  1300  0313                     	;# 
  1301  0314                     	;# 
  1302  0314                     	;# 
  1303  0315                     	;# 
  1304  0316                     	;# 
  1305  0317                     	;# 
  1306  0318                     	;# 
  1307  0318                     	;# 
  1308  0319                     	;# 
  1309  031A                     	;# 
  1310  031B                     	;# 
  1311  031C                     	;# 
  1312  031C                     	;# 
  1313  031D                     	;# 
  1314  031E                     	;# 
  1315  031F                     	;# 
  1316  038C                     	;# 
  1317  038D                     	;# 
  1318  038E                     	;# 
  1319  0390                     	;# 
  1320  0391                     	;# 
  1321  0392                     	;# 
  1322  040C                     	;# 
  1323  040D                     	;# 
  1324  040E                     	;# 
  1325  040F                     	;# 
  1326  0410                     	;# 
  1327  0411                     	;# 
  1328  0416                     	;# 
  1329  0416                     	;# 
  1330  0417                     	;# 
  1331  0418                     	;# 
  1332  0418                     	;# 
  1333  0419                     	;# 
  1334  041A                     	;# 
  1335  041A                     	;# 
  1336  041B                     	;# 
  1337  041C                     	;# 
  1338  041C                     	;# 
  1339  041D                     	;# 
  1340  041E                     	;# 
  1341  041F                     	;# 
  1342  048C                     	;# 
  1343  048C                     	;# 
  1344  048D                     	;# 
  1345  048E                     	;# 
  1346  048F                     	;# 
  1347  048F                     	;# 
  1348  0490                     	;# 
  1349  0491                     	;# 
  1350  0492                     	;# 
  1351  0492                     	;# 
  1352  0493                     	;# 
  1353  0494                     	;# 
  1354  0495                     	;# 
  1355  0495                     	;# 
  1356  0496                     	;# 
  1357  0497                     	;# 
  1358  0498                     	;# 
  1359  0499                     	;# 
  1360  049A                     	;# 
  1361  049B                     	;# 
  1362  049C                     	;# 
  1363  049D                     	;# 
  1364  050C                     	;# 
  1365  050C                     	;# 
  1366  050D                     	;# 
  1367  050E                     	;# 
  1368  050F                     	;# 
  1369  050F                     	;# 
  1370  0510                     	;# 
  1371  0511                     	;# 
  1372  0512                     	;# 
  1373  0512                     	;# 
  1374  0513                     	;# 
  1375  0514                     	;# 
  1376  0515                     	;# 
  1377  0515                     	;# 
  1378  0516                     	;# 
  1379  0517                     	;# 
  1380  0518                     	;# 
  1381  0519                     	;# 
  1382  051A                     	;# 
  1383  051B                     	;# 
  1384  051C                     	;# 
  1385  051D                     	;# 
  1386  058C                     	;# 
  1387  058C                     	;# 
  1388  058D                     	;# 
  1389  058E                     	;# 
  1390  058F                     	;# 
  1391  058F                     	;# 
  1392  0590                     	;# 
  1393  0591                     	;# 
  1394  0592                     	;# 
  1395  0593                     	;# 
  1396  060C                     	;# 
  1397  060D                     	;# 
  1398  060E                     	;# 
  1399  060F                     	;# 
  1400  0610                     	;# 
  1401  0611                     	;# 
  1402  0612                     	;# 
  1403  0613                     	;# 
  1404  0614                     	;# 
  1405  0616                     	;# 
  1406  0617                     	;# 
  1407  0618                     	;# 
  1408  0619                     	;# 
  1409  061A                     	;# 
  1410  061B                     	;# 
  1411  061C                     	;# 
  1412  061D                     	;# 
  1413  061E                     	;# 
  1414  068C                     	;# 
  1415  068D                     	;# 
  1416  068E                     	;# 
  1417  068F                     	;# 
  1418  0690                     	;# 
  1419  0691                     	;# 
  1420  0692                     	;# 
  1421  0693                     	;# 
  1422  0694                     	;# 
  1423  070C                     	;# 
  1424  070D                     	;# 
  1425  070E                     	;# 
  1426  070F                     	;# 
  1427  0710                     	;# 
  1428  0711                     	;# 
  1429  0712                     	;# 
  1430  0713                     	;# 
  1431  0714                     	;# 
  1432  0716                     	;# 
  1433  0717                     	;# 
  1434  0718                     	;# 
  1435  0719                     	;# 
  1436  071A                     	;# 
  1437  071B                     	;# 
  1438  071C                     	;# 
  1439  071D                     	;# 
  1440  071E                     	;# 
  1441  0796                     	;# 
  1442  0797                     	;# 
  1443  0798                     	;# 
  1444  0799                     	;# 
  1445  079A                     	;# 
  1446  079B                     	;# 
  1447  080C                     	;# 
  1448  080D                     	;# 
  1449  080E                     	;# 
  1450  080F                     	;# 
  1451  0810                     	;# 
  1452  0811                     	;# 
  1453  0812                     	;# 
  1454  0813                     	;# 
  1455  0814                     	;# 
  1456  081A                     	;# 
  1457  081B                     	;# 
  1458  081C                     	;# 
  1459  081D                     	;# 
  1460  081E                     	;# 
  1461  081F                     	;# 
  1462  088C                     	;# 
  1463  088D                     	;# 
  1464  088E                     	;# 
  1465  088F                     	;# 
  1466  0890                     	;# 
  1467  0891                     	;# 
  1468  0892                     	;# 
  1469  0893                     	;# 
  1470  0895                     	;# 
  1471  0896                     	;# 
  1472  0897                     	;# 
  1473  0898                     	;# 
  1474  0899                     	;# 
  1475  089A                     	;# 
  1476  089B                     	;# 
  1477  090C                     	;# 
  1478  090E                     	;# 
  1479  090F                     	;# 
  1480  091F                     	;# 
  1481  091F                     	;# 
  1482  098F                     	;# 
  1483  098F                     	;# 
  1484  0990                     	;# 
  1485  0991                     	;# 
  1486  0992                     	;# 
  1487  0993                     	;# 
  1488  0994                     	;# 
  1489  0995                     	;# 
  1490  0996                     	;# 
  1491  0997                     	;# 
  1492  0E0F                     	;# 
  1493  0E10                     	;# 
  1494  0E11                     	;# 
  1495  0E12                     	;# 
  1496  0E13                     	;# 
  1497  0E14                     	;# 
  1498  0E15                     	;# 
  1499  0E16                     	;# 
  1500  0E17                     	;# 
  1501  0E18                     	;# 
  1502  0E19                     	;# 
  1503  0E1A                     	;# 
  1504  0E1B                     	;# 
  1505  0E1C                     	;# 
  1506  0E1D                     	;# 
  1507  0E1E                     	;# 
  1508  0E1F                     	;# 
  1509  0E20                     	;# 
  1510  0E21                     	;# 
  1511  0E22                     	;# 
  1512  0E23                     	;# 
  1513  0E24                     	;# 
  1514  0E25                     	;# 
  1515  0E26                     	;# 
  1516  0E27                     	;# 
  1517  0E28                     	;# 
  1518  0E29                     	;# 
  1519  0E2A                     	;# 
  1520  0E2B                     	;# 
  1521  0E2C                     	;# 
  1522  0E2D                     	;# 
  1523  0E2E                     	;# 
  1524  0E2F                     	;# 
  1525  0E30                     	;# 
  1526  0E31                     	;# 
  1527  0E32                     	;# 
  1528  0E33                     	;# 
  1529  0E34                     	;# 
  1530  0E35                     	;# 
  1531  0E36                     	;# 
  1532  0E37                     	;# 
  1533  0E8F                     	;# 
  1534  0E90                     	;# 
  1535  0E91                     	;# 
  1536  0E92                     	;# 
  1537  0E93                     	;# 
  1538  0E94                     	;# 
  1539  0E95                     	;# 
  1540  0E96                     	;# 
  1541  0E97                     	;# 
  1542  0E9C                     	;# 
  1543  0E9D                     	;# 
  1544  0E9E                     	;# 
  1545  0EA1                     	;# 
  1546  0EA2                     	;# 
  1547  0EA3                     	;# 
  1548  0EA4                     	;# 
  1549  0EA5                     	;# 
  1550  0EA9                     	;# 
  1551  0EAA                     	;# 
  1552  0EAB                     	;# 
  1553  0EAC                     	;# 
  1554  0EB1                     	;# 
  1555  0EB2                     	;# 
  1556  0EB3                     	;# 
  1557  0EB8                     	;# 
  1558  0EB9                     	;# 
  1559  0EBA                     	;# 
  1560  0EBB                     	;# 
  1561  0EBC                     	;# 
  1562  0EBD                     	;# 
  1563  0EBE                     	;# 
  1564  0EC3                     	;# 
  1565  0EC5                     	;# 
  1566  0EC6                     	;# 
  1567  0EC7                     	;# 
  1568  0EC8                     	;# 
  1569  0EC9                     	;# 
  1570  0ECA                     	;# 
  1571  0ECB                     	;# 
  1572  0ECC                     	;# 
  1573  0F10                     	;# 
  1574  0F11                     	;# 
  1575  0F12                     	;# 
  1576  0F13                     	;# 
  1577  0F14                     	;# 
  1578  0F15                     	;# 
  1579  0F16                     	;# 
  1580  0F17                     	;# 
  1581  0F18                     	;# 
  1582  0F19                     	;# 
  1583  0F1A                     	;# 
  1584  0F1B                     	;# 
  1585  0F1C                     	;# 
  1586  0F1D                     	;# 
  1587  0F1E                     	;# 
  1588  0F1F                     	;# 
  1589  0F20                     	;# 
  1590  0F21                     	;# 
  1591  0F22                     	;# 
  1592  0F23                     	;# 
  1593  0F24                     	;# 
  1594  0F25                     	;# 
  1595  0F26                     	;# 
  1596  0F27                     	;# 
  1597  0F38                     	;# 
  1598  0F39                     	;# 
  1599  0F3A                     	;# 
  1600  0F3B                     	;# 
  1601  0F3C                     	;# 
  1602  0F3D                     	;# 
  1603  0F3E                     	;# 
  1604  0F3F                     	;# 
  1605  0F40                     	;# 
  1606  0F41                     	;# 
  1607  0F43                     	;# 
  1608  0F44                     	;# 
  1609  0F45                     	;# 
  1610  0F46                     	;# 
  1611  0F47                     	;# 
  1612  0F48                     	;# 
  1613  0F49                     	;# 
  1614  0F4A                     	;# 
  1615  0F4B                     	;# 
  1616  0F4C                     	;# 
  1617  0F4E                     	;# 
  1618  0F4F                     	;# 
  1619  0F50                     	;# 
  1620  0F51                     	;# 
  1621  0F52                     	;# 
  1622  0F53                     	;# 
  1623  0F54                     	;# 
  1624  0F55                     	;# 
  1625  0F56                     	;# 
  1626  0F57                     	;# 
  1627  0F65                     	;# 
  1628  0F68                     	;# 
  1629  0F69                     	;# 
  1630  0F6A                     	;# 
  1631  0F6B                     	;# 
  1632  0FE4                     	;# 
  1633  0FE5                     	;# 
  1634  0FE6                     	;# 
  1635  0FE7                     	;# 
  1636  0FE8                     	;# 
  1637  0FE9                     	;# 
  1638  0FEA                     	;# 
  1639  0FEB                     	;# 
  1640  0FED                     	;# 
  1641  0FEE                     	;# 
  1642  0FEF                     	;# 
  1643  0000                     	;# 
  1644  0001                     	;# 
  1645  0002                     	;# 
  1646  0003                     	;# 
  1647  0004                     	;# 
  1648  0005                     	;# 
  1649  0006                     	;# 
  1650  0007                     	;# 
  1651  0008                     	;# 
  1652  0009                     	;# 
  1653  000A                     	;# 
  1654  000B                     	;# 
  1655  000C                     	;# 
  1656  000D                     	;# 
  1657  000E                     	;# 
  1658  0010                     	;# 
  1659  0011                     	;# 
  1660  0012                     	;# 
  1661  0013                     	;# 
  1662  0016                     	;# 
  1663  0017                     	;# 
  1664  0018                     	;# 
  1665  001C                     	;# 
  1666  001C                     	;# 
  1667  001D                     	;# 
  1668  001D                     	;# 
  1669  001E                     	;# 
  1670  001F                     	;# 
  1671  008C                     	;# 
  1672  008C                     	;# 
  1673  008D                     	;# 
  1674  008E                     	;# 
  1675  008E                     	;# 
  1676  008F                     	;# 
  1677  0090                     	;# 
  1678  0090                     	;# 
  1679  0091                     	;# 
  1680  0093                     	;# 
  1681  0094                     	;# 
  1682  0095                     	;# 
  1683  0096                     	;# 
  1684  0097                     	;# 
  1685  0098                     	;# 
  1686  0099                     	;# 
  1687  009A                     	;# 
  1688  009B                     	;# 
  1689  009C                     	;# 
  1690  009D                     	;# 
  1691  009E                     	;# 
  1692  010C                     	;# 
  1693  010D                     	;# 
  1694  010E                     	;# 
  1695  010E                     	;# 
  1696  010F                     	;# 
  1697  0110                     	;# 
  1698  0110                     	;# 
  1699  0111                     	;# 
  1700  0112                     	;# 
  1701  0112                     	;# 
  1702  0113                     	;# 
  1703  0114                     	;# 
  1704  0114                     	;# 
  1705  0115                     	;# 
  1706  0116                     	;# 
  1707  0116                     	;# 
  1708  0117                     	;# 
  1709  0119                     	;# 
  1710  0119                     	;# 
  1711  0119                     	;# 
  1712  011A                     	;# 
  1713  011A                     	;# 
  1714  011A                     	;# 
  1715  011B                     	;# 
  1716  011B                     	;# 
  1717  011B                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011C                     	;# 
  1721  011C                     	;# 
  1722  011C                     	;# 
  1723  011D                     	;# 
  1724  011D                     	;# 
  1725  011D                     	;# 
  1726  011E                     	;# 
  1727  011E                     	;# 
  1728  011E                     	;# 
  1729  011F                     	;# 
  1730  011F                     	;# 
  1731  011F                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  018C                     	;# 
  1735  018D                     	;# 
  1736  018E                     	;# 
  1737  018F                     	;# 
  1738  0190                     	;# 
  1739  0191                     	;# 
  1740  0192                     	;# 
  1741  0196                     	;# 
  1742  0197                     	;# 
  1743  0198                     	;# 
  1744  0199                     	;# 
  1745  019A                     	;# 
  1746  019B                     	;# 
  1747  019C                     	;# 
  1748  020C                     	;# 
  1749  020C                     	;# 
  1750  020D                     	;# 
  1751  020E                     	;# 
  1752  020F                     	;# 
  1753  020F                     	;# 
  1754  0210                     	;# 
  1755  0210                     	;# 
  1756  0211                     	;# 
  1757  0211                     	;# 
  1758  0212                     	;# 
  1759  0212                     	;# 
  1760  0213                     	;# 
  1761  0214                     	;# 
  1762  0215                     	;# 
  1763  0215                     	;# 
  1764  0216                     	;# 
  1765  0216                     	;# 
  1766  0217                     	;# 
  1767  0217                     	;# 
  1768  0218                     	;# 
  1769  0218                     	;# 
  1770  0219                     	;# 
  1771  021A                     	;# 
  1772  021B                     	;# 
  1773  021B                     	;# 
  1774  021C                     	;# 
  1775  021C                     	;# 
  1776  021D                     	;# 
  1777  021D                     	;# 
  1778  021E                     	;# 
  1779  021F                     	;# 
  1780  028C                     	;# 
  1781  028C                     	;# 
  1782  028D                     	;# 
  1783  028D                     	;# 
  1784  028E                     	;# 
  1785  028F                     	;# 
  1786  0290                     	;# 
  1787  0290                     	;# 
  1788  0291                     	;# 
  1789  0292                     	;# 
  1790  0292                     	;# 
  1791  0293                     	;# 
  1792  0293                     	;# 
  1793  0294                     	;# 
  1794  0295                     	;# 
  1795  0296                     	;# 
  1796  0296                     	;# 
  1797  0297                     	;# 
  1798  0298                     	;# 
  1799  0298                     	;# 
  1800  0299                     	;# 
  1801  0299                     	;# 
  1802  029A                     	;# 
  1803  029B                     	;# 
  1804  029C                     	;# 
  1805  029C                     	;# 
  1806  029D                     	;# 
  1807  030C                     	;# 
  1808  030C                     	;# 
  1809  030D                     	;# 
  1810  030E                     	;# 
  1811  030F                     	;# 
  1812  0310                     	;# 
  1813  0310                     	;# 
  1814  0311                     	;# 
  1815  0312                     	;# 
  1816  0313                     	;# 
  1817  0314                     	;# 
  1818  0314                     	;# 
  1819  0315                     	;# 
  1820  0316                     	;# 
  1821  0317                     	;# 
  1822  0318                     	;# 
  1823  0318                     	;# 
  1824  0319                     	;# 
  1825  031A                     	;# 
  1826  031B                     	;# 
  1827  031C                     	;# 
  1828  031C                     	;# 
  1829  031D                     	;# 
  1830  031E                     	;# 
  1831  031F                     	;# 
  1832  038C                     	;# 
  1833  038D                     	;# 
  1834  038E                     	;# 
  1835  0390                     	;# 
  1836  0391                     	;# 
  1837  0392                     	;# 
  1838  040C                     	;# 
  1839  040D                     	;# 
  1840  040E                     	;# 
  1841  040F                     	;# 
  1842  0410                     	;# 
  1843  0411                     	;# 
  1844  0416                     	;# 
  1845  0416                     	;# 
  1846  0417                     	;# 
  1847  0418                     	;# 
  1848  0418                     	;# 
  1849  0419                     	;# 
  1850  041A                     	;# 
  1851  041A                     	;# 
  1852  041B                     	;# 
  1853  041C                     	;# 
  1854  041C                     	;# 
  1855  041D                     	;# 
  1856  041E                     	;# 
  1857  041F                     	;# 
  1858  048C                     	;# 
  1859  048C                     	;# 
  1860  048D                     	;# 
  1861  048E                     	;# 
  1862  048F                     	;# 
  1863  048F                     	;# 
  1864  0490                     	;# 
  1865  0491                     	;# 
  1866  0492                     	;# 
  1867  0492                     	;# 
  1868  0493                     	;# 
  1869  0494                     	;# 
  1870  0495                     	;# 
  1871  0495                     	;# 
  1872  0496                     	;# 
  1873  0497                     	;# 
  1874  0498                     	;# 
  1875  0499                     	;# 
  1876  049A                     	;# 
  1877  049B                     	;# 
  1878  049C                     	;# 
  1879  049D                     	;# 
  1880  050C                     	;# 
  1881  050C                     	;# 
  1882  050D                     	;# 
  1883  050E                     	;# 
  1884  050F                     	;# 
  1885  050F                     	;# 
  1886  0510                     	;# 
  1887  0511                     	;# 
  1888  0512                     	;# 
  1889  0512                     	;# 
  1890  0513                     	;# 
  1891  0514                     	;# 
  1892  0515                     	;# 
  1893  0515                     	;# 
  1894  0516                     	;# 
  1895  0517                     	;# 
  1896  0518                     	;# 
  1897  0519                     	;# 
  1898  051A                     	;# 
  1899  051B                     	;# 
  1900  051C                     	;# 
  1901  051D                     	;# 
  1902  058C                     	;# 
  1903  058C                     	;# 
  1904  058D                     	;# 
  1905  058E                     	;# 
  1906  058F                     	;# 
  1907  058F                     	;# 
  1908  0590                     	;# 
  1909  0591                     	;# 
  1910  0592                     	;# 
  1911  0593                     	;# 
  1912  060C                     	;# 
  1913  060D                     	;# 
  1914  060E                     	;# 
  1915  060F                     	;# 
  1916  0610                     	;# 
  1917  0611                     	;# 
  1918  0612                     	;# 
  1919  0613                     	;# 
  1920  0614                     	;# 
  1921  0616                     	;# 
  1922  0617                     	;# 
  1923  0618                     	;# 
  1924  0619                     	;# 
  1925  061A                     	;# 
  1926  061B                     	;# 
  1927  061C                     	;# 
  1928  061D                     	;# 
  1929  061E                     	;# 
  1930  068C                     	;# 
  1931  068D                     	;# 
  1932  068E                     	;# 
  1933  068F                     	;# 
  1934  0690                     	;# 
  1935  0691                     	;# 
  1936  0692                     	;# 
  1937  0693                     	;# 
  1938  0694                     	;# 
  1939  070C                     	;# 
  1940  070D                     	;# 
  1941  070E                     	;# 
  1942  070F                     	;# 
  1943  0710                     	;# 
  1944  0711                     	;# 
  1945  0712                     	;# 
  1946  0713                     	;# 
  1947  0714                     	;# 
  1948  0716                     	;# 
  1949  0717                     	;# 
  1950  0718                     	;# 
  1951  0719                     	;# 
  1952  071A                     	;# 
  1953  071B                     	;# 
  1954  071C                     	;# 
  1955  071D                     	;# 
  1956  071E                     	;# 
  1957  0796                     	;# 
  1958  0797                     	;# 
  1959  0798                     	;# 
  1960  0799                     	;# 
  1961  079A                     	;# 
  1962  079B                     	;# 
  1963  080C                     	;# 
  1964  080D                     	;# 
  1965  080E                     	;# 
  1966  080F                     	;# 
  1967  0810                     	;# 
  1968  0811                     	;# 
  1969  0812                     	;# 
  1970  0813                     	;# 
  1971  0814                     	;# 
  1972  081A                     	;# 
  1973  081B                     	;# 
  1974  081C                     	;# 
  1975  081D                     	;# 
  1976  081E                     	;# 
  1977  081F                     	;# 
  1978  088C                     	;# 
  1979  088D                     	;# 
  1980  088E                     	;# 
  1981  088F                     	;# 
  1982  0890                     	;# 
  1983  0891                     	;# 
  1984  0892                     	;# 
  1985  0893                     	;# 
  1986  0895                     	;# 
  1987  0896                     	;# 
  1988  0897                     	;# 
  1989  0898                     	;# 
  1990  0899                     	;# 
  1991  089A                     	;# 
  1992  089B                     	;# 
  1993  090C                     	;# 
  1994  090E                     	;# 
  1995  090F                     	;# 
  1996  091F                     	;# 
  1997  091F                     	;# 
  1998  098F                     	;# 
  1999  098F                     	;# 
  2000  0990                     	;# 
  2001  0991                     	;# 
  2002  0992                     	;# 
  2003  0993                     	;# 
  2004  0994                     	;# 
  2005  0995                     	;# 
  2006  0996                     	;# 
  2007  0997                     	;# 
  2008  0E0F                     	;# 
  2009  0E10                     	;# 
  2010  0E11                     	;# 
  2011  0E12                     	;# 
  2012  0E13                     	;# 
  2013  0E14                     	;# 
  2014  0E15                     	;# 
  2015  0E16                     	;# 
  2016  0E17                     	;# 
  2017  0E18                     	;# 
  2018  0E19                     	;# 
  2019  0E1A                     	;# 
  2020  0E1B                     	;# 
  2021  0E1C                     	;# 
  2022  0E1D                     	;# 
  2023  0E1E                     	;# 
  2024  0E1F                     	;# 
  2025  0E20                     	;# 
  2026  0E21                     	;# 
  2027  0E22                     	;# 
  2028  0E23                     	;# 
  2029  0E24                     	;# 
  2030  0E25                     	;# 
  2031  0E26                     	;# 
  2032  0E27                     	;# 
  2033  0E28                     	;# 
  2034  0E29                     	;# 
  2035  0E2A                     	;# 
  2036  0E2B                     	;# 
  2037  0E2C                     	;# 
  2038  0E2D                     	;# 
  2039  0E2E                     	;# 
  2040  0E2F                     	;# 
  2041  0E30                     	;# 
  2042  0E31                     	;# 
  2043  0E32                     	;# 
  2044  0E33                     	;# 
  2045  0E34                     	;# 
  2046  0E35                     	;# 
  2047  0E36                     	;# 
  2048  0E37                     	;# 
  2049  0E8F                     	;# 
  2050  0E90                     	;# 
  2051  0E91                     	;# 
  2052  0E92                     	;# 
  2053  0E93                     	;# 
  2054  0E94                     	;# 
  2055  0E95                     	;# 
  2056  0E96                     	;# 
  2057  0E97                     	;# 
  2058  0E9C                     	;# 
  2059  0E9D                     	;# 
  2060  0E9E                     	;# 
  2061  0EA1                     	;# 
  2062  0EA2                     	;# 
  2063  0EA3                     	;# 
  2064  0EA4                     	;# 
  2065  0EA5                     	;# 
  2066  0EA9                     	;# 
  2067  0EAA                     	;# 
  2068  0EAB                     	;# 
  2069  0EAC                     	;# 
  2070  0EB1                     	;# 
  2071  0EB2                     	;# 
  2072  0EB3                     	;# 
  2073  0EB8                     	;# 
  2074  0EB9                     	;# 
  2075  0EBA                     	;# 
  2076  0EBB                     	;# 
  2077  0EBC                     	;# 
  2078  0EBD                     	;# 
  2079  0EBE                     	;# 
  2080  0EC3                     	;# 
  2081  0EC5                     	;# 
  2082  0EC6                     	;# 
  2083  0EC7                     	;# 
  2084  0EC8                     	;# 
  2085  0EC9                     	;# 
  2086  0ECA                     	;# 
  2087  0ECB                     	;# 
  2088  0ECC                     	;# 
  2089  0F10                     	;# 
  2090  0F11                     	;# 
  2091  0F12                     	;# 
  2092  0F13                     	;# 
  2093  0F14                     	;# 
  2094  0F15                     	;# 
  2095  0F16                     	;# 
  2096  0F17                     	;# 
  2097  0F18                     	;# 
  2098  0F19                     	;# 
  2099  0F1A                     	;# 
  2100  0F1B                     	;# 
  2101  0F1C                     	;# 
  2102  0F1D                     	;# 
  2103  0F1E                     	;# 
  2104  0F1F                     	;# 
  2105  0F20                     	;# 
  2106  0F21                     	;# 
  2107  0F22                     	;# 
  2108  0F23                     	;# 
  2109  0F24                     	;# 
  2110  0F25                     	;# 
  2111  0F26                     	;# 
  2112  0F27                     	;# 
  2113  0F38                     	;# 
  2114  0F39                     	;# 
  2115  0F3A                     	;# 
  2116  0F3B                     	;# 
  2117  0F3C                     	;# 
  2118  0F3D                     	;# 
  2119  0F3E                     	;# 
  2120  0F3F                     	;# 
  2121  0F40                     	;# 
  2122  0F41                     	;# 
  2123  0F43                     	;# 
  2124  0F44                     	;# 
  2125  0F45                     	;# 
  2126  0F46                     	;# 
  2127  0F47                     	;# 
  2128  0F48                     	;# 
  2129  0F49                     	;# 
  2130  0F4A                     	;# 
  2131  0F4B                     	;# 
  2132  0F4C                     	;# 
  2133  0F4E                     	;# 
  2134  0F4F                     	;# 
  2135  0F50                     	;# 
  2136  0F51                     	;# 
  2137  0F52                     	;# 
  2138  0F53                     	;# 
  2139  0F54                     	;# 
  2140  0F55                     	;# 
  2141  0F56                     	;# 
  2142  0F57                     	;# 
  2143  0F65                     	;# 
  2144  0F68                     	;# 
  2145  0F69                     	;# 
  2146  0F6A                     	;# 
  2147  0F6B                     	;# 
  2148  0FE4                     	;# 
  2149  0FE5                     	;# 
  2150  0FE6                     	;# 
  2151  0FE7                     	;# 
  2152  0FE8                     	;# 
  2153  0FE9                     	;# 
  2154  0FEA                     	;# 
  2155  0FEB                     	;# 
  2156  0FED                     	;# 
  2157  0FEE                     	;# 
  2158  0FEF                     	;# 
  2159  0000                     	;# 
  2160  0001                     	;# 
  2161  0002                     	;# 
  2162  0003                     	;# 
  2163  0004                     	;# 
  2164  0005                     	;# 
  2165  0006                     	;# 
  2166  0007                     	;# 
  2167  0008                     	;# 
  2168  0009                     	;# 
  2169  000A                     	;# 
  2170  000B                     	;# 
  2171  000C                     	;# 
  2172  000D                     	;# 
  2173  000E                     	;# 
  2174  0010                     	;# 
  2175  0011                     	;# 
  2176  0012                     	;# 
  2177  0013                     	;# 
  2178  0016                     	;# 
  2179  0017                     	;# 
  2180  0018                     	;# 
  2181  001C                     	;# 
  2182  001C                     	;# 
  2183  001D                     	;# 
  2184  001D                     	;# 
  2185  001E                     	;# 
  2186  001F                     	;# 
  2187  008C                     	;# 
  2188  008C                     	;# 
  2189  008D                     	;# 
  2190  008E                     	;# 
  2191  008E                     	;# 
  2192  008F                     	;# 
  2193  0090                     	;# 
  2194  0090                     	;# 
  2195  0091                     	;# 
  2196  0093                     	;# 
  2197  0094                     	;# 
  2198  0095                     	;# 
  2199  0096                     	;# 
  2200  0097                     	;# 
  2201  0098                     	;# 
  2202  0099                     	;# 
  2203  009A                     	;# 
  2204  009B                     	;# 
  2205  009C                     	;# 
  2206  009D                     	;# 
  2207  009E                     	;# 
  2208  010C                     	;# 
  2209  010D                     	;# 
  2210  010E                     	;# 
  2211  010E                     	;# 
  2212  010F                     	;# 
  2213  0110                     	;# 
  2214  0110                     	;# 
  2215  0111                     	;# 
  2216  0112                     	;# 
  2217  0112                     	;# 
  2218  0113                     	;# 
  2219  0114                     	;# 
  2220  0114                     	;# 
  2221  0115                     	;# 
  2222  0116                     	;# 
  2223  0116                     	;# 
  2224  0117                     	;# 
  2225  0119                     	;# 
  2226  0119                     	;# 
  2227  0119                     	;# 
  2228  011A                     	;# 
  2229  011A                     	;# 
  2230  011A                     	;# 
  2231  011B                     	;# 
  2232  011B                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011C                     	;# 
  2237  011C                     	;# 
  2238  011C                     	;# 
  2239  011D                     	;# 
  2240  011D                     	;# 
  2241  011D                     	;# 
  2242  011E                     	;# 
  2243  011E                     	;# 
  2244  011E                     	;# 
  2245  011F                     	;# 
  2246  011F                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  018C                     	;# 
  2251  018D                     	;# 
  2252  018E                     	;# 
  2253  018F                     	;# 
  2254  0190                     	;# 
  2255  0191                     	;# 
  2256  0192                     	;# 
  2257  0196                     	;# 
  2258  0197                     	;# 
  2259  0198                     	;# 
  2260  0199                     	;# 
  2261  019A                     	;# 
  2262  019B                     	;# 
  2263  019C                     	;# 
  2264  020C                     	;# 
  2265  020C                     	;# 
  2266  020D                     	;# 
  2267  020E                     	;# 
  2268  020F                     	;# 
  2269  020F                     	;# 
  2270  0210                     	;# 
  2271  0210                     	;# 
  2272  0211                     	;# 
  2273  0211                     	;# 
  2274  0212                     	;# 
  2275  0212                     	;# 
  2276  0213                     	;# 
  2277  0214                     	;# 
  2278  0215                     	;# 
  2279  0215                     	;# 
  2280  0216                     	;# 
  2281  0216                     	;# 
  2282  0217                     	;# 
  2283  0217                     	;# 
  2284  0218                     	;# 
  2285  0218                     	;# 
  2286  0219                     	;# 
  2287  021A                     	;# 
  2288  021B                     	;# 
  2289  021B                     	;# 
  2290  021C                     	;# 
  2291  021C                     	;# 
  2292  021D                     	;# 
  2293  021D                     	;# 
  2294  021E                     	;# 
  2295  021F                     	;# 
  2296  028C                     	;# 
  2297  028C                     	;# 
  2298  028D                     	;# 
  2299  028D                     	;# 
  2300  028E                     	;# 
  2301  028F                     	;# 
  2302  0290                     	;# 
  2303  0290                     	;# 
  2304  0291                     	;# 
  2305  0292                     	;# 
  2306  0292                     	;# 
  2307  0293                     	;# 
  2308  0293                     	;# 
  2309  0294                     	;# 
  2310  0295                     	;# 
  2311  0296                     	;# 
  2312  0296                     	;# 
  2313  0297                     	;# 
  2314  0298                     	;# 
  2315  0298                     	;# 
  2316  0299                     	;# 
  2317  0299                     	;# 
  2318  029A                     	;# 
  2319  029B                     	;# 
  2320  029C                     	;# 
  2321  029C                     	;# 
  2322  029D                     	;# 
  2323  030C                     	;# 
  2324  030C                     	;# 
  2325  030D                     	;# 
  2326  030E                     	;# 
  2327  030F                     	;# 
  2328  0310                     	;# 
  2329  0310                     	;# 
  2330  0311                     	;# 
  2331  0312                     	;# 
  2332  0313                     	;# 
  2333  0314                     	;# 
  2334  0314                     	;# 
  2335  0315                     	;# 
  2336  0316                     	;# 
  2337  0317                     	;# 
  2338  0318                     	;# 
  2339  0318                     	;# 
  2340  0319                     	;# 
  2341  031A                     	;# 
  2342  031B                     	;# 
  2343  031C                     	;# 
  2344  031C                     	;# 
  2345  031D                     	;# 
  2346  031E                     	;# 
  2347  031F                     	;# 
  2348  038C                     	;# 
  2349  038D                     	;# 
  2350  038E                     	;# 
  2351  0390                     	;# 
  2352  0391                     	;# 
  2353  0392                     	;# 
  2354  040C                     	;# 
  2355  040D                     	;# 
  2356  040E                     	;# 
  2357  040F                     	;# 
  2358  0410                     	;# 
  2359  0411                     	;# 
  2360  0416                     	;# 
  2361  0416                     	;# 
  2362  0417                     	;# 
  2363  0418                     	;# 
  2364  0418                     	;# 
  2365  0419                     	;# 
  2366  041A                     	;# 
  2367  041A                     	;# 
  2368  041B                     	;# 
  2369  041C                     	;# 
  2370  041C                     	;# 
  2371  041D                     	;# 
  2372  041E                     	;# 
  2373  041F                     	;# 
  2374  048C                     	;# 
  2375  048C                     	;# 
  2376  048D                     	;# 
  2377  048E                     	;# 
  2378  048F                     	;# 
  2379  048F                     	;# 
  2380  0490                     	;# 
  2381  0491                     	;# 
  2382  0492                     	;# 
  2383  0492                     	;# 
  2384  0493                     	;# 
  2385  0494                     	;# 
  2386  0495                     	;# 
  2387  0495                     	;# 
  2388  0496                     	;# 
  2389  0497                     	;# 
  2390  0498                     	;# 
  2391  0499                     	;# 
  2392  049A                     	;# 
  2393  049B                     	;# 
  2394  049C                     	;# 
  2395  049D                     	;# 
  2396  050C                     	;# 
  2397  050C                     	;# 
  2398  050D                     	;# 
  2399  050E                     	;# 
  2400  050F                     	;# 
  2401  050F                     	;# 
  2402  0510                     	;# 
  2403  0511                     	;# 
  2404  0512                     	;# 
  2405  0512                     	;# 
  2406  0513                     	;# 
  2407  0514                     	;# 
  2408  0515                     	;# 
  2409  0515                     	;# 
  2410  0516                     	;# 
  2411  0517                     	;# 
  2412  0518                     	;# 
  2413  0519                     	;# 
  2414  051A                     	;# 
  2415  051B                     	;# 
  2416  051C                     	;# 
  2417  051D                     	;# 
  2418  058C                     	;# 
  2419  058C                     	;# 
  2420  058D                     	;# 
  2421  058E                     	;# 
  2422  058F                     	;# 
  2423  058F                     	;# 
  2424  0590                     	;# 
  2425  0591                     	;# 
  2426  0592                     	;# 
  2427  0593                     	;# 
  2428  060C                     	;# 
  2429  060D                     	;# 
  2430  060E                     	;# 
  2431  060F                     	;# 
  2432  0610                     	;# 
  2433  0611                     	;# 
  2434  0612                     	;# 
  2435  0613                     	;# 
  2436  0614                     	;# 
  2437  0616                     	;# 
  2438  0617                     	;# 
  2439  0618                     	;# 
  2440  0619                     	;# 
  2441  061A                     	;# 
  2442  061B                     	;# 
  2443  061C                     	;# 
  2444  061D                     	;# 
  2445  061E                     	;# 
  2446  068C                     	;# 
  2447  068D                     	;# 
  2448  068E                     	;# 
  2449  068F                     	;# 
  2450  0690                     	;# 
  2451  0691                     	;# 
  2452  0692                     	;# 
  2453  0693                     	;# 
  2454  0694                     	;# 
  2455  070C                     	;# 
  2456  070D                     	;# 
  2457  070E                     	;# 
  2458  070F                     	;# 
  2459  0710                     	;# 
  2460  0711                     	;# 
  2461  0712                     	;# 
  2462  0713                     	;# 
  2463  0714                     	;# 
  2464  0716                     	;# 
  2465  0717                     	;# 
  2466  0718                     	;# 
  2467  0719                     	;# 
  2468  071A                     	;# 
  2469  071B                     	;# 
  2470  071C                     	;# 
  2471  071D                     	;# 
  2472  071E                     	;# 
  2473  0796                     	;# 
  2474  0797                     	;# 
  2475  0798                     	;# 
  2476  0799                     	;# 
  2477  079A                     	;# 
  2478  079B                     	;# 
  2479  080C                     	;# 
  2480  080D                     	;# 
  2481  080E                     	;# 
  2482  080F                     	;# 
  2483  0810                     	;# 
  2484  0811                     	;# 
  2485  0812                     	;# 
  2486  0813                     	;# 
  2487  0814                     	;# 
  2488  081A                     	;# 
  2489  081B                     	;# 
  2490  081C                     	;# 
  2491  081D                     	;# 
  2492  081E                     	;# 
  2493  081F                     	;# 
  2494  088C                     	;# 
  2495  088D                     	;# 
  2496  088E                     	;# 
  2497  088F                     	;# 
  2498  0890                     	;# 
  2499  0891                     	;# 
  2500  0892                     	;# 
  2501  0893                     	;# 
  2502  0895                     	;# 
  2503  0896                     	;# 
  2504  0897                     	;# 
  2505  0898                     	;# 
  2506  0899                     	;# 
  2507  089A                     	;# 
  2508  089B                     	;# 
  2509  090C                     	;# 
  2510  090E                     	;# 
  2511  090F                     	;# 
  2512  091F                     	;# 
  2513  091F                     	;# 
  2514  098F                     	;# 
  2515  098F                     	;# 
  2516  0990                     	;# 
  2517  0991                     	;# 
  2518  0992                     	;# 
  2519  0993                     	;# 
  2520  0994                     	;# 
  2521  0995                     	;# 
  2522  0996                     	;# 
  2523  0997                     	;# 
  2524  0E0F                     	;# 
  2525  0E10                     	;# 
  2526  0E11                     	;# 
  2527  0E12                     	;# 
  2528  0E13                     	;# 
  2529  0E14                     	;# 
  2530  0E15                     	;# 
  2531  0E16                     	;# 
  2532  0E17                     	;# 
  2533  0E18                     	;# 
  2534  0E19                     	;# 
  2535  0E1A                     	;# 
  2536  0E1B                     	;# 
  2537  0E1C                     	;# 
  2538  0E1D                     	;# 
  2539  0E1E                     	;# 
  2540  0E1F                     	;# 
  2541  0E20                     	;# 
  2542  0E21                     	;# 
  2543  0E22                     	;# 
  2544  0E23                     	;# 
  2545  0E24                     	;# 
  2546  0E25                     	;# 
  2547  0E26                     	;# 
  2548  0E27                     	;# 
  2549  0E28                     	;# 
  2550  0E29                     	;# 
  2551  0E2A                     	;# 
  2552  0E2B                     	;# 
  2553  0E2C                     	;# 
  2554  0E2D                     	;# 
  2555  0E2E                     	;# 
  2556  0E2F                     	;# 
  2557  0E30                     	;# 
  2558  0E31                     	;# 
  2559  0E32                     	;# 
  2560  0E33                     	;# 
  2561  0E34                     	;# 
  2562  0E35                     	;# 
  2563  0E36                     	;# 
  2564  0E37                     	;# 
  2565  0E8F                     	;# 
  2566  0E90                     	;# 
  2567  0E91                     	;# 
  2568  0E92                     	;# 
  2569  0E93                     	;# 
  2570  0E94                     	;# 
  2571  0E95                     	;# 
  2572  0E96                     	;# 
  2573  0E97                     	;# 
  2574  0E9C                     	;# 
  2575  0E9D                     	;# 
  2576  0E9E                     	;# 
  2577  0EA1                     	;# 
  2578  0EA2                     	;# 
  2579  0EA3                     	;# 
  2580  0EA4                     	;# 
  2581  0EA5                     	;# 
  2582  0EA9                     	;# 
  2583  0EAA                     	;# 
  2584  0EAB                     	;# 
  2585  0EAC                     	;# 
  2586  0EB1                     	;# 
  2587  0EB2                     	;# 
  2588  0EB3                     	;# 
  2589  0EB8                     	;# 
  2590  0EB9                     	;# 
  2591  0EBA                     	;# 
  2592  0EBB                     	;# 
  2593  0EBC                     	;# 
  2594  0EBD                     	;# 
  2595  0EBE                     	;# 
  2596  0EC3                     	;# 
  2597  0EC5                     	;# 
  2598  0EC6                     	;# 
  2599  0EC7                     	;# 
  2600  0EC8                     	;# 
  2601  0EC9                     	;# 
  2602  0ECA                     	;# 
  2603  0ECB                     	;# 
  2604  0ECC                     	;# 
  2605  0F10                     	;# 
  2606  0F11                     	;# 
  2607  0F12                     	;# 
  2608  0F13                     	;# 
  2609  0F14                     	;# 
  2610  0F15                     	;# 
  2611  0F16                     	;# 
  2612  0F17                     	;# 
  2613  0F18                     	;# 
  2614  0F19                     	;# 
  2615  0F1A                     	;# 
  2616  0F1B                     	;# 
  2617  0F1C                     	;# 
  2618  0F1D                     	;# 
  2619  0F1E                     	;# 
  2620  0F1F                     	;# 
  2621  0F20                     	;# 
  2622  0F21                     	;# 
  2623  0F22                     	;# 
  2624  0F23                     	;# 
  2625  0F24                     	;# 
  2626  0F25                     	;# 
  2627  0F26                     	;# 
  2628  0F27                     	;# 
  2629  0F38                     	;# 
  2630  0F39                     	;# 
  2631  0F3A                     	;# 
  2632  0F3B                     	;# 
  2633  0F3C                     	;# 
  2634  0F3D                     	;# 
  2635  0F3E                     	;# 
  2636  0F3F                     	;# 
  2637  0F40                     	;# 
  2638  0F41                     	;# 
  2639  0F43                     	;# 
  2640  0F44                     	;# 
  2641  0F45                     	;# 
  2642  0F46                     	;# 
  2643  0F47                     	;# 
  2644  0F48                     	;# 
  2645  0F49                     	;# 
  2646  0F4A                     	;# 
  2647  0F4B                     	;# 
  2648  0F4C                     	;# 
  2649  0F4E                     	;# 
  2650  0F4F                     	;# 
  2651  0F50                     	;# 
  2652  0F51                     	;# 
  2653  0F52                     	;# 
  2654  0F53                     	;# 
  2655  0F54                     	;# 
  2656  0F55                     	;# 
  2657  0F56                     	;# 
  2658  0F57                     	;# 
  2659  0F65                     	;# 
  2660  0F68                     	;# 
  2661  0F69                     	;# 
  2662  0F6A                     	;# 
  2663  0F6B                     	;# 
  2664  0FE4                     	;# 
  2665  0FE5                     	;# 
  2666  0FE6                     	;# 
  2667  0FE7                     	;# 
  2668  0FE8                     	;# 
  2669  0FE9                     	;# 
  2670  0FEA                     	;# 
  2671  0FEB                     	;# 
  2672  0FED                     	;# 
  2673  0FEE                     	;# 
  2674  0FEF                     	;# 
  2675  0000                     	;# 
  2676  0001                     	;# 
  2677  0002                     	;# 
  2678  0003                     	;# 
  2679  0004                     	;# 
  2680  0005                     	;# 
  2681  0006                     	;# 
  2682  0007                     	;# 
  2683  0008                     	;# 
  2684  0009                     	;# 
  2685  000A                     	;# 
  2686  000B                     	;# 
  2687  000C                     	;# 
  2688  000D                     	;# 
  2689  000E                     	;# 
  2690  0010                     	;# 
  2691  0011                     	;# 
  2692  0012                     	;# 
  2693  0013                     	;# 
  2694  0016                     	;# 
  2695  0017                     	;# 
  2696  0018                     	;# 
  2697  001C                     	;# 
  2698  001C                     	;# 
  2699  001D                     	;# 
  2700  001D                     	;# 
  2701  001E                     	;# 
  2702  001F                     	;# 
  2703  008C                     	;# 
  2704  008C                     	;# 
  2705  008D                     	;# 
  2706  008E                     	;# 
  2707  008E                     	;# 
  2708  008F                     	;# 
  2709  0090                     	;# 
  2710  0090                     	;# 
  2711  0091                     	;# 
  2712  0093                     	;# 
  2713  0094                     	;# 
  2714  0095                     	;# 
  2715  0096                     	;# 
  2716  0097                     	;# 
  2717  0098                     	;# 
  2718  0099                     	;# 
  2719  009A                     	;# 
  2720  009B                     	;# 
  2721  009C                     	;# 
  2722  009D                     	;# 
  2723  009E                     	;# 
  2724  010C                     	;# 
  2725  010D                     	;# 
  2726  010E                     	;# 
  2727  010E                     	;# 
  2728  010F                     	;# 
  2729  0110                     	;# 
  2730  0110                     	;# 
  2731  0111                     	;# 
  2732  0112                     	;# 
  2733  0112                     	;# 
  2734  0113                     	;# 
  2735  0114                     	;# 
  2736  0114                     	;# 
  2737  0115                     	;# 
  2738  0116                     	;# 
  2739  0116                     	;# 
  2740  0117                     	;# 
  2741  0119                     	;# 
  2742  0119                     	;# 
  2743  0119                     	;# 
  2744  011A                     	;# 
  2745  011A                     	;# 
  2746  011A                     	;# 
  2747  011B                     	;# 
  2748  011B                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011C                     	;# 
  2753  011C                     	;# 
  2754  011C                     	;# 
  2755  011D                     	;# 
  2756  011D                     	;# 
  2757  011D                     	;# 
  2758  011E                     	;# 
  2759  011E                     	;# 
  2760  011E                     	;# 
  2761  011F                     	;# 
  2762  011F                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  018C                     	;# 
  2767  018D                     	;# 
  2768  018E                     	;# 
  2769  018F                     	;# 
  2770  0190                     	;# 
  2771  0191                     	;# 
  2772  0192                     	;# 
  2773  0196                     	;# 
  2774  0197                     	;# 
  2775  0198                     	;# 
  2776  0199                     	;# 
  2777  019A                     	;# 
  2778  019B                     	;# 
  2779  019C                     	;# 
  2780  020C                     	;# 
  2781  020C                     	;# 
  2782  020D                     	;# 
  2783  020E                     	;# 
  2784  020F                     	;# 
  2785  020F                     	;# 
  2786  0210                     	;# 
  2787  0210                     	;# 
  2788  0211                     	;# 
  2789  0211                     	;# 
  2790  0212                     	;# 
  2791  0212                     	;# 
  2792  0213                     	;# 
  2793  0214                     	;# 
  2794  0215                     	;# 
  2795  0215                     	;# 
  2796  0216                     	;# 
  2797  0216                     	;# 
  2798  0217                     	;# 
  2799  0217                     	;# 
  2800  0218                     	;# 
  2801  0218                     	;# 
  2802  0219                     	;# 
  2803  021A                     	;# 
  2804  021B                     	;# 
  2805  021B                     	;# 
  2806  021C                     	;# 
  2807  021C                     	;# 
  2808  021D                     	;# 
  2809  021D                     	;# 
  2810  021E                     	;# 
  2811  021F                     	;# 
  2812  028C                     	;# 
  2813  028C                     	;# 
  2814  028D                     	;# 
  2815  028D                     	;# 
  2816  028E                     	;# 
  2817  028F                     	;# 
  2818  0290                     	;# 
  2819  0290                     	;# 
  2820  0291                     	;# 
  2821  0292                     	;# 
  2822  0292                     	;# 
  2823  0293                     	;# 
  2824  0293                     	;# 
  2825  0294                     	;# 
  2826  0295                     	;# 
  2827  0296                     	;# 
  2828  0296                     	;# 
  2829  0297                     	;# 
  2830  0298                     	;# 
  2831  0298                     	;# 
  2832  0299                     	;# 
  2833  0299                     	;# 
  2834  029A                     	;# 
  2835  029B                     	;# 
  2836  029C                     	;# 
  2837  029C                     	;# 
  2838  029D                     	;# 
  2839  030C                     	;# 
  2840  030C                     	;# 
  2841  030D                     	;# 
  2842  030E                     	;# 
  2843  030F                     	;# 
  2844  0310                     	;# 
  2845  0310                     	;# 
  2846  0311                     	;# 
  2847  0312                     	;# 
  2848  0313                     	;# 
  2849  0314                     	;# 
  2850  0314                     	;# 
  2851  0315                     	;# 
  2852  0316                     	;# 
  2853  0317                     	;# 
  2854  0318                     	;# 
  2855  0318                     	;# 
  2856  0319                     	;# 
  2857  031A                     	;# 
  2858  031B                     	;# 
  2859  031C                     	;# 
  2860  031C                     	;# 
  2861  031D                     	;# 
  2862  031E                     	;# 
  2863  031F                     	;# 
  2864  038C                     	;# 
  2865  038D                     	;# 
  2866  038E                     	;# 
  2867  0390                     	;# 
  2868  0391                     	;# 
  2869  0392                     	;# 
  2870  040C                     	;# 
  2871  040D                     	;# 
  2872  040E                     	;# 
  2873  040F                     	;# 
  2874  0410                     	;# 
  2875  0411                     	;# 
  2876  0416                     	;# 
  2877  0416                     	;# 
  2878  0417                     	;# 
  2879  0418                     	;# 
  2880  0418                     	;# 
  2881  0419                     	;# 
  2882  041A                     	;# 
  2883  041A                     	;# 
  2884  041B                     	;# 
  2885  041C                     	;# 
  2886  041C                     	;# 
  2887  041D                     	;# 
  2888  041E                     	;# 
  2889  041F                     	;# 
  2890  048C                     	;# 
  2891  048C                     	;# 
  2892  048D                     	;# 
  2893  048E                     	;# 
  2894  048F                     	;# 
  2895  048F                     	;# 
  2896  0490                     	;# 
  2897  0491                     	;# 
  2898  0492                     	;# 
  2899  0492                     	;# 
  2900  0493                     	;# 
  2901  0494                     	;# 
  2902  0495                     	;# 
  2903  0495                     	;# 
  2904  0496                     	;# 
  2905  0497                     	;# 
  2906  0498                     	;# 
  2907  0499                     	;# 
  2908  049A                     	;# 
  2909  049B                     	;# 
  2910  049C                     	;# 
  2911  049D                     	;# 
  2912  050C                     	;# 
  2913  050C                     	;# 
  2914  050D                     	;# 
  2915  050E                     	;# 
  2916  050F                     	;# 
  2917  050F                     	;# 
  2918  0510                     	;# 
  2919  0511                     	;# 
  2920  0512                     	;# 
  2921  0512                     	;# 
  2922  0513                     	;# 
  2923  0514                     	;# 
  2924  0515                     	;# 
  2925  0515                     	;# 
  2926  0516                     	;# 
  2927  0517                     	;# 
  2928  0518                     	;# 
  2929  0519                     	;# 
  2930  051A                     	;# 
  2931  051B                     	;# 
  2932  051C                     	;# 
  2933  051D                     	;# 
  2934  058C                     	;# 
  2935  058C                     	;# 
  2936  058D                     	;# 
  2937  058E                     	;# 
  2938  058F                     	;# 
  2939  058F                     	;# 
  2940  0590                     	;# 
  2941  0591                     	;# 
  2942  0592                     	;# 
  2943  0593                     	;# 
  2944  060C                     	;# 
  2945  060D                     	;# 
  2946  060E                     	;# 
  2947  060F                     	;# 
  2948  0610                     	;# 
  2949  0611                     	;# 
  2950  0612                     	;# 
  2951  0613                     	;# 
  2952  0614                     	;# 
  2953  0616                     	;# 
  2954  0617                     	;# 
  2955  0618                     	;# 
  2956  0619                     	;# 
  2957  061A                     	;# 
  2958  061B                     	;# 
  2959  061C                     	;# 
  2960  061D                     	;# 
  2961  061E                     	;# 
  2962  068C                     	;# 
  2963  068D                     	;# 
  2964  068E                     	;# 
  2965  068F                     	;# 
  2966  0690                     	;# 
  2967  0691                     	;# 
  2968  0692                     	;# 
  2969  0693                     	;# 
  2970  0694                     	;# 
  2971  070C                     	;# 
  2972  070D                     	;# 
  2973  070E                     	;# 
  2974  070F                     	;# 
  2975  0710                     	;# 
  2976  0711                     	;# 
  2977  0712                     	;# 
  2978  0713                     	;# 
  2979  0714                     	;# 
  2980  0716                     	;# 
  2981  0717                     	;# 
  2982  0718                     	;# 
  2983  0719                     	;# 
  2984  071A                     	;# 
  2985  071B                     	;# 
  2986  071C                     	;# 
  2987  071D                     	;# 
  2988  071E                     	;# 
  2989  0796                     	;# 
  2990  0797                     	;# 
  2991  0798                     	;# 
  2992  0799                     	;# 
  2993  079A                     	;# 
  2994  079B                     	;# 
  2995  080C                     	;# 
  2996  080D                     	;# 
  2997  080E                     	;# 
  2998  080F                     	;# 
  2999  0810                     	;# 
  3000  0811                     	;# 
  3001  0812                     	;# 
  3002  0813                     	;# 
  3003  0814                     	;# 
  3004  081A                     	;# 
  3005  081B                     	;# 
  3006  081C                     	;# 
  3007  081D                     	;# 
  3008  081E                     	;# 
  3009  081F                     	;# 
  3010  088C                     	;# 
  3011  088D                     	;# 
  3012  088E                     	;# 
  3013  088F                     	;# 
  3014  0890                     	;# 
  3015  0891                     	;# 
  3016  0892                     	;# 
  3017  0893                     	;# 
  3018  0895                     	;# 
  3019  0896                     	;# 
  3020  0897                     	;# 
  3021  0898                     	;# 
  3022  0899                     	;# 
  3023  089A                     	;# 
  3024  089B                     	;# 
  3025  090C                     	;# 
  3026  090E                     	;# 
  3027  090F                     	;# 
  3028  091F                     	;# 
  3029  091F                     	;# 
  3030  098F                     	;# 
  3031  098F                     	;# 
  3032  0990                     	;# 
  3033  0991                     	;# 
  3034  0992                     	;# 
  3035  0993                     	;# 
  3036  0994                     	;# 
  3037  0995                     	;# 
  3038  0996                     	;# 
  3039  0997                     	;# 
  3040  0E0F                     	;# 
  3041  0E10                     	;# 
  3042  0E11                     	;# 
  3043  0E12                     	;# 
  3044  0E13                     	;# 
  3045  0E14                     	;# 
  3046  0E15                     	;# 
  3047  0E16                     	;# 
  3048  0E17                     	;# 
  3049  0E18                     	;# 
  3050  0E19                     	;# 
  3051  0E1A                     	;# 
  3052  0E1B                     	;# 
  3053  0E1C                     	;# 
  3054  0E1D                     	;# 
  3055  0E1E                     	;# 
  3056  0E1F                     	;# 
  3057  0E20                     	;# 
  3058  0E21                     	;# 
  3059  0E22                     	;# 
  3060  0E23                     	;# 
  3061  0E24                     	;# 
  3062  0E25                     	;# 
  3063  0E26                     	;# 
  3064  0E27                     	;# 
  3065  0E28                     	;# 
  3066  0E29                     	;# 
  3067  0E2A                     	;# 
  3068  0E2B                     	;# 
  3069  0E2C                     	;# 
  3070  0E2D                     	;# 
  3071  0E2E                     	;# 
  3072  0E2F                     	;# 
  3073  0E30                     	;# 
  3074  0E31                     	;# 
  3075  0E32                     	;# 
  3076  0E33                     	;# 
  3077  0E34                     	;# 
  3078  0E35                     	;# 
  3079  0E36                     	;# 
  3080  0E37                     	;# 
  3081  0E8F                     	;# 
  3082  0E90                     	;# 
  3083  0E91                     	;# 
  3084  0E92                     	;# 
  3085  0E93                     	;# 
  3086  0E94                     	;# 
  3087  0E95                     	;# 
  3088  0E96                     	;# 
  3089  0E97                     	;# 
  3090  0E9C                     	;# 
  3091  0E9D                     	;# 
  3092  0E9E                     	;# 
  3093  0EA1                     	;# 
  3094  0EA2                     	;# 
  3095  0EA3                     	;# 
  3096  0EA4                     	;# 
  3097  0EA5                     	;# 
  3098  0EA9                     	;# 
  3099  0EAA                     	;# 
  3100  0EAB                     	;# 
  3101  0EAC                     	;# 
  3102  0EB1                     	;# 
  3103  0EB2                     	;# 
  3104  0EB3                     	;# 
  3105  0EB8                     	;# 
  3106  0EB9                     	;# 
  3107  0EBA                     	;# 
  3108  0EBB                     	;# 
  3109  0EBC                     	;# 
  3110  0EBD                     	;# 
  3111  0EBE                     	;# 
  3112  0EC3                     	;# 
  3113  0EC5                     	;# 
  3114  0EC6                     	;# 
  3115  0EC7                     	;# 
  3116  0EC8                     	;# 
  3117  0EC9                     	;# 
  3118  0ECA                     	;# 
  3119  0ECB                     	;# 
  3120  0ECC                     	;# 
  3121  0F10                     	;# 
  3122  0F11                     	;# 
  3123  0F12                     	;# 
  3124  0F13                     	;# 
  3125  0F14                     	;# 
  3126  0F15                     	;# 
  3127  0F16                     	;# 
  3128  0F17                     	;# 
  3129  0F18                     	;# 
  3130  0F19                     	;# 
  3131  0F1A                     	;# 
  3132  0F1B                     	;# 
  3133  0F1C                     	;# 
  3134  0F1D                     	;# 
  3135  0F1E                     	;# 
  3136  0F1F                     	;# 
  3137  0F20                     	;# 
  3138  0F21                     	;# 
  3139  0F22                     	;# 
  3140  0F23                     	;# 
  3141  0F24                     	;# 
  3142  0F25                     	;# 
  3143  0F26                     	;# 
  3144  0F27                     	;# 
  3145  0F38                     	;# 
  3146  0F39                     	;# 
  3147  0F3A                     	;# 
  3148  0F3B                     	;# 
  3149  0F3C                     	;# 
  3150  0F3D                     	;# 
  3151  0F3E                     	;# 
  3152  0F3F                     	;# 
  3153  0F40                     	;# 
  3154  0F41                     	;# 
  3155  0F43                     	;# 
  3156  0F44                     	;# 
  3157  0F45                     	;# 
  3158  0F46                     	;# 
  3159  0F47                     	;# 
  3160  0F48                     	;# 
  3161  0F49                     	;# 
  3162  0F4A                     	;# 
  3163  0F4B                     	;# 
  3164  0F4C                     	;# 
  3165  0F4E                     	;# 
  3166  0F4F                     	;# 
  3167  0F50                     	;# 
  3168  0F51                     	;# 
  3169  0F52                     	;# 
  3170  0F53                     	;# 
  3171  0F54                     	;# 
  3172  0F55                     	;# 
  3173  0F56                     	;# 
  3174  0F57                     	;# 
  3175  0F65                     	;# 
  3176  0F68                     	;# 
  3177  0F69                     	;# 
  3178  0F6A                     	;# 
  3179  0F6B                     	;# 
  3180  0FE4                     	;# 
  3181  0FE5                     	;# 
  3182  0FE6                     	;# 
  3183  0FE7                     	;# 
  3184  0FE8                     	;# 
  3185  0FE9                     	;# 
  3186  0FEA                     	;# 
  3187  0FEB                     	;# 
  3188  0FED                     	;# 
  3189  0FEE                     	;# 
  3190  0FEF                     	;# 
  3191  0000                     	;# 
  3192  0001                     	;# 
  3193  0002                     	;# 
  3194  0003                     	;# 
  3195  0004                     	;# 
  3196  0005                     	;# 
  3197  0006                     	;# 
  3198  0007                     	;# 
  3199  0008                     	;# 
  3200  0009                     	;# 
  3201  000A                     	;# 
  3202  000B                     	;# 
  3203  000C                     	;# 
  3204  000D                     	;# 
  3205  000E                     	;# 
  3206  0010                     	;# 
  3207  0011                     	;# 
  3208  0012                     	;# 
  3209  0013                     	;# 
  3210  0016                     	;# 
  3211  0017                     	;# 
  3212  0018                     	;# 
  3213  001C                     	;# 
  3214  001C                     	;# 
  3215  001D                     	;# 
  3216  001D                     	;# 
  3217  001E                     	;# 
  3218  001F                     	;# 
  3219  008C                     	;# 
  3220  008C                     	;# 
  3221  008D                     	;# 
  3222  008E                     	;# 
  3223  008E                     	;# 
  3224  008F                     	;# 
  3225  0090                     	;# 
  3226  0090                     	;# 
  3227  0091                     	;# 
  3228  0093                     	;# 
  3229  0094                     	;# 
  3230  0095                     	;# 
  3231  0096                     	;# 
  3232  0097                     	;# 
  3233  0098                     	;# 
  3234  0099                     	;# 
  3235  009A                     	;# 
  3236  009B                     	;# 
  3237  009C                     	;# 
  3238  009D                     	;# 
  3239  009E                     	;# 
  3240  010C                     	;# 
  3241  010D                     	;# 
  3242  010E                     	;# 
  3243  010E                     	;# 
  3244  010F                     	;# 
  3245  0110                     	;# 
  3246  0110                     	;# 
  3247  0111                     	;# 
  3248  0112                     	;# 
  3249  0112                     	;# 
  3250  0113                     	;# 
  3251  0114                     	;# 
  3252  0114                     	;# 
  3253  0115                     	;# 
  3254  0116                     	;# 
  3255  0116                     	;# 
  3256  0117                     	;# 
  3257  0119                     	;# 
  3258  0119                     	;# 
  3259  0119                     	;# 
  3260  011A                     	;# 
  3261  011A                     	;# 
  3262  011A                     	;# 
  3263  011B                     	;# 
  3264  011B                     	;# 
  3265  011B                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011C                     	;# 
  3269  011C                     	;# 
  3270  011C                     	;# 
  3271  011D                     	;# 
  3272  011D                     	;# 
  3273  011D                     	;# 
  3274  011E                     	;# 
  3275  011E                     	;# 
  3276  011E                     	;# 
  3277  011F                     	;# 
  3278  011F                     	;# 
  3279  011F                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  018C                     	;# 
  3283  018D                     	;# 
  3284  018E                     	;# 
  3285  018F                     	;# 
  3286  0190                     	;# 
  3287  0191                     	;# 
  3288  0192                     	;# 
  3289  0196                     	;# 
  3290  0197                     	;# 
  3291  0198                     	;# 
  3292  0199                     	;# 
  3293  019A                     	;# 
  3294  019B                     	;# 
  3295  019C                     	;# 
  3296  020C                     	;# 
  3297  020C                     	;# 
  3298  020D                     	;# 
  3299  020E                     	;# 
  3300  020F                     	;# 
  3301  020F                     	;# 
  3302  0210                     	;# 
  3303  0210                     	;# 
  3304  0211                     	;# 
  3305  0211                     	;# 
  3306  0212                     	;# 
  3307  0212                     	;# 
  3308  0213                     	;# 
  3309  0214                     	;# 
  3310  0215                     	;# 
  3311  0215                     	;# 
  3312  0216                     	;# 
  3313  0216                     	;# 
  3314  0217                     	;# 
  3315  0217                     	;# 
  3316  0218                     	;# 
  3317  0218                     	;# 
  3318  0219                     	;# 
  3319  021A                     	;# 
  3320  021B                     	;# 
  3321  021B                     	;# 
  3322  021C                     	;# 
  3323  021C                     	;# 
  3324  021D                     	;# 
  3325  021D                     	;# 
  3326  021E                     	;# 
  3327  021F                     	;# 
  3328  028C                     	;# 
  3329  028C                     	;# 
  3330  028D                     	;# 
  3331  028D                     	;# 
  3332  028E                     	;# 
  3333  028F                     	;# 
  3334  0290                     	;# 
  3335  0290                     	;# 
  3336  0291                     	;# 
  3337  0292                     	;# 
  3338  0292                     	;# 
  3339  0293                     	;# 
  3340  0293                     	;# 
  3341  0294                     	;# 
  3342  0295                     	;# 
  3343  0296                     	;# 
  3344  0296                     	;# 
  3345  0297                     	;# 
  3346  0298                     	;# 
  3347  0298                     	;# 
  3348  0299                     	;# 
  3349  0299                     	;# 
  3350  029A                     	;# 
  3351  029B                     	;# 
  3352  029C                     	;# 
  3353  029C                     	;# 
  3354  029D                     	;# 
  3355  030C                     	;# 
  3356  030C                     	;# 
  3357  030D                     	;# 
  3358  030E                     	;# 
  3359  030F                     	;# 
  3360  0310                     	;# 
  3361  0310                     	;# 
  3362  0311                     	;# 
  3363  0312                     	;# 
  3364  0313                     	;# 
  3365  0314                     	;# 
  3366  0314                     	;# 
  3367  0315                     	;# 
  3368  0316                     	;# 
  3369  0317                     	;# 
  3370  0318                     	;# 
  3371  0318                     	;# 
  3372  0319                     	;# 
  3373  031A                     	;# 
  3374  031B                     	;# 
  3375  031C                     	;# 
  3376  031C                     	;# 
  3377  031D                     	;# 
  3378  031E                     	;# 
  3379  031F                     	;# 
  3380  038C                     	;# 
  3381  038D                     	;# 
  3382  038E                     	;# 
  3383  0390                     	;# 
  3384  0391                     	;# 
  3385  0392                     	;# 
  3386  040C                     	;# 
  3387  040D                     	;# 
  3388  040E                     	;# 
  3389  040F                     	;# 
  3390  0410                     	;# 
  3391  0411                     	;# 
  3392  0416                     	;# 
  3393  0416                     	;# 
  3394  0417                     	;# 
  3395  0418                     	;# 
  3396  0418                     	;# 
  3397  0419                     	;# 
  3398  041A                     	;# 
  3399  041A                     	;# 
  3400  041B                     	;# 
  3401  041C                     	;# 
  3402  041C                     	;# 
  3403  041D                     	;# 
  3404  041E                     	;# 
  3405  041F                     	;# 
  3406  048C                     	;# 
  3407  048C                     	;# 
  3408  048D                     	;# 
  3409  048E                     	;# 
  3410  048F                     	;# 
  3411  048F                     	;# 
  3412  0490                     	;# 
  3413  0491                     	;# 
  3414  0492                     	;# 
  3415  0492                     	;# 
  3416  0493                     	;# 
  3417  0494                     	;# 
  3418  0495                     	;# 
  3419  0495                     	;# 
  3420  0496                     	;# 
  3421  0497                     	;# 
  3422  0498                     	;# 
  3423  0499                     	;# 
  3424  049A                     	;# 
  3425  049B                     	;# 
  3426  049C                     	;# 
  3427  049D                     	;# 
  3428  050C                     	;# 
  3429  050C                     	;# 
  3430  050D                     	;# 
  3431  050E                     	;# 
  3432  050F                     	;# 
  3433  050F                     	;# 
  3434  0510                     	;# 
  3435  0511                     	;# 
  3436  0512                     	;# 
  3437  0512                     	;# 
  3438  0513                     	;# 
  3439  0514                     	;# 
  3440  0515                     	;# 
  3441  0515                     	;# 
  3442  0516                     	;# 
  3443  0517                     	;# 
  3444  0518                     	;# 
  3445  0519                     	;# 
  3446  051A                     	;# 
  3447  051B                     	;# 
  3448  051C                     	;# 
  3449  051D                     	;# 
  3450  058C                     	;# 
  3451  058C                     	;# 
  3452  058D                     	;# 
  3453  058E                     	;# 
  3454  058F                     	;# 
  3455  058F                     	;# 
  3456  0590                     	;# 
  3457  0591                     	;# 
  3458  0592                     	;# 
  3459  0593                     	;# 
  3460  060C                     	;# 
  3461  060D                     	;# 
  3462  060E                     	;# 
  3463  060F                     	;# 
  3464  0610                     	;# 
  3465  0611                     	;# 
  3466  0612                     	;# 
  3467  0613                     	;# 
  3468  0614                     	;# 
  3469  0616                     	;# 
  3470  0617                     	;# 
  3471  0618                     	;# 
  3472  0619                     	;# 
  3473  061A                     	;# 
  3474  061B                     	;# 
  3475  061C                     	;# 
  3476  061D                     	;# 
  3477  061E                     	;# 
  3478  068C                     	;# 
  3479  068D                     	;# 
  3480  068E                     	;# 
  3481  068F                     	;# 
  3482  0690                     	;# 
  3483  0691                     	;# 
  3484  0692                     	;# 
  3485  0693                     	;# 
  3486  0694                     	;# 
  3487  070C                     	;# 
  3488  070D                     	;# 
  3489  070E                     	;# 
  3490  070F                     	;# 
  3491  0710                     	;# 
  3492  0711                     	;# 
  3493  0712                     	;# 
  3494  0713                     	;# 
  3495  0714                     	;# 
  3496  0716                     	;# 
  3497  0717                     	;# 
  3498  0718                     	;# 
  3499  0719                     	;# 
  3500  071A                     	;# 
  3501  071B                     	;# 
  3502  071C                     	;# 
  3503  071D                     	;# 
  3504  071E                     	;# 
  3505  0796                     	;# 
  3506  0797                     	;# 
  3507  0798                     	;# 
  3508  0799                     	;# 
  3509  079A                     	;# 
  3510  079B                     	;# 
  3511  080C                     	;# 
  3512  080D                     	;# 
  3513  080E                     	;# 
  3514  080F                     	;# 
  3515  0810                     	;# 
  3516  0811                     	;# 
  3517  0812                     	;# 
  3518  0813                     	;# 
  3519  0814                     	;# 
  3520  081A                     	;# 
  3521  081B                     	;# 
  3522  081C                     	;# 
  3523  081D                     	;# 
  3524  081E                     	;# 
  3525  081F                     	;# 
  3526  088C                     	;# 
  3527  088D                     	;# 
  3528  088E                     	;# 
  3529  088F                     	;# 
  3530  0890                     	;# 
  3531  0891                     	;# 
  3532  0892                     	;# 
  3533  0893                     	;# 
  3534  0895                     	;# 
  3535  0896                     	;# 
  3536  0897                     	;# 
  3537  0898                     	;# 
  3538  0899                     	;# 
  3539  089A                     	;# 
  3540  089B                     	;# 
  3541  090C                     	;# 
  3542  090E                     	;# 
  3543  090F                     	;# 
  3544  091F                     	;# 
  3545  091F                     	;# 
  3546  098F                     	;# 
  3547  098F                     	;# 
  3548  0990                     	;# 
  3549  0991                     	;# 
  3550  0992                     	;# 
  3551  0993                     	;# 
  3552  0994                     	;# 
  3553  0995                     	;# 
  3554  0996                     	;# 
  3555  0997                     	;# 
  3556  0E0F                     	;# 
  3557  0E10                     	;# 
  3558  0E11                     	;# 
  3559  0E12                     	;# 
  3560  0E13                     	;# 
  3561  0E14                     	;# 
  3562  0E15                     	;# 
  3563  0E16                     	;# 
  3564  0E17                     	;# 
  3565  0E18                     	;# 
  3566  0E19                     	;# 
  3567  0E1A                     	;# 
  3568  0E1B                     	;# 
  3569  0E1C                     	;# 
  3570  0E1D                     	;# 
  3571  0E1E                     	;# 
  3572  0E1F                     	;# 
  3573  0E20                     	;# 
  3574  0E21                     	;# 
  3575  0E22                     	;# 
  3576  0E23                     	;# 
  3577  0E24                     	;# 
  3578  0E25                     	;# 
  3579  0E26                     	;# 
  3580  0E27                     	;# 
  3581  0E28                     	;# 
  3582  0E29                     	;# 
  3583  0E2A                     	;# 
  3584  0E2B                     	;# 
  3585  0E2C                     	;# 
  3586  0E2D                     	;# 
  3587  0E2E                     	;# 
  3588  0E2F                     	;# 
  3589  0E30                     	;# 
  3590  0E31                     	;# 
  3591  0E32                     	;# 
  3592  0E33                     	;# 
  3593  0E34                     	;# 
  3594  0E35                     	;# 
  3595  0E36                     	;# 
  3596  0E37                     	;# 
  3597  0E8F                     	;# 
  3598  0E90                     	;# 
  3599  0E91                     	;# 
  3600  0E92                     	;# 
  3601  0E93                     	;# 
  3602  0E94                     	;# 
  3603  0E95                     	;# 
  3604  0E96                     	;# 
  3605  0E97                     	;# 
  3606  0E9C                     	;# 
  3607  0E9D                     	;# 
  3608  0E9E                     	;# 
  3609  0EA1                     	;# 
  3610  0EA2                     	;# 
  3611  0EA3                     	;# 
  3612  0EA4                     	;# 
  3613  0EA5                     	;# 
  3614  0EA9                     	;# 
  3615  0EAA                     	;# 
  3616  0EAB                     	;# 
  3617  0EAC                     	;# 
  3618  0EB1                     	;# 
  3619  0EB2                     	;# 
  3620  0EB3                     	;# 
  3621  0EB8                     	;# 
  3622  0EB9                     	;# 
  3623  0EBA                     	;# 
  3624  0EBB                     	;# 
  3625  0EBC                     	;# 
  3626  0EBD                     	;# 
  3627  0EBE                     	;# 
  3628  0EC3                     	;# 
  3629  0EC5                     	;# 
  3630  0EC6                     	;# 
  3631  0EC7                     	;# 
  3632  0EC8                     	;# 
  3633  0EC9                     	;# 
  3634  0ECA                     	;# 
  3635  0ECB                     	;# 
  3636  0ECC                     	;# 
  3637  0F10                     	;# 
  3638  0F11                     	;# 
  3639  0F12                     	;# 
  3640  0F13                     	;# 
  3641  0F14                     	;# 
  3642  0F15                     	;# 
  3643  0F16                     	;# 
  3644  0F17                     	;# 
  3645  0F18                     	;# 
  3646  0F19                     	;# 
  3647  0F1A                     	;# 
  3648  0F1B                     	;# 
  3649  0F1C                     	;# 
  3650  0F1D                     	;# 
  3651  0F1E                     	;# 
  3652  0F1F                     	;# 
  3653  0F20                     	;# 
  3654  0F21                     	;# 
  3655  0F22                     	;# 
  3656  0F23                     	;# 
  3657  0F24                     	;# 
  3658  0F25                     	;# 
  3659  0F26                     	;# 
  3660  0F27                     	;# 
  3661  0F38                     	;# 
  3662  0F39                     	;# 
  3663  0F3A                     	;# 
  3664  0F3B                     	;# 
  3665  0F3C                     	;# 
  3666  0F3D                     	;# 
  3667  0F3E                     	;# 
  3668  0F3F                     	;# 
  3669  0F40                     	;# 
  3670  0F41                     	;# 
  3671  0F43                     	;# 
  3672  0F44                     	;# 
  3673  0F45                     	;# 
  3674  0F46                     	;# 
  3675  0F47                     	;# 
  3676  0F48                     	;# 
  3677  0F49                     	;# 
  3678  0F4A                     	;# 
  3679  0F4B                     	;# 
  3680  0F4C                     	;# 
  3681  0F4E                     	;# 
  3682  0F4F                     	;# 
  3683  0F50                     	;# 
  3684  0F51                     	;# 
  3685  0F52                     	;# 
  3686  0F53                     	;# 
  3687  0F54                     	;# 
  3688  0F55                     	;# 
  3689  0F56                     	;# 
  3690  0F57                     	;# 
  3691  0F65                     	;# 
  3692  0F68                     	;# 
  3693  0F69                     	;# 
  3694  0F6A                     	;# 
  3695  0F6B                     	;# 
  3696  0FE4                     	;# 
  3697  0FE5                     	;# 
  3698  0FE6                     	;# 
  3699  0FE7                     	;# 
  3700  0FE8                     	;# 
  3701  0FE9                     	;# 
  3702  0FEA                     	;# 
  3703  0FEB                     	;# 
  3704  0FED                     	;# 
  3705  0FEE                     	;# 
  3706  0FEF                     	;# 
  3707                           
  3708                           	psect	idataBANK1
  3709  0E97                     __pidataBANK1:	
  3710                           
  3711                           ;initializer for _segdisp
  3712  0E97  3403               	retlw	3
  3713  0E98  3400               	retlw	0
  3714  0E99  349F               	retlw	159
  3715  0E9A  3400               	retlw	0
  3716  0E9B  3425               	retlw	37
  3717  0E9C  3400               	retlw	0
  3718  0E9D  340D               	retlw	13
  3719  0E9E  3400               	retlw	0
  3720  0E9F  3499               	retlw	153
  3721  0EA0  3400               	retlw	0
  3722  0EA1  3449               	retlw	73
  3723  0EA2  3400               	retlw	0
  3724  0EA3  3441               	retlw	65
  3725  0EA4  3400               	retlw	0
  3726  0EA5  341B               	retlw	27
  3727  0EA6  3400               	retlw	0
  3728  0EA7  3401               	retlw	1
  3729  0EA8  3400               	retlw	0
  3730  0EA9  3409               	retlw	9
  3731  0EAA  3400               	retlw	0
  3732                           
  3733                           ;initializer for MYI2C_Write2LEDBytes@F14457
  3734  0EAB  34A0               	retlw	160
  3735  0EAC  34A1               	retlw	161
  3736  0EAD  34A2               	retlw	162
  3737  0EAE  34A3               	retlw	163
  3738  0EAF  34A4               	retlw	164
  3739  0EB0  34A5               	retlw	165
  3740  0EB1  34A6               	retlw	166
  3741  0EB2  34A7               	retlw	167
  3742  0EB3  34A8               	retlw	168
  3743  0EB4  34A9               	retlw	169
  3744  0EB5  34AA               	retlw	170
  3745  0EB6  34AB               	retlw	171
  3746  0EB7  34AC               	retlw	172
  3747  0EB8  34AD               	retlw	173
  3748  0EB9  34AE               	retlw	174
  3749  0EBA  34AF               	retlw	175
  3750                           
  3751                           	psect	stringtext1
  3752  1000                     __pstringtext1:	
  3753  1000                     _toggleDly:	
  3754  1000  340A               	retlw	10
  3755  1001  3400               	retlw	0
  3756  1002                     __end_of_toggleDly:	
  3757                           
  3758                           	psect	stringtext2
  3759  1002                     __pstringtext2:	
  3760  1002                     _twoK:	
  3761  1002  3410               	retlw	16
  3762  1003  3427               	retlw	39
  3763  1004                     __end_of_twoK:	
  3764                           
  3765                           	psect	stringtext3
  3766  1004                     __pstringtext3:	
  3767  1004                     _speed:	
  3768  1004  3432               	retlw	50
  3769  1005  3400               	retlw	0
  3770  1006                     __end_of_speed:	
  3771                           
  3772                           	psect	stringtext4
  3773  1006                     __pstringtext4:	
  3774  1006                     _datapin:	
  3775  1006  3412               	retlw	18
  3776  1007  3400               	retlw	0
  3777  1008                     __end_of_datapin:	
  3778                           
  3779                           	psect	stringtext5
  3780  1008                     __pstringtext5:	
  3781  1008                     _clockpin:	
  3782  1008  3411               	retlw	17
  3783  1009  3400               	retlw	0
  3784  100A                     __end_of_clockpin:	
  3785                           
  3786                           	psect	stringtext6
  3787  100A                     __pstringtext6:	
  3788  100A                     _latchpin:	
  3789  100A  3410               	retlw	16
  3790  100B  3400               	retlw	0
  3791  100C                     __end_of_latchpin:	
  3792                           
  3793                           	psect	stringtext7
  3794  100C                     __pstringtext7:	
  3795  100C                     _cMstrClkAdjust:	
  3796  100C  3420               	retlw	32
  3797  100D  3400               	retlw	0
  3798  100E                     __end_of_cMstrClkAdjust:	
  3799  0018                     _LATCbits	set	24
  3800  0013                     _TRISCbits	set	19
  3801  000E                     _PORTC	set	14
  3802  000D                     _PORTB	set	13
  3803  000B                     _INTCONbits	set	11
  3804  0013                     _TRISC	set	19
  3805  0012                     _TRISB	set	18
  3806  0011                     _TRISA	set	17
  3807  0018                     _LATC	set	24
  3808  0017                     _LATB	set	23
  3809  0016                     _LATA	set	22
  3810  005F                     _GIE	set	95
  3811  0094                     _ADCON1bits	set	148
  3812  008E                     _ADPREVL	set	142
  3813  008F                     _ADPREVH	set	143
  3814  0097                     _ADSTATbits	set	151
  3815  0090                     _ADACCL	set	144
  3816  0091                     _ADACCH	set	145
  3817  0095                     _ADCON2bits	set	149
  3818  0096                     _ADCON3bits	set	150
  3819  008C                     _ADRESL	set	140
  3820  008D                     _ADRESH	set	141
  3821  0093                     _ADCON0bits	set	147
  3822  0093                     _ADCON0	set	147
  3823  009E                     _ADPCH	set	158
  3824  009D                     _ADACQ	set	157
  3825  009C                     _ADPRE	set	156
  3826  009B                     _ADCAP	set	155
  3827  009A                     _ADREF	set	154
  3828  0098                     _ADCLK	set	152
  3829  0097                     _ADSTAT	set	151
  3830  0099                     _ADACT	set	153
  3831  0096                     _ADCON3	set	150
  3832  0095                     _ADCON2	set	149
  3833  0094                     _ADCON1	set	148
  3834  0116                     _ADERRL	set	278
  3835  0117                     _ADERRH	set	279
  3836  0114                     _ADFLTRL	set	276
  3837  0115                     _ADFLTRH	set	277
  3838  010C                     _ADCNT	set	268
  3839  0113                     _ADSTPTH	set	275
  3840  0112                     _ADSTPTL	set	274
  3841  0111                     _ADUTHH	set	273
  3842  0110                     _ADUTHL	set	272
  3843  010F                     _ADLTHH	set	271
  3844  010E                     _ADLTHL	set	270
  3845  010D                     _ADRPT	set	269
  3846  018C                     _SSP1BUF	set	396
  3847  0191                     _SSP1CON2bits	set	401
  3848  0190                     _SSP1CON1bits	set	400
  3849  018D                     _SSP1ADD	set	397
  3850  0192                     _SSP1CON3	set	402
  3851  0190                     _SSP1CON1	set	400
  3852  018F                     _SSP1STAT	set	399
  3853  0719                     _PIE3bits	set	1817
  3854  070F                     _PIR3bits	set	1807
  3855  0892                     _OSCTUNE	set	2194
  3856  0893                     _OSCFRQ	set	2195
  3857  0891                     _OSCEN	set	2193
  3858  088F                     _OSCCON3	set	2191
  3859  088D                     _OSCCON1	set	2189
  3860  0EC5                     _SSP1CLKPPSbits	set	3781
  3861  0EC6                     _SSP1DATPPSbits	set	3782
  3862  0E8F                     _PPSLOCKbits	set	3727
  3863  0E8F                     _PPSLOCK	set	3727
  3864  0F4E                     _ANSELCbits	set	3918
  3865  0F24                     _RC4PPS	set	3876
  3866  0F23                     _RC3PPS	set	3875
  3867  0F50                     _ODCONC	set	3920
  3868  0F45                     _ODCONB	set	3909
  3869  0F3A                     _ODCONA	set	3898
  3870  0F4F                     _WPUC	set	3919
  3871  0F39                     _WPUA	set	3897
  3872  0F44                     _WPUB	set	3908
  3873  0F65                     _WPUE	set	3941
  3874  0F38                     _ANSELA	set	3896
  3875  0F43                     _ANSELB	set	3907
  3876  0F4E                     _ANSELC	set	3918
  3877                           
  3878                           ; #config settings
  3879  0000                     
  3880                           	psect	cinit
  3881  0022                     start_initialization:	
  3882  0022                     __initialization:	
  3883                           
  3884                           ; Initialize objects allocated to BANK1
  3885  0022  3097               	movlw	low __pidataBANK1
  3886  0023  0084               	movwf	4
  3887  0024  308E               	movlw	(high __pidataBANK1)| (0+128)
  3888  0025  0085               	movwf	5
  3889  0026  30C7               	movlw	low __pdataBANK1
  3890  0027  0086               	movwf	6
  3891  0028  3000               	movlw	high __pdataBANK1
  3892  0029  0087               	movwf	7
  3893  002A  3024               	movlw	36
  3894  002B  318D  2560  3180   	fcall	init_ram
  3895                           
  3896                           ; Clear objects allocated to COMMON
  3897  002E  01F0               	clrf	__pbssCOMMON& (0+127)
  3898  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3899  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3900  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3901  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3902  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3903  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3904                           
  3905                           ; Clear objects allocated to BANK0
  3906  0035  01EE               	clrf	__pbssBANK0& (0+127)
  3907  0036  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  3908                           
  3909                           ; Clear objects allocated to BANK1
  3910  0037  30A0               	movlw	low __pbssBANK1
  3911  0038  0084               	movwf	4
  3912  0039  3000               	movlw	high __pbssBANK1
  3913  003A  0085               	movwf	5
  3914  003B  3027               	movlw	39
  3915  003C  318D  255A         	fcall	clear_ram0
  3916  003E                     end_of_initialization:	
  3917                           ;End of C runtime variable initialization code
  3918                           
  3919  003E                     __end_of__initialization:	
  3920  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3921  003F  0020               	movlb	0
  3922  0040  3181  297E         	ljmp	_main	;jump to C main() function
  3923                           
  3924                           	psect	bssCOMMON
  3925  0070                     __pbssCOMMON:	
  3926  0070                     I2C1_ISR@i2c_bytes_left:	
  3927  0070                     	ds	1
  3928  0071                     I2C1_ISR@pi2c_buf_ptr:	
  3929  0071                     	ds	1
  3930  0072                     _p_i2c1_current:	
  3931  0072                     	ds	1
  3932  0073                     _p_i2c1_trb_current:	
  3933  0073                     	ds	1
  3934  0074                     _i2c1_trb_count:	
  3935  0074                     	ds	1
  3936  0075                     I2C1_ISR@i2c_address:	
  3937  0075                     	ds	2
  3938                           
  3939                           	psect	bssBANK0
  3940  006E                     __pbssBANK0:	
  3941  006E                     I2C1_ISR@i2c_10bit_address_restart:	
  3942  006E                     	ds	1
  3943  006F                     _i2c1_state:	
  3944  006F                     	ds	1
  3945                           
  3946                           	psect	bssBANK1
  3947  00A0                     __pbssBANK1:	
  3948  00A0                     _i2c1_object:	
  3949  00A0                     	ds	5
  3950  00A5                     _d:	
  3951  00A5                     	ds	3
  3952  00A8                     _b:	
  3953  00A8                     	ds	3
  3954  00AB                     _e:	
  3955  00AB                     	ds	2
  3956  00AD                     _c:	
  3957  00AD                     	ds	2
  3958  00AF                     _wkFaderValue:	
  3959  00AF                     	ds	1
  3960  00B0                     _iLEDs1_LSB:	
  3961  00B0                     	ds	1
  3962  00B1                     _iLEDs1_MSB:	
  3963  00B1                     	ds	1
  3964  00B2                     _iLEDs0_LSB:	
  3965  00B2                     	ds	1
  3966  00B3                     _iLEDs0_MSB:	
  3967  00B3                     	ds	1
  3968  00B4                     _byteFaderValue:	
  3969  00B4                     	ds	8
  3970  00BC                     I2C1_MasterRead@trBlock:	
  3971  00BC                     	ds	4
  3972  00C0                     I2C1_MasterWrite@trBlock:	
  3973  00C0                     	ds	4
  3974  00C4                     _i2c1_tr_queue:	
  3975  00C4                     	ds	3
  3976                           
  3977                           	psect	dataBANK1
  3978  00C7                     __pdataBANK1:	
  3979  00C7                     _segdisp:	
  3980  00C7                     	ds	20
  3981  00DB                     MYI2C_Write2LEDBytes@F14457:	
  3982  00DB                     	ds	16
  3983                           
  3984                           	psect	inittext
  3985  0D60                     init_ram:	
  3986  0D60  00FE               	movwf	126
  3987  0D61                     initloop:	
  3988  0D61  0012               	moviw fsr0++
  3989  0D62  001E               	movwi fsr1++
  3990  0D63  0BFE               	decfsz	126,f
  3991  0D64  2D61               	goto	initloop
  3992  0D65  3400               	retlw	0
  3993                           
  3994                           	psect	clrtext
  3995  0D5A                     clear_ram0:	
  3996                           ;	Called with FSR0 containing the base address, and
  3997                           ;	WREG with the size to clear
  3998                           
  3999  0D5A  0064               	clrwdt	;clear the watchdog before getting into this loop
  4000  0D5B                     clrloop0:	
  4001  0D5B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4002  0D5C  3101               	addfsr 0,1
  4003  0D5D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4004  0D5E  2D5B               	goto	clrloop0	;have we reached the end yet?
  4005  0D5F  3400               	retlw	0	;all done for this memory range, return
  4006                           
  4007                           	psect	cstackCOMMON
  4008  0077                     __pcstackCOMMON:	
  4009  0077                     ?_OSCILLATOR_Initialize:	
  4010  0077                     ?_I2C1_Initialize:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0077                     ?_ADCC_Initialize:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0077                     ?_I2C1_Stop:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0077                     ??_I2C1_Stop:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0077                     ?_I2C1_FunctionComplete:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0077                     ??_I2C1_FunctionComplete:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0077                     ?_LED7SegSetup:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0077                     ?_LED7SegLoop:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0077                     ?_MYI2C_ReadFaders:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0077                     ?_PIN_MANAGER_Initialize:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040  0077                     ?_SYSTEM_Initialize:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043  0077                     ?_I2C1_ISR:	
  4044                           ; 1 bytes @ 0x0
  4045                           
  4046  0077                     ?_I2C1_BusCollisionISR:	
  4047                           ; 1 bytes @ 0x0
  4048                           
  4049  0077                     ??_I2C1_BusCollisionISR:	
  4050                           ; 1 bytes @ 0x0
  4051                           
  4052  0077                     ?_INTERRUPT_InterruptManager:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055  0077                     ?_main:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058  0077                     ?_LED7SegPinWrite:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061  0077                     ?_LED7SegPulseClock:	
  4062                           ; 1 bytes @ 0x0
  4063                           
  4064  0077                     ?_LED7SegShiftOutPulseClock:	
  4065                           ; 1 bytes @ 0x0
  4066                           
  4067  0077                     ?_LED7SegBlankDisplay:	
  4068                           ; 1 bytes @ 0x0
  4069                           
  4070                           
  4071                           ; 1 bytes @ 0x0
  4072  0077                     	ds	1
  4073  0078                     I2C1_Stop@completion_code:	
  4074                           
  4075                           ; 1 bytes @ 0x1
  4076  0078                     	ds	1
  4077  0079                     ??_I2C1_ISR:	
  4078                           
  4079                           ; 1 bytes @ 0x2
  4080  0079                     	ds	4
  4081  007D                     ??_INTERRUPT_InterruptManager:	
  4082                           
  4083                           ; 1 bytes @ 0x6
  4084  007D                     	ds	1
  4085                           
  4086                           	psect	cstackBANK0
  4087  0020                     __pcstackBANK0:	
  4088  0020                     ??_OSCILLATOR_Initialize:	
  4089  0020                     ??_I2C1_Initialize:	
  4090                           ; 1 bytes @ 0x0
  4091                           
  4092  0020                     ??_ADCC_Initialize:	
  4093                           ; 1 bytes @ 0x0
  4094                           
  4095  0020                     ?_I2C1_MasterWriteTRBBuild:	
  4096                           ; 1 bytes @ 0x0
  4097                           
  4098  0020                     ?_I2C1_MasterTRBInsert:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0020                     ?_I2C1_MasterReadTRBBuild:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0020                     ??_LED7SegSetup:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0020                     ?_UpdateLEDsFromValue:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0020                     ??_PIN_MANAGER_Initialize:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0020                     ??_LED7SegPinWrite:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0020                     ?_ADCC_GetSingleConversion:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0020                     ?___wmul:	
  4120                           ; 2 bytes @ 0x0
  4121                           
  4122  0020                     ?___lwdiv:	
  4123                           ; 2 bytes @ 0x0
  4124                           
  4125  0020                     ?___lwmod:	
  4126                           ; 2 bytes @ 0x0
  4127                           
  4128  0020                     ?___ftpack:	
  4129                           ; 2 bytes @ 0x0
  4130                           
  4131  0020                     PIN_MANAGER_Initialize@state:	
  4132                           ; 3 bytes @ 0x0
  4133                           
  4134  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  4135                           ; 1 bytes @ 0x0
  4136                           
  4137  0020                     I2C1_MasterReadTRBBuild@pdata:	
  4138                           ; 1 bytes @ 0x0
  4139                           
  4140  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  4141                           ; 1 bytes @ 0x0
  4142                           
  4143  0020                     UpdateLEDsFromValue@inValue:	
  4144                           ; 1 bytes @ 0x0
  4145                           
  4146  0020                     LED7SegPinWrite@val:	
  4147                           ; 1 bytes @ 0x0
  4148                           
  4149  0020                     ___wmul@multiplier:	
  4150                           ; 1 bytes @ 0x0
  4151                           
  4152  0020                     ___lwdiv@divisor:	
  4153                           ; 2 bytes @ 0x0
  4154                           
  4155  0020                     ___lwmod@divisor:	
  4156                           ; 2 bytes @ 0x0
  4157                           
  4158  0020                     ___ftpack@arg:	
  4159                           ; 2 bytes @ 0x0
  4160                           
  4161                           
  4162                           ; 3 bytes @ 0x0
  4163  0020                     	ds	1
  4164  0021                     ??_UpdateLEDsFromValue:	
  4165  0021                     ??_SYSTEM_Initialize:	
  4166                           ; 1 bytes @ 0x1
  4167                           
  4168  0021                     I2C1_MasterTRBInsert@pflag:	
  4169                           ; 1 bytes @ 0x1
  4170                           
  4171  0021                     I2C1_MasterReadTRBBuild@length:	
  4172                           ; 1 bytes @ 0x1
  4173                           
  4174  0021                     I2C1_MasterWriteTRBBuild@length:	
  4175                           ; 1 bytes @ 0x1
  4176                           
  4177                           
  4178                           ; 1 bytes @ 0x1
  4179  0021                     	ds	1
  4180  0022                     ??_I2C1_MasterTRBInsert:	
  4181  0022                     UpdateLEDsFromValue@inFaderNum:	
  4182                           ; 1 bytes @ 0x2
  4183                           
  4184  0022                     I2C1_MasterReadTRBBuild@address:	
  4185                           ; 1 bytes @ 0x2
  4186                           
  4187  0022                     I2C1_MasterWriteTRBBuild@address:	
  4188                           ; 2 bytes @ 0x2
  4189                           
  4190  0022                     ___wmul@multiplicand:	
  4191                           ; 2 bytes @ 0x2
  4192                           
  4193  0022                     ___lwdiv@dividend:	
  4194                           ; 2 bytes @ 0x2
  4195                           
  4196  0022                     ___lwmod@dividend:	
  4197                           ; 2 bytes @ 0x2
  4198                           
  4199                           
  4200                           ; 2 bytes @ 0x2
  4201  0022                     	ds	1
  4202  0023                     ??_ADCC_GetSingleConversion:	
  4203  0023                     ADCC_GetSingleConversion@channel:	
  4204                           ; 1 bytes @ 0x3
  4205                           
  4206  0023                     I2C1_MasterTRBInsert@count:	
  4207                           ; 1 bytes @ 0x3
  4208                           
  4209  0023                     UpdateLEDsFromValue@wkOnFlag:	
  4210                           ; 1 bytes @ 0x3
  4211                           
  4212  0023                     ___ftpack@exp:	
  4213                           ; 1 bytes @ 0x3
  4214                           
  4215                           
  4216                           ; 1 bytes @ 0x3
  4217  0023                     	ds	1
  4218  0024                     ??_I2C1_MasterWriteTRBBuild:	
  4219  0024                     ??_I2C1_MasterReadTRBBuild:	
  4220                           ; 1 bytes @ 0x4
  4221                           
  4222  0024                     ??___wmul:	
  4223                           ; 1 bytes @ 0x4
  4224                           
  4225  0024                     ??___lwdiv:	
  4226                           ; 1 bytes @ 0x4
  4227                           
  4228  0024                     ??___lwmod:	
  4229                           ; 1 bytes @ 0x4
  4230                           
  4231  0024                     UpdateLEDsFromValue@wkBrightFlag:	
  4232                           ; 1 bytes @ 0x4
  4233                           
  4234  0024                     ___ftpack@sign:	
  4235                           ; 1 bytes @ 0x4
  4236                           
  4237  0024                     ___wmul@product:	
  4238                           ; 1 bytes @ 0x4
  4239                           
  4240                           
  4241                           ; 2 bytes @ 0x4
  4242  0024                     	ds	1
  4243  0025                     ??___ftpack:	
  4244  0025                     ___lwmod@counter:	
  4245                           ; 1 bytes @ 0x5
  4246                           
  4247  0025                     ___lwdiv@quotient:	
  4248                           ; 1 bytes @ 0x5
  4249                           
  4250                           
  4251                           ; 2 bytes @ 0x5
  4252  0025                     	ds	1
  4253  0026                     ?_delay:	
  4254  0026                     I2C1_MasterReadTRBBuild@ptrb:	
  4255                           ; 1 bytes @ 0x6
  4256                           
  4257  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  4258                           ; 1 bytes @ 0x6
  4259                           
  4260  0026                     delay@delaytime:	
  4261                           ; 1 bytes @ 0x6
  4262                           
  4263                           
  4264                           ; 2 bytes @ 0x6
  4265  0026                     	ds	1
  4266  0027                     ??_MYI2C_ReadFaders:	
  4267  0027                     ?_I2C1_MasterWrite:	
  4268                           ; 1 bytes @ 0x7
  4269                           
  4270  0027                     I2C1_MasterWrite@length:	
  4271                           ; 1 bytes @ 0x7
  4272                           
  4273  0027                     ___lwdiv@counter:	
  4274                           ; 1 bytes @ 0x7
  4275                           
  4276                           
  4277                           ; 1 bytes @ 0x7
  4278  0027                     	ds	1
  4279  0028                     ??_delay:	
  4280  0028                     ?___lbtoft:	
  4281                           ; 1 bytes @ 0x8
  4282                           
  4283  0028                     ?___lwtoft:	
  4284                           ; 3 bytes @ 0x8
  4285                           
  4286  0028                     I2C1_MasterWrite@address:	
  4287                           ; 3 bytes @ 0x8
  4288                           
  4289  0028                     ___lwtoft@c:	
  4290                           ; 2 bytes @ 0x8
  4291                           
  4292                           
  4293                           ; 2 bytes @ 0x8
  4294  0028                     	ds	1
  4295  0029                     delay@adjustedDelaytime:	
  4296                           
  4297                           ; 4 bytes @ 0x9
  4298  0029                     	ds	1
  4299  002A                     I2C1_MasterWrite@pflag:	
  4300                           
  4301                           ; 1 bytes @ 0xA
  4302  002A                     	ds	1
  4303  002B                     ??_I2C1_MasterWrite:	
  4304  002B                     ??___lbtoft:	
  4305                           ; 1 bytes @ 0xB
  4306                           
  4307  002B                     ??___lwtoft:	
  4308                           ; 1 bytes @ 0xB
  4309                           
  4310  002B                     MYI2C_ReadFaders@dataAddress:	
  4311                           ; 1 bytes @ 0xB
  4312                           
  4313                           
  4314                           ; 2 bytes @ 0xB
  4315  002B                     	ds	2
  4316  002D                     I2C1_MasterWrite@pdata:	
  4317  002D                     MYI2C_ReadFaders@timeOut:	
  4318                           ; 1 bytes @ 0xD
  4319                           
  4320  002D                     delay@counter:	
  4321                           ; 2 bytes @ 0xD
  4322                           
  4323                           
  4324                           ; 4 bytes @ 0xD
  4325  002D                     	ds	1
  4326  002E                     ?_MYI2C_Write2LEDBytes:	
  4327  002E                     MYI2C_Write2LEDBytes@MSBWriteByte:	
  4328                           ; 1 bytes @ 0xE
  4329                           
  4330                           
  4331                           ; 1 bytes @ 0xE
  4332  002E                     	ds	1
  4333  002F                     MYI2C_ReadFaders@slaveDeviceAddress:	
  4334  002F                     MYI2C_Write2LEDBytes@LSBWriteByte:	
  4335                           ; 1 bytes @ 0xF
  4336                           
  4337  002F                     ___lbtoft@c:	
  4338                           ; 1 bytes @ 0xF
  4339                           
  4340                           
  4341                           ; 1 bytes @ 0xF
  4342  002F                     	ds	1
  4343  0030                     ??_MYI2C_Write2LEDBytes:	
  4344  0030                     ?___ftdiv:	
  4345                           ; 1 bytes @ 0x10
  4346                           
  4347  0030                     MYI2C_ReadFaders@pointerByte:	
  4348                           ; 3 bytes @ 0x10
  4349                           
  4350  0030                     ___ftdiv@f2:	
  4351                           ; 1 bytes @ 0x10
  4352                           
  4353                           
  4354                           ; 3 bytes @ 0x10
  4355  0030                     	ds	1
  4356  0031                     ?_blinkyLoop:	
  4357  0031                     ??_LED7SegPulseClock:	
  4358                           ; 1 bytes @ 0x11
  4359                           
  4360  0031                     ??_LED7SegShiftOutPulseClock:	
  4361                           ; 1 bytes @ 0x11
  4362                           
  4363  0031                     blinkyLoop@maxLoops:	
  4364                           ; 1 bytes @ 0x11
  4365                           
  4366  0031                     MYI2C_ReadFaders@readTRB:	
  4367                           ; 2 bytes @ 0x11
  4368                           
  4369                           
  4370                           ; 8 bytes @ 0x11
  4371  0031                     	ds	1
  4372  0032                     LED7SegShiftOutPulseClock@val:	
  4373                           
  4374                           ; 1 bytes @ 0x12
  4375  0032                     	ds	1
  4376  0033                     ??_blinkyLoop:	
  4377  0033                     LED7SegShiftOutPulseClock@i:	
  4378                           ; 1 bytes @ 0x13
  4379                           
  4380  0033                     ___ftdiv@f1:	
  4381                           ; 1 bytes @ 0x13
  4382                           
  4383                           
  4384                           ; 3 bytes @ 0x13
  4385  0033                     	ds	1
  4386  0034                     ??_LED7SegBlankDisplay:	
  4387  0034                     blinkyLoop@delayTime:	
  4388                           ; 1 bytes @ 0x14
  4389                           
  4390  0034                     MYI2C_Write2LEDBytes@sourceData:	
  4391                           ; 2 bytes @ 0x14
  4392                           
  4393                           
  4394                           ; 16 bytes @ 0x14
  4395  0034                     	ds	2
  4396  0036                     ??___ftdiv:	
  4397  0036                     blinkyLoop@loopCount:	
  4398                           ; 1 bytes @ 0x16
  4399                           
  4400                           
  4401                           ; 2 bytes @ 0x16
  4402  0036                     	ds	3
  4403  0039                     MYI2C_ReadFaders@status:	
  4404                           
  4405                           ; 1 bytes @ 0x19
  4406  0039                     	ds	1
  4407  003A                     ___ftdiv@cntr:	
  4408                           
  4409                           ; 1 bytes @ 0x1A
  4410  003A                     	ds	1
  4411  003B                     ___ftdiv@f3:	
  4412                           
  4413                           ; 3 bytes @ 0x1B
  4414  003B                     	ds	3
  4415  003E                     ___ftdiv@exp:	
  4416                           
  4417                           ; 1 bytes @ 0x1E
  4418  003E                     	ds	1
  4419  003F                     ___ftdiv@sign:	
  4420                           
  4421                           ; 1 bytes @ 0x1F
  4422  003F                     	ds	1
  4423  0040                     ?___fttol:	
  4424  0040                     ___fttol@f1:	
  4425                           ; 4 bytes @ 0x20
  4426                           
  4427                           
  4428                           ; 3 bytes @ 0x20
  4429  0040                     	ds	4
  4430  0044                     ??___fttol:	
  4431  0044                     MYI2C_Write2LEDBytes@dataAddress:	
  4432                           ; 1 bytes @ 0x24
  4433                           
  4434                           
  4435                           ; 2 bytes @ 0x24
  4436  0044                     	ds	2
  4437  0046                     MYI2C_Write2LEDBytes@pD:	
  4438                           
  4439                           ; 1 bytes @ 0x26
  4440  0046                     	ds	1
  4441  0047                     MYI2C_Write2LEDBytes@nCount:	
  4442                           
  4443                           ; 2 bytes @ 0x27
  4444  0047                     	ds	1
  4445  0048                     ___fttol@sign1:	
  4446                           
  4447                           ; 1 bytes @ 0x28
  4448  0048                     	ds	1
  4449  0049                     MYI2C_Write2LEDBytes@slaveDeviceAddress:	
  4450  0049                     ___fttol@lval:	
  4451                           ; 1 bytes @ 0x29
  4452                           
  4453                           
  4454                           ; 4 bytes @ 0x29
  4455  0049                     	ds	1
  4456  004A                     MYI2C_Write2LEDBytes@counter:	
  4457                           
  4458                           ; 2 bytes @ 0x2A
  4459  004A                     	ds	2
  4460  004C                     MYI2C_Write2LEDBytes@timeOut:	
  4461                           
  4462                           ; 2 bytes @ 0x2C
  4463  004C                     	ds	1
  4464  004D                     ___fttol@exp1:	
  4465                           
  4466                           ; 1 bytes @ 0x2D
  4467  004D                     	ds	1
  4468  004E                     ?_LED7SegDisplayValue:	
  4469  004E                     MYI2C_Write2LEDBytes@pointerByte:	
  4470                           ; 1 bytes @ 0x2E
  4471                           
  4472  004E                     LED7SegDisplayValue@iTwoDigitNumber:	
  4473                           ; 1 bytes @ 0x2E
  4474                           
  4475                           
  4476                           ; 2 bytes @ 0x2E
  4477  004E                     	ds	1
  4478  004F                     MYI2C_Write2LEDBytes@writeBuffer:	
  4479                           
  4480                           ; 3 bytes @ 0x2F
  4481  004F                     	ds	1
  4482  0050                     ??_LED7SegDisplayValue:	
  4483  0050                     LED7SegDisplayValue@iUnitsDigit:	
  4484                           ; 1 bytes @ 0x30
  4485                           
  4486                           
  4487                           ; 2 bytes @ 0x30
  4488  0050                     	ds	2
  4489  0052                     MYI2C_Write2LEDBytes@status:	
  4490  0052                     LED7SegDisplayValue@iTensCode:	
  4491                           ; 1 bytes @ 0x32
  4492                           
  4493                           
  4494                           ; 2 bytes @ 0x32
  4495  0052                     	ds	2
  4496  0054                     LED7SegDisplayValue@iTensDigit:	
  4497                           
  4498                           ; 2 bytes @ 0x34
  4499  0054                     	ds	2
  4500  0056                     ??_LED7SegLoop:	
  4501                           
  4502                           ; 1 bytes @ 0x36
  4503  0056                     	ds	1
  4504  0057                     LED7SegLoop@d:	
  4505                           
  4506                           ; 2 bytes @ 0x37
  4507  0057                     	ds	2
  4508  0059                     LED7SegLoop@d_1039:	
  4509                           
  4510                           ; 2 bytes @ 0x39
  4511  0059                     	ds	2
  4512  005B                     LED7SegLoop@d_1040:	
  4513                           
  4514                           ; 2 bytes @ 0x3B
  4515  005B                     	ds	2
  4516  005D                     LED7SegLoop@z:	
  4517                           
  4518                           ; 2 bytes @ 0x3D
  4519  005D                     	ds	2
  4520  005F                     ??_main:	
  4521                           
  4522                           ; 1 bytes @ 0x3F
  4523  005F                     	ds	3
  4524  0062                     main@prevFader8bitValue:	
  4525                           
  4526                           ; 1 bytes @ 0x42
  4527  0062                     	ds	1
  4528  0063                     _main$1595:	
  4529                           
  4530                           ; 2 bytes @ 0x43
  4531  0063                     	ds	2
  4532  0065                     main@iCounter:	
  4533                           
  4534                           ; 2 bytes @ 0x45
  4535  0065                     	ds	2
  4536  0067                     main@readStatus:	
  4537                           
  4538                           ; 1 bytes @ 0x47
  4539  0067                     	ds	1
  4540  0068                     main@I2C_ADDRESS_FADELED0:	
  4541                           
  4542                           ; 1 bytes @ 0x48
  4543  0068                     	ds	1
  4544  0069                     main@fader8bitValue:	
  4545                           
  4546                           ; 1 bytes @ 0x49
  4547  0069                     	ds	1
  4548  006A                     main@ndx:	
  4549                           
  4550                           ; 2 bytes @ 0x4A
  4551  006A                     	ds	2
  4552  006C                     main@faderValue:	
  4553                           
  4554                           ; 2 bytes @ 0x4C
  4555  006C                     	ds	2
  4556                           
  4557                           	psect	maintext
  4558  017E                     __pmaintext:	
  4559 ;;
  4560 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4561 ;;
  4562 ;; *************** function _main *****************
  4563 ;; Defined at:
  4564 ;;		line 140 in file "main.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  ndx             2   74[BANK0 ] int 
  4569 ;;  faderValue      2   76[BANK0 ] int 
  4570 ;;  iCounter        2   69[BANK0 ] unsigned int 
  4571 ;;  iLSByte         2    0        unsigned int 
  4572 ;;  iMSByte         2    0        unsigned int 
  4573 ;;  fader8bitVal    1   73[BANK0 ] unsigned char 
  4574 ;;  I2C_ADDRESS_    1   72[BANK0 ] unsigned char 
  4575 ;;  readStatus      1   71[BANK0 ] enum E14267
  4576 ;;  prevFader8bi    1   66[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : B1F/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;Total ram usage:       15 bytes
  4591 ;; Hardware stack levels required when called:    9
  4592 ;; This function calls:
  4593 ;;		_ADCC_GetSingleConversion
  4594 ;;		_LED7SegDisplayValue
  4595 ;;		_LED7SegLoop
  4596 ;;		_LED7SegSetup
  4597 ;;		_MYI2C_ReadFaders
  4598 ;;		_MYI2C_Write2LEDBytes
  4599 ;;		_SYSTEM_Initialize
  4600 ;;		_UpdateLEDsFromValue
  4601 ;;		___ftdiv
  4602 ;;		___fttol
  4603 ;;		___lbtoft
  4604 ;;		_blinkyLoop
  4605 ;;		_delay
  4606 ;; This function is called by:
  4607 ;;		Startup code after reset
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _main
  4613  017E                     _main:	
  4614                           
  4615                           ;main.c: 142: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4619  017E  3010               	movlw	16
  4620  017F  0020               	movlb	0	; select bank0
  4621  0180  00DF               	movwf	??_main
  4622  0181  085F               	movf	??_main,w
  4623  0182  00E8               	movwf	main@I2C_ADDRESS_FADELED0
  4624                           
  4625                           ;main.c: 143: uint16_t iCounter=0;
  4626  0183  01E5               	clrf	main@iCounter
  4627  0184  01E6               	clrf	main@iCounter+1
  4628                           
  4629                           ;main.c: 144: uint16_t iMSByte;
  4630                           ;main.c: 145: uint16_t iLSByte;
  4631                           ;main.c: 146: int faderValue;
  4632                           ;main.c: 147: uint8_t fader8bitValue;
  4633                           ;main.c: 148: uint8_t prevFader8bitValue;
  4634                           ;main.c: 150: I2C1_MESSAGE_STATUS readStatus=0;
  4635  0185  01E7               	clrf	main@readStatus
  4636                           
  4637                           ;main.c: 153: SYSTEM_Initialize();
  4638  0186  318D  2583  3181   	fcall	_SYSTEM_Initialize
  4639                           
  4640                           ;main.c: 155: LED7SegSetup();
  4641  0189  318D  258F  3181   	fcall	_LED7SegSetup
  4642                           
  4643                           ;main.c: 160: (INTCONbits.GIE = 1);
  4644  018C  178B               	bsf	11,7	;volatile
  4645                           
  4646                           ;main.c: 163: (INTCONbits.PEIE = 1);
  4647  018D  170B               	bsf	11,6	;volatile
  4648                           
  4649                           ;main.c: 172: faderValue=ADCC_GetSingleConversion(FADER0);
  4650  018E  3000               	movlw	0
  4651  018F  318D  25AE  3181   	fcall	_ADCC_GetSingleConversion
  4652  0192  0020               	movlb	0	; select bank0
  4653  0193  0821               	movf	?_ADCC_GetSingleConversion+1,w
  4654  0194  00ED               	movwf	main@faderValue+1
  4655  0195  0820               	movf	?_ADCC_GetSingleConversion,w
  4656  0196  00EC               	movwf	main@faderValue
  4657                           
  4658                           ;main.c: 173: prevFader8bitValue=faderValue>>2;
  4659  0197  086D               	movf	main@faderValue+1,w
  4660  0198  00E0               	movwf	??_main+1
  4661  0199  086C               	movf	main@faderValue,w
  4662  019A  00DF               	movwf	??_main
  4663  019B  0D60               	rlf	??_main+1,w
  4664  019C  0CE0               	rrf	??_main+1,f
  4665  019D  0CDF               	rrf	??_main,f
  4666  019E  0D60               	rlf	??_main+1,w
  4667  019F  0CE0               	rrf	??_main+1,f
  4668  01A0  0CDF               	rrf	??_main,f
  4669  01A1  085F               	movf	??_main,w
  4670  01A2  00E1               	movwf	??_main+2
  4671  01A3  0861               	movf	??_main+2,w
  4672  01A4  00E2               	movwf	main@prevFader8bitValue
  4673                           
  4674                           ;main.c: 175: blinkyLoop(10);
  4675  01A5  300A               	movlw	10
  4676  01A6  00B1               	movwf	blinkyLoop@maxLoops
  4677  01A7  3000               	movlw	0
  4678  01A8  00B2               	movwf	blinkyLoop@maxLoops+1
  4679  01A9  3186  26E9  3181   	fcall	_blinkyLoop
  4680                           
  4681                           ;main.c: 178: LED7SegLoop();
  4682  01AC  3183  23A6  3181   	fcall	_LED7SegLoop
  4683  01AF                     l3308:	
  4684                           ;main.c: 180: while (1) {
  4685                           
  4686                           
  4687                           ;main.c: 182: if((0==iCounter%4))
  4688  01AF  3003               	movlw	3
  4689  01B0  0020               	movlb	0	; select bank0
  4690  01B1  0565               	andwf	main@iCounter,w
  4691  01B2  00DF               	movwf	??_main
  4692  01B3  3000               	movlw	0
  4693  01B4  0566               	andwf	main@iCounter+1,w
  4694  01B5  00E0               	movwf	??_main+1
  4695  01B6  085F               	movf	??_main,w
  4696  01B7  0460               	iorwf	??_main+1,w
  4697  01B8  1D03               	btfss	3,2
  4698  01B9  29D1               	goto	l3314
  4699                           
  4700                           ;main.c: 183: {
  4701                           ;main.c: 184: faderValue=ADCC_GetSingleConversion(FADER0);
  4702  01BA  3000               	movlw	0
  4703  01BB  318D  25AE  3181   	fcall	_ADCC_GetSingleConversion
  4704  01BE  0020               	movlb	0	; select bank0
  4705  01BF  0821               	movf	?_ADCC_GetSingleConversion+1,w
  4706  01C0  00ED               	movwf	main@faderValue+1
  4707  01C1  0820               	movf	?_ADCC_GetSingleConversion,w
  4708  01C2  00EC               	movwf	main@faderValue
  4709                           
  4710                           ;main.c: 185: fader8bitValue=faderValue>>2;
  4711  01C3  086D               	movf	main@faderValue+1,w
  4712  01C4  00E0               	movwf	??_main+1
  4713  01C5  086C               	movf	main@faderValue,w
  4714  01C6  00DF               	movwf	??_main
  4715  01C7  0D60               	rlf	??_main+1,w
  4716  01C8  0CE0               	rrf	??_main+1,f
  4717  01C9  0CDF               	rrf	??_main,f
  4718  01CA  0D60               	rlf	??_main+1,w
  4719  01CB  0CE0               	rrf	??_main+1,f
  4720  01CC  0CDF               	rrf	??_main,f
  4721  01CD  085F               	movf	??_main,w
  4722  01CE  00E1               	movwf	??_main+2
  4723  01CF  0861               	movf	??_main+2,w
  4724  01D0  00E9               	movwf	main@fader8bitValue
  4725  01D1                     l3314:	
  4726                           
  4727                           ;main.c: 186: }
  4728                           ;main.c: 188: faderValue=byteFaderValue[0];
  4729  01D1  0021               	movlb	1	; select bank1
  4730  01D2  0834               	movf	_byteFaderValue^(0+128),w	;volatile
  4731  01D3  0020               	movlb	0	; select bank0
  4732  01D4  00DF               	movwf	??_main
  4733  01D5  01E0               	clrf	??_main+1
  4734  01D6  085F               	movf	??_main,w
  4735  01D7  00EC               	movwf	main@faderValue
  4736  01D8  0860               	movf	??_main+1,w
  4737  01D9  00ED               	movwf	main@faderValue+1
  4738                           
  4739                           ;main.c: 191: if (faderValue> 170) {
  4740  01DA  086D               	movf	main@faderValue+1,w
  4741  01DB  3A80               	xorlw	128
  4742  01DC  00DF               	movwf	??_main
  4743  01DD  3080               	movlw	128
  4744  01DE  025F               	subwf	??_main,w
  4745  01DF  1D03               	skipz
  4746  01E0  29E3               	goto	u2945
  4747  01E1  30AB               	movlw	171
  4748  01E2  026C               	subwf	main@faderValue,w
  4749  01E3                     u2945:	
  4750  01E3  1C03               	skipc
  4751  01E4  29EF               	goto	l3320
  4752                           
  4753                           ;main.c: 193: PORTB |= 0x1F;
  4754  01E5  301F               	movlw	31
  4755  01E6  0020               	movlb	0	; select bank0
  4756  01E7  00DF               	movwf	??_main
  4757  01E8  085F               	movf	??_main,w
  4758  01E9  048D               	iorwf	13,f	;volatile
  4759                           
  4760                           ;main.c: 194: PORTC |= 0xE0;
  4761  01EA  30E0               	movlw	224
  4762  01EB  00DF               	movwf	??_main
  4763  01EC  085F               	movf	??_main,w
  4764  01ED  048E               	iorwf	14,f	;volatile
  4765  01EE  2A19               	goto	L1
  4766  01EF                     l3320:	
  4767                           ;main.c: 197: }else{
  4768                           
  4769                           ;main.c: 196: ODCONC &= 0x1F;
  4770                           
  4771                           ;main.c: 195: ODCONB &= 0xE0;
  4772                           
  4773                           
  4774                           ;main.c: 198: if (faderValue > 80) {
  4775  01EF  0020               	movlb	0	; select bank0
  4776  01F0  086D               	movf	main@faderValue+1,w
  4777  01F1  3A80               	xorlw	128
  4778  01F2  00DF               	movwf	??_main
  4779  01F3  3080               	movlw	128
  4780  01F4  025F               	subwf	??_main,w
  4781  01F5  1D03               	skipz
  4782  01F6  29F9               	goto	u2955
  4783  01F7  3051               	movlw	81
  4784  01F8  026C               	subwf	main@faderValue,w
  4785  01F9                     u2955:	
  4786  01F9  1C03               	skipc
  4787  01FA  2A10               	goto	l3324
  4788                           
  4789                           ;main.c: 202: PORTB |= 0x1F;
  4790  01FB  301F               	movlw	31
  4791  01FC  0020               	movlb	0	; select bank0
  4792  01FD  00DF               	movwf	??_main
  4793  01FE  085F               	movf	??_main,w
  4794  01FF  048D               	iorwf	13,f	;volatile
  4795                           
  4796                           ;main.c: 203: PORTC |= 0xE0;
  4797  0200  30E0               	movlw	224
  4798  0201  00DF               	movwf	??_main
  4799  0202  085F               	movf	??_main,w
  4800  0203  048E               	iorwf	14,f	;volatile
  4801                           
  4802                           ;main.c: 204: ODCONB |= 0x1F;
  4803  0204  301F               	movlw	31
  4804  0205  00DF               	movwf	??_main
  4805  0206  085F               	movf	??_main,w
  4806  0207  003E               	movlb	30	; select bank30
  4807  0208  04C5               	iorwf	69,f	;volatile
  4808                           
  4809                           ;main.c: 205: ODCONC |= 0xE0;
  4810  0209  30E0               	movlw	224
  4811  020A  0020               	movlb	0	; select bank0
  4812  020B  00DF               	movwf	??_main
  4813  020C  085F               	movf	??_main,w
  4814  020D  003E               	movlb	30	; select bank30
  4815  020E  04D0               	iorwf	80,f	;volatile
  4816                           
  4817                           ;main.c: 206: }else{
  4818  020F  2A24               	goto	l3326
  4819  0210                     l3324:	
  4820                           
  4821                           ;main.c: 209: PORTB &= 0xE0;
  4822  0210  30E0               	movlw	224
  4823  0211  0020               	movlb	0	; select bank0
  4824  0212  00DF               	movwf	??_main
  4825  0213  085F               	movf	??_main,w
  4826  0214  058D               	andwf	13,f	;volatile
  4827                           
  4828                           ;main.c: 210: PORTC &= 0x1F;
  4829  0215  301F               	movlw	31
  4830  0216  00DF               	movwf	??_main
  4831  0217  085F               	movf	??_main,w
  4832  0218  058E               	andwf	14,f	;volatile
  4833  0219                     L1:	
  4834                           
  4835                           ;main.c: 211: ODCONB &= 0xE0;
  4836  0219  30E0               	movlw	224
  4837  021A  00DF               	movwf	??_main
  4838  021B  085F               	movf	??_main,w
  4839  021C  003E               	movlb	30	; select bank30
  4840  021D  05C5               	andwf	69,f	;volatile
  4841                           
  4842                           ;main.c: 212: ODCONC &= 0x1F;
  4843  021E  301F               	movlw	31
  4844  021F  0020               	movlb	0	; select bank0
  4845  0220  00DF               	movwf	??_main
  4846  0221  085F               	movf	??_main,w
  4847  0222  003E               	movlb	30	; select bank30
  4848  0223  05D0               	andwf	80,f	;volatile
  4849  0224                     l3326:	
  4850                           
  4851                           ;main.c: 213: }
  4852                           ;main.c: 214: }
  4853                           ;main.c: 217: readStatus = MYI2C_ReadFaders(I2C_ADDRESS_FADELED0);
  4854  0224  0020               	movlb	0	; select bank0
  4855  0225  0868               	movf	main@I2C_ADDRESS_FADELED0,w
  4856  0226  3187  274B  3181   	fcall	_MYI2C_ReadFaders
  4857  0229  0020               	movlb	0	; select bank0
  4858  022A  00DF               	movwf	??_main
  4859  022B  085F               	movf	??_main,w
  4860  022C  00E7               	movwf	main@readStatus
  4861                           
  4862                           ;main.c: 219: if(readStatus==I2C1_MESSAGE_COMPLETE)
  4863  022D  0867               	movf	main@readStatus,w
  4864  022E  1D03               	btfss	3,2
  4865  022F  2A68               	goto	l3344
  4866                           
  4867                           ;main.c: 220: {
  4868                           ;main.c: 222: for(int ndx=0;ndx<8;ndx++){
  4869  0230  01EA               	clrf	main@ndx
  4870  0231  01EB               	clrf	main@ndx+1
  4871  0232  086B               	movf	main@ndx+1,w
  4872  0233  3A80               	xorlw	128
  4873  0234  00DF               	movwf	??_main
  4874  0235  3080               	movlw	128
  4875  0236  025F               	subwf	??_main,w
  4876  0237  3008               	movlw	8
  4877  0238  1903               	btfsc	3,2
  4878  0239  026A               	subwf	main@ndx,w
  4879  023A  1803               	btfsc	3,0
  4880  023B  2A58               	goto	l3342
  4881  023C                     l3336:	
  4882                           
  4883                           ;main.c: 223: UpdateLEDsFromValue(ndx,byteFaderValue[ndx]);
  4884  023C  0020               	movlb	0	; select bank0
  4885  023D  086A               	movf	main@ndx,w
  4886  023E  3EB4               	addlw	(low (_byteFaderValue| 0))& (0+255)
  4887  023F  0086               	movwf	6
  4888  0240  0187               	clrf	7
  4889  0241  0801               	movf	1,w
  4890  0242  00DF               	movwf	??_main
  4891  0243  085F               	movf	??_main,w
  4892  0244  00A0               	movwf	UpdateLEDsFromValue@inValue
  4893  0245  086A               	movf	main@ndx,w
  4894  0246  3182  22B2  3181   	fcall	_UpdateLEDsFromValue
  4895  0249  3001               	movlw	1
  4896  024A  0020               	movlb	0	; select bank0
  4897  024B  07EA               	addwf	main@ndx,f
  4898  024C  3000               	movlw	0
  4899  024D  3DEB               	addwfc	main@ndx+1,f
  4900  024E  086B               	movf	main@ndx+1,w
  4901  024F  3A80               	xorlw	128
  4902  0250  00DF               	movwf	??_main
  4903  0251  3080               	movlw	128
  4904  0252  025F               	subwf	??_main,w
  4905  0253  3008               	movlw	8
  4906  0254  1903               	btfsc	3,2
  4907  0255  026A               	subwf	main@ndx,w
  4908  0256  1C03               	skipc
  4909  0257  2A3C               	goto	l3336
  4910  0258                     l3342:	
  4911                           
  4912                           ;main.c: 224: }
  4913                           ;main.c: 226: MYI2C_Write2LEDBytes(I2C_ADDRESS_FADELED0,iLEDs0_MSB,iLEDs0_LSB);
  4914  0258  0021               	movlb	1	; select bank1
  4915  0259  0833               	movf	_iLEDs0_MSB^(0+128),w
  4916  025A  0020               	movlb	0	; select bank0
  4917  025B  00DF               	movwf	??_main
  4918  025C  085F               	movf	??_main,w
  4919  025D  00AE               	movwf	MYI2C_Write2LEDBytes@MSBWriteByte
  4920  025E  0021               	movlb	1	; select bank1
  4921  025F  0832               	movf	_iLEDs0_LSB^(0+128),w
  4922  0260  0020               	movlb	0	; select bank0
  4923  0261  00E0               	movwf	??_main+1
  4924  0262  0860               	movf	??_main+1,w
  4925  0263  00AF               	movwf	MYI2C_Write2LEDBytes@LSBWriteByte
  4926  0264  0868               	movf	main@I2C_ADDRESS_FADELED0,w
  4927  0265  3186  2610  3181   	fcall	_MYI2C_Write2LEDBytes
  4928  0268                     l3344:	
  4929                           
  4930                           ;main.c: 227: }
  4931                           ;main.c: 237: prevFader8bitValue=fader8bitValue;
  4932  0268  0020               	movlb	0	; select bank0
  4933  0269  0869               	movf	main@fader8bitValue,w
  4934  026A  00DF               	movwf	??_main
  4935  026B  085F               	movf	??_main,w
  4936  026C  00E2               	movwf	main@prevFader8bitValue
  4937                           
  4938                           ;main.c: 240: iCounter++;
  4939  026D  3001               	movlw	1
  4940  026E  07E5               	addwf	main@iCounter,f
  4941  026F  3000               	movlw	0
  4942  0270  3DE6               	addwfc	main@iCounter+1,f
  4943                           
  4944                           ;main.c: 241: if (fader8bitValue<252)
  4945  0271  30FC               	movlw	252
  4946  0272  0269               	subwf	main@fader8bitValue,w
  4947  0273  1803               	skipnc
  4948  0274  2A86               	goto	l3352
  4949                           
  4950                           ;main.c: 242: delay(1*(255-fader8bitValue));
  4951  0275  0869               	movf	main@fader8bitValue,w
  4952  0276  00DF               	movwf	??_main
  4953  0277  01E0               	clrf	??_main+1
  4954  0278  09DF               	comf	??_main,f
  4955  0279  09E0               	comf	??_main+1,f
  4956  027A  0ADF               	incf	??_main,f
  4957  027B  1903               	skipnz
  4958  027C  0AE0               	incf	??_main+1,f
  4959  027D  085F               	movf	??_main,w
  4960  027E  3EFF               	addlw	255
  4961  027F  00A6               	movwf	delay@delaytime
  4962  0280  3000               	movlw	0
  4963  0281  3D60               	addwfc	??_main+1,w
  4964  0282  00A7               	movwf	delay@delaytime+1
  4965  0283  318F  27AD  3181   	fcall	_delay
  4966  0286                     l3352:	
  4967                           
  4968                           ;main.c: 244: LED7SegDisplayValue(fader8bitValue/2.55);
  4969  0286  0020               	movlb	0	; select bank0
  4970  0287  0869               	movf	main@fader8bitValue,w
  4971  0288  318E  2624  3181   	fcall	___lbtoft
  4972  028B  0020               	movlb	0	; select bank0
  4973  028C  0828               	movf	?___lbtoft,w
  4974  028D  00B3               	movwf	___ftdiv@f1
  4975  028E  0829               	movf	?___lbtoft+1,w
  4976  028F  00B4               	movwf	___ftdiv@f1+1
  4977  0290  082A               	movf	?___lbtoft+2,w
  4978  0291  00B5               	movwf	___ftdiv@f1+2
  4979  0292  3033               	movlw	51
  4980  0293  00B0               	movwf	___ftdiv@f2
  4981  0294  3023               	movlw	35
  4982  0295  00B1               	movwf	___ftdiv@f2+1
  4983  0296  3040               	movlw	64
  4984  0297  00B2               	movwf	___ftdiv@f2+2
  4985  0298  3184  2450  3181   	fcall	___ftdiv
  4986  029B  0020               	movlb	0	; select bank0
  4987  029C  0830               	movf	?___ftdiv,w
  4988  029D  00C0               	movwf	___fttol@f1
  4989  029E  0831               	movf	?___ftdiv+1,w
  4990  029F  00C1               	movwf	___fttol@f1+1
  4991  02A0  0832               	movf	?___ftdiv+2,w
  4992  02A1  00C2               	movwf	___fttol@f1+2
  4993  02A2  3185  2589  3181   	fcall	___fttol
  4994  02A5  0020               	movlb	0	; select bank0
  4995  02A6  0841               	movf	?___fttol+1,w
  4996  02A7  00E4               	movwf	_main$1595+1
  4997  02A8  0840               	movf	?___fttol,w
  4998  02A9  00E3               	movwf	_main$1595
  4999                           
  5000                           ;main.c: 244: LED7SegDisplayValue(fader8bitValue/2.55);
  5001  02AA  0864               	movf	_main$1595+1,w
  5002  02AB  00CF               	movwf	LED7SegDisplayValue@iTwoDigitNumber+1
  5003  02AC  0863               	movf	_main$1595,w
  5004  02AD  00CE               	movwf	LED7SegDisplayValue@iTwoDigitNumber
  5005  02AE  3184  24F9  3181   	fcall	_LED7SegDisplayValue
  5006  02B1  29AF               	goto	l3308
  5007  02B2                     __end_of_main:	
  5008                           
  5009                           	psect	text1
  5010  06E9                     __ptext1:	
  5011 ;; *************** function _blinkyLoop *****************
  5012 ;; Defined at:
  5013 ;;		line 102 in file "main.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  maxLoops        2   17[BANK0 ] int 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  loopCount       2   22[BANK0 ] int 
  5018 ;;  delayTime       2   20[BANK0 ] int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;Total ram usage:        7 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    5
  5035 ;; This function calls:
  5036 ;;		___wmul
  5037 ;;		_delay
  5038 ;; This function is called by:
  5039 ;;		_main
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _blinkyLoop
  5045  06E9                     _blinkyLoop:	
  5046                           
  5047                           ;main.c: 103: int loopCount=maxLoops;
  5048                           
  5049                           ;incstack = 0
  5050                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5051  06E9  0020               	movlb	0	; select bank0
  5052  06EA  0832               	movf	blinkyLoop@maxLoops+1,w
  5053  06EB  00B7               	movwf	blinkyLoop@loopCount+1
  5054  06EC  0831               	movf	blinkyLoop@maxLoops,w
  5055  06ED  00B6               	movwf	blinkyLoop@loopCount
  5056                           
  5057                           ;main.c: 104: int delayTime;
  5058                           ;main.c: 106: ODCONB &= 0xE0;
  5059  06EE  30E0               	movlw	224
  5060  06EF  00B3               	movwf	??_blinkyLoop
  5061  06F0  0833               	movf	??_blinkyLoop,w
  5062  06F1  003E               	movlb	30	; select bank30
  5063  06F2  05C5               	andwf	69,f	;volatile
  5064                           
  5065                           ;main.c: 107: ODCONC &= 0x1F;
  5066  06F3  301F               	movlw	31
  5067  06F4  0020               	movlb	0	; select bank0
  5068  06F5  00B3               	movwf	??_blinkyLoop
  5069  06F6  0833               	movf	??_blinkyLoop,w
  5070  06F7  003E               	movlb	30	; select bank30
  5071  06F8  05D0               	andwf	80,f	;volatile
  5072  06F9                     l3230:	
  5073                           ;main.c: 108: while(loopCount>0){
  5074                           
  5075  06F9  0020               	movlb	0	; select bank0
  5076  06FA  0837               	movf	blinkyLoop@loopCount+1,w
  5077  06FB  3A80               	xorlw	128
  5078  06FC  00B3               	movwf	??_blinkyLoop
  5079  06FD  3080               	movlw	128
  5080  06FE  0233               	subwf	??_blinkyLoop,w
  5081  06FF  1D03               	skipz
  5082  0700  2F03               	goto	u2845
  5083  0701  3001               	movlw	1
  5084  0702  0236               	subwf	blinkyLoop@loopCount,w
  5085  0703                     u2845:	
  5086  0703  1C03               	btfss	3,0
  5087  0704  2F3B               	goto	l3232
  5088                           
  5089                           ;main.c: 109: delayTime=loopCount*400;
  5090  0705  0020               	movlb	0	; select bank0
  5091  0706  0837               	movf	blinkyLoop@loopCount+1,w
  5092  0707  00A1               	movwf	___wmul@multiplier+1
  5093  0708  0836               	movf	blinkyLoop@loopCount,w
  5094  0709  00A0               	movwf	___wmul@multiplier
  5095  070A  3090               	movlw	144
  5096  070B  00A2               	movwf	___wmul@multiplicand
  5097  070C  3001               	movlw	1
  5098  070D  00A3               	movwf	___wmul@multiplicand+1
  5099  070E  318E  263F  3186   	fcall	___wmul
  5100  0711  0020               	movlb	0	; select bank0
  5101  0712  0821               	movf	?___wmul+1,w
  5102  0713  00B5               	movwf	blinkyLoop@delayTime+1
  5103  0714  0820               	movf	?___wmul,w
  5104  0715  00B4               	movwf	blinkyLoop@delayTime
  5105                           
  5106                           ;main.c: 112: PORTB |= 0x1F;
  5107  0716  301F               	movlw	31
  5108  0717  00B3               	movwf	??_blinkyLoop
  5109  0718  0833               	movf	??_blinkyLoop,w
  5110  0719  048D               	iorwf	13,f	;volatile
  5111                           
  5112                           ;main.c: 113: PORTC |= 0xE0;
  5113  071A  30E0               	movlw	224
  5114  071B  00B3               	movwf	??_blinkyLoop
  5115  071C  0833               	movf	??_blinkyLoop,w
  5116  071D  048E               	iorwf	14,f	;volatile
  5117                           
  5118                           ;main.c: 115: delay(delayTime);
  5119  071E  0835               	movf	blinkyLoop@delayTime+1,w
  5120  071F  00A7               	movwf	delay@delaytime+1
  5121  0720  0834               	movf	blinkyLoop@delayTime,w
  5122  0721  00A6               	movwf	delay@delaytime
  5123  0722  318F  27AD  3186   	fcall	_delay
  5124                           
  5125                           ;main.c: 117: PORTB &= 0xE0;
  5126  0725  30E0               	movlw	224
  5127  0726  0020               	movlb	0	; select bank0
  5128  0727  00B3               	movwf	??_blinkyLoop
  5129  0728  0833               	movf	??_blinkyLoop,w
  5130  0729  058D               	andwf	13,f	;volatile
  5131                           
  5132                           ;main.c: 118: PORTC &= 0x1F;
  5133  072A  301F               	movlw	31
  5134  072B  00B3               	movwf	??_blinkyLoop
  5135  072C  0833               	movf	??_blinkyLoop,w
  5136  072D  058E               	andwf	14,f	;volatile
  5137                           
  5138                           ;main.c: 120: delay(delayTime);
  5139  072E  0835               	movf	blinkyLoop@delayTime+1,w
  5140  072F  00A7               	movwf	delay@delaytime+1
  5141  0730  0834               	movf	blinkyLoop@delayTime,w
  5142  0731  00A6               	movwf	delay@delaytime
  5143  0732  318F  27AD  3186   	fcall	_delay
  5144                           
  5145                           ;main.c: 122: loopCount--;
  5146  0735  30FF               	movlw	255
  5147  0736  0020               	movlb	0	; select bank0
  5148  0737  07B6               	addwf	blinkyLoop@loopCount,f
  5149  0738  30FF               	movlw	255
  5150  0739  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  5151  073A  2EF9               	goto	l3230
  5152  073B                     l3232:	
  5153                           
  5154                           ;main.c: 123: }
  5155                           ;main.c: 124: PORTB |= 0x1F;
  5156  073B  301F               	movlw	31
  5157  073C  0020               	movlb	0	; select bank0
  5158  073D  00B3               	movwf	??_blinkyLoop
  5159  073E  0833               	movf	??_blinkyLoop,w
  5160  073F  048D               	iorwf	13,f	;volatile
  5161                           
  5162                           ;main.c: 125: PORTC |= 0xE0;
  5163  0740  30E0               	movlw	224
  5164  0741  00B3               	movwf	??_blinkyLoop
  5165  0742  0833               	movf	??_blinkyLoop,w
  5166  0743  048E               	iorwf	14,f	;volatile
  5167                           
  5168                           ;main.c: 126: delay(5000);
  5169  0744  3088               	movlw	136
  5170  0745  00A6               	movwf	delay@delaytime
  5171  0746  3013               	movlw	19
  5172  0747  00A7               	movwf	delay@delaytime+1
  5173  0748  318F  27AD         	fcall	_delay
  5174  074A  0008               	return
  5175  074B                     __end_of_blinkyLoop:	
  5176                           ;main.c: 127: return;
  5177                           
  5178                           
  5179                           	psect	text2
  5180  0E24                     __ptext2:	
  5181 ;; *************** function ___lbtoft *****************
  5182 ;; Defined at:
  5183 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  c               1    wreg     unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  c               1   15[BANK0 ] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  3    8[BANK0 ] float 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5197 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;Total ram usage:        8 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    4
  5204 ;; This function calls:
  5205 ;;		___ftpack
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           
  5212                           ;psect for function ___lbtoft
  5213  0E24                     ___lbtoft:	
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5217                           ;___lbtoft@c stored from wreg
  5218  0E24  0020               	movlb	0	; select bank0
  5219  0E25  00AF               	movwf	___lbtoft@c
  5220  0E26  082F               	movf	___lbtoft@c,w
  5221  0E27  00AB               	movwf	??___lbtoft
  5222  0E28  01AC               	clrf	??___lbtoft+1
  5223  0E29  01AD               	clrf	??___lbtoft+2
  5224  0E2A  082B               	movf	??___lbtoft,w
  5225  0E2B  00A0               	movwf	___ftpack@arg
  5226  0E2C  082C               	movf	??___lbtoft+1,w
  5227  0E2D  00A1               	movwf	___ftpack@arg+1
  5228  0E2E  082D               	movf	??___lbtoft+2,w
  5229  0E2F  00A2               	movwf	___ftpack@arg+2
  5230  0E30  308E               	movlw	142
  5231  0E31  00AE               	movwf	??___lbtoft+3
  5232  0E32  082E               	movf	??___lbtoft+3,w
  5233  0E33  00A3               	movwf	___ftpack@exp
  5234  0E34  01A4               	clrf	___ftpack@sign
  5235  0E35  3186  2684         	fcall	___ftpack
  5236  0E37  0020               	movlb	0	; select bank0
  5237  0E38  0820               	movf	?___ftpack,w
  5238  0E39  00A8               	movwf	?___lbtoft
  5239  0E3A  0821               	movf	?___ftpack+1,w
  5240  0E3B  00A9               	movwf	?___lbtoft+1
  5241  0E3C  0822               	movf	?___ftpack+2,w
  5242  0E3D  00AA               	movwf	?___lbtoft+2
  5243  0E3E  0008               	return
  5244  0E3F                     __end_of___lbtoft:	
  5245                           
  5246                           	psect	text3
  5247  0450                     __ptext3:	
  5248 ;; *************** function ___ftdiv *****************
  5249 ;; Defined at:
  5250 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  f2              3   16[BANK0 ] float 
  5253 ;;  f1              3   19[BANK0 ] float 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  f3              3   27[BANK0 ] float 
  5256 ;;  sign            1   31[BANK0 ] unsigned char 
  5257 ;;  exp             1   30[BANK0 ] unsigned char 
  5258 ;;  cntr            1   26[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  3   16[BANK0 ] float 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:       16 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    4
  5275 ;; This function calls:
  5276 ;;		___ftpack
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function ___ftdiv
  5284  0450                     ___ftdiv:	
  5285                           
  5286                           ;incstack = 0
  5287                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5288  0450  0020               	movlb	0	; select bank0
  5289  0451  0833               	movf	___ftdiv@f1,w
  5290  0452  00B6               	movwf	??___ftdiv
  5291  0453  0834               	movf	___ftdiv@f1+1,w
  5292  0454  00B7               	movwf	??___ftdiv+1
  5293  0455  0835               	movf	___ftdiv@f1+2,w
  5294  0456  00B8               	movwf	??___ftdiv+2
  5295  0457  1003               	clrc
  5296  0458  0D37               	rlf	??___ftdiv+1,w
  5297  0459  0D38               	rlf	??___ftdiv+2,w
  5298  045A  00B9               	movwf	??___ftdiv+3
  5299  045B  0839               	movf	??___ftdiv+3,w
  5300  045C  00BE               	movwf	___ftdiv@exp
  5301  045D  083E               	movf	___ftdiv@exp,w
  5302  045E  1D03               	btfss	3,2
  5303  045F  2C67               	goto	l2886
  5304  0460  3000               	movlw	0
  5305  0461  00B0               	movwf	?___ftdiv
  5306  0462  3000               	movlw	0
  5307  0463  00B1               	movwf	?___ftdiv+1
  5308  0464  3000               	movlw	0
  5309  0465  00B2               	movwf	?___ftdiv+2
  5310  0466  0008               	return
  5311  0467                     l2886:	
  5312  0467  0830               	movf	___ftdiv@f2,w
  5313  0468  00B6               	movwf	??___ftdiv
  5314  0469  0831               	movf	___ftdiv@f2+1,w
  5315  046A  00B7               	movwf	??___ftdiv+1
  5316  046B  0832               	movf	___ftdiv@f2+2,w
  5317  046C  00B8               	movwf	??___ftdiv+2
  5318  046D  1003               	clrc
  5319  046E  0D37               	rlf	??___ftdiv+1,w
  5320  046F  0D38               	rlf	??___ftdiv+2,w
  5321  0470  00B9               	movwf	??___ftdiv+3
  5322  0471  0839               	movf	??___ftdiv+3,w
  5323  0472  00BF               	movwf	___ftdiv@sign
  5324  0473  083F               	movf	___ftdiv@sign,w
  5325  0474  1D03               	btfss	3,2
  5326  0475  2C7D               	goto	l2892
  5327  0476  3000               	movlw	0
  5328  0477  00B0               	movwf	?___ftdiv
  5329  0478  3000               	movlw	0
  5330  0479  00B1               	movwf	?___ftdiv+1
  5331  047A  3000               	movlw	0
  5332  047B  00B2               	movwf	?___ftdiv+2
  5333  047C  0008               	return
  5334  047D                     l2892:	
  5335  047D  3000               	movlw	0
  5336  047E  00BB               	movwf	___ftdiv@f3
  5337  047F  3000               	movlw	0
  5338  0480  00BC               	movwf	___ftdiv@f3+1
  5339  0481  3000               	movlw	0
  5340  0482  00BD               	movwf	___ftdiv@f3+2
  5341  0483  3089               	movlw	137
  5342  0484  073F               	addwf	___ftdiv@sign,w
  5343  0485  00B6               	movwf	??___ftdiv
  5344  0486  0836               	movf	??___ftdiv,w
  5345  0487  02BE               	subwf	___ftdiv@exp,f
  5346  0488  0833               	movf	___ftdiv@f1,w
  5347  0489  00B6               	movwf	??___ftdiv
  5348  048A  0834               	movf	___ftdiv@f1+1,w
  5349  048B  00B7               	movwf	??___ftdiv+1
  5350  048C  0835               	movf	___ftdiv@f1+2,w
  5351  048D  00B8               	movwf	??___ftdiv+2
  5352  048E  3010               	movlw	16
  5353  048F                     u2495:	
  5354  048F  36B8               	lsrf	??___ftdiv+2,f
  5355  0490  0CB7               	rrf	??___ftdiv+1,f
  5356  0491  0CB6               	rrf	??___ftdiv,f
  5357  0492  0B89               	decfsz	9,f
  5358  0493  2C8F               	goto	u2495
  5359  0494  0836               	movf	??___ftdiv,w
  5360  0495  00B9               	movwf	??___ftdiv+3
  5361  0496  0839               	movf	??___ftdiv+3,w
  5362  0497  00BF               	movwf	___ftdiv@sign
  5363  0498  0830               	movf	___ftdiv@f2,w
  5364  0499  00B6               	movwf	??___ftdiv
  5365  049A  0831               	movf	___ftdiv@f2+1,w
  5366  049B  00B7               	movwf	??___ftdiv+1
  5367  049C  0832               	movf	___ftdiv@f2+2,w
  5368  049D  00B8               	movwf	??___ftdiv+2
  5369  049E  3010               	movlw	16
  5370  049F                     u2505:	
  5371  049F  36B8               	lsrf	??___ftdiv+2,f
  5372  04A0  0CB7               	rrf	??___ftdiv+1,f
  5373  04A1  0CB6               	rrf	??___ftdiv,f
  5374  04A2  0B89               	decfsz	9,f
  5375  04A3  2C9F               	goto	u2505
  5376  04A4  0836               	movf	??___ftdiv,w
  5377  04A5  00B9               	movwf	??___ftdiv+3
  5378  04A6  0839               	movf	??___ftdiv+3,w
  5379  04A7  06BF               	xorwf	___ftdiv@sign,f
  5380  04A8  3080               	movlw	128
  5381  04A9  00B6               	movwf	??___ftdiv
  5382  04AA  0836               	movf	??___ftdiv,w
  5383  04AB  05BF               	andwf	___ftdiv@sign,f
  5384  04AC  17B4               	bsf	___ftdiv@f1+1,7
  5385  04AD  30FF               	movlw	255
  5386  04AE  05B3               	andwf	___ftdiv@f1,f
  5387  04AF  30FF               	movlw	255
  5388  04B0  05B4               	andwf	___ftdiv@f1+1,f
  5389  04B1  3000               	movlw	0
  5390  04B2  05B5               	andwf	___ftdiv@f1+2,f
  5391  04B3  17B1               	bsf	___ftdiv@f2+1,7
  5392  04B4  30FF               	movlw	255
  5393  04B5  05B0               	andwf	___ftdiv@f2,f
  5394  04B6  30FF               	movlw	255
  5395  04B7  05B1               	andwf	___ftdiv@f2+1,f
  5396  04B8  3000               	movlw	0
  5397  04B9  05B2               	andwf	___ftdiv@f2+2,f
  5398  04BA  3018               	movlw	24
  5399  04BB  00B6               	movwf	??___ftdiv
  5400  04BC  0836               	movf	??___ftdiv,w
  5401  04BD  00BA               	movwf	___ftdiv@cntr
  5402  04BE                     l2906:	
  5403  04BE  3001               	movlw	1
  5404  04BF                     u2515:	
  5405  04BF  35BB               	lslf	___ftdiv@f3,f
  5406  04C0  0DBC               	rlf	___ftdiv@f3+1,f
  5407  04C1  0DBD               	rlf	___ftdiv@f3+2,f
  5408  04C2  0B89               	decfsz	9,f
  5409  04C3  2CBF               	goto	u2515
  5410  04C4  0832               	movf	___ftdiv@f2+2,w
  5411  04C5  0235               	subwf	___ftdiv@f1+2,w
  5412  04C6  1D03               	skipz
  5413  04C7  2CCE               	goto	u2525
  5414  04C8  0831               	movf	___ftdiv@f2+1,w
  5415  04C9  0234               	subwf	___ftdiv@f1+1,w
  5416  04CA  1D03               	skipz
  5417  04CB  2CCE               	goto	u2525
  5418  04CC  0830               	movf	___ftdiv@f2,w
  5419  04CD  0233               	subwf	___ftdiv@f1,w
  5420  04CE                     u2525:	
  5421  04CE  1C03               	skipc
  5422  04CF  2CD7               	goto	l2914
  5423  04D0  0830               	movf	___ftdiv@f2,w
  5424  04D1  02B3               	subwf	___ftdiv@f1,f
  5425  04D2  0831               	movf	___ftdiv@f2+1,w
  5426  04D3  3BB4               	subwfb	___ftdiv@f1+1,f
  5427  04D4  0832               	movf	___ftdiv@f2+2,w
  5428  04D5  3BB5               	subwfb	___ftdiv@f1+2,f
  5429  04D6  143B               	bsf	___ftdiv@f3,0
  5430  04D7                     l2914:	
  5431  04D7  3001               	movlw	1
  5432  04D8                     u2535:	
  5433  04D8  35B3               	lslf	___ftdiv@f1,f
  5434  04D9  0DB4               	rlf	___ftdiv@f1+1,f
  5435  04DA  0DB5               	rlf	___ftdiv@f1+2,f
  5436  04DB  0B89               	decfsz	9,f
  5437  04DC  2CD8               	goto	u2535
  5438  04DD  3001               	movlw	1
  5439  04DE  02BA               	subwf	___ftdiv@cntr,f
  5440  04DF  1D03               	btfss	3,2
  5441  04E0  2CBE               	goto	l2906
  5442  04E1  083B               	movf	___ftdiv@f3,w
  5443  04E2  00A0               	movwf	___ftpack@arg
  5444  04E3  083C               	movf	___ftdiv@f3+1,w
  5445  04E4  00A1               	movwf	___ftpack@arg+1
  5446  04E5  083D               	movf	___ftdiv@f3+2,w
  5447  04E6  00A2               	movwf	___ftpack@arg+2
  5448  04E7  083E               	movf	___ftdiv@exp,w
  5449  04E8  00B6               	movwf	??___ftdiv
  5450  04E9  0836               	movf	??___ftdiv,w
  5451  04EA  00A3               	movwf	___ftpack@exp
  5452  04EB  083F               	movf	___ftdiv@sign,w
  5453  04EC  00B7               	movwf	??___ftdiv+1
  5454  04ED  0837               	movf	??___ftdiv+1,w
  5455  04EE  00A4               	movwf	___ftpack@sign
  5456  04EF  3186  2684         	fcall	___ftpack
  5457  04F1  0020               	movlb	0	; select bank0
  5458  04F2  0820               	movf	?___ftpack,w
  5459  04F3  00B0               	movwf	?___ftdiv
  5460  04F4  0821               	movf	?___ftpack+1,w
  5461  04F5  00B1               	movwf	?___ftdiv+1
  5462  04F6  0822               	movf	?___ftpack+2,w
  5463  04F7  00B2               	movwf	?___ftdiv+2
  5464  04F8  0008               	return
  5465  04F9                     __end_of___ftdiv:	
  5466                           
  5467                           	psect	text4
  5468  02B2                     __ptext4:	
  5469 ;; *************** function _UpdateLEDsFromValue *****************
  5470 ;; Defined at:
  5471 ;;		line 248 in file "main.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  inFaderNum      1    wreg     unsigned char 
  5474 ;;  inValue         1    0[BANK0 ] unsigned char 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  inFaderNum      1    2[BANK0 ] unsigned char 
  5477 ;;  wkBrightFlag    1    4[BANK0 ] unsigned char 
  5478 ;;  wkOnFlag        1    3[BANK0 ] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5488 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;Total ram usage:        5 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    3
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_main
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           
  5503                           ;psect for function _UpdateLEDsFromValue
  5504  02B2                     _UpdateLEDsFromValue:	
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _UpdateLEDsFromValue: [wreg-fsr0h+status,2+status,0]
  5508                           ;UpdateLEDsFromValue@inFaderNum stored from wreg
  5509  02B2  0020               	movlb	0	; select bank0
  5510  02B3  00A2               	movwf	UpdateLEDsFromValue@inFaderNum
  5511                           
  5512                           ;main.c: 250: bool wkOnFlag = 0;
  5513  02B4  01A3               	clrf	UpdateLEDsFromValue@wkOnFlag
  5514                           
  5515                           ;main.c: 251: bool wkBrightFlag = 0;
  5516  02B5  01A4               	clrf	UpdateLEDsFromValue@wkBrightFlag
  5517                           
  5518                           ;main.c: 254: if (inValue > 80) wkOnFlag=1;
  5519  02B6  3051               	movlw	81
  5520  02B7  0220               	subwf	UpdateLEDsFromValue@inValue,w
  5521  02B8  1C03               	skipc
  5522  02B9  2ABC               	goto	l2728
  5523  02BA  01A3               	clrf	UpdateLEDsFromValue@wkOnFlag
  5524  02BB  0AA3               	incf	UpdateLEDsFromValue@wkOnFlag,f
  5525  02BC                     l2728:	
  5526                           
  5527                           ;main.c: 255: if (inValue > 170) wkBrightFlag=1;
  5528  02BC  30AB               	movlw	171
  5529  02BD  0220               	subwf	UpdateLEDsFromValue@inValue,w
  5530  02BE  1C03               	skipc
  5531  02BF  2B9A               	goto	l2828
  5532  02C0  01A4               	clrf	UpdateLEDsFromValue@wkBrightFlag
  5533  02C1  0AA4               	incf	UpdateLEDsFromValue@wkBrightFlag,f
  5534                           
  5535                           ;main.c: 257: switch(inFaderNum)
  5536  02C2  2B9A               	goto	l2828
  5537  02C3                     l2732:	
  5538                           ;main.c: 258: {
  5539                           ;main.c: 259: case 0 : {
  5540                           
  5541                           
  5542                           ;main.c: 260: if(wkOnFlag) { iLEDs0_LSB |= 0b00000010;
  5543  02C3  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5544  02C4  1903               	btfsc	3,2
  5545  02C5  2AD6               	goto	l2742
  5546  02C6  0021               	movlb	1	; select bank1
  5547  02C7  14B2               	bsf	_iLEDs0_LSB^(0+128),1
  5548                           
  5549                           ;main.c: 261: if(wkBrightFlag) {iLEDs0_LSB |= 0b00000001;}else{iLEDs0_LSB &= 0b11111110;
      +                          };
  5550  02C8  0020               	movlb	0	; select bank0
  5551  02C9  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5552  02CA  1903               	btfsc	3,2
  5553  02CB  2ACF               	goto	l2740
  5554  02CC  0021               	movlb	1	; select bank1
  5555  02CD  1432               	bsf	_iLEDs0_LSB^(0+128),0
  5556  02CE  0008               	return
  5557  02CF                     l2740:	
  5558  02CF  30FE               	movlw	254
  5559  02D0  0020               	movlb	0	; select bank0
  5560  02D1  00A1               	movwf	??_UpdateLEDsFromValue
  5561  02D2  0821               	movf	??_UpdateLEDsFromValue,w
  5562  02D3  0021               	movlb	1	; select bank1
  5563  02D4  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5564                           
  5565                           ;main.c: 262: }else{ iLEDs0_LSB &= 0b11111100;}
  5566  02D5  0008               	return
  5567  02D6                     l2742:	
  5568  02D6  30FC               	movlw	252
  5569  02D7  0020               	movlb	0	; select bank0
  5570  02D8  00A1               	movwf	??_UpdateLEDsFromValue
  5571  02D9  0821               	movf	??_UpdateLEDsFromValue,w
  5572  02DA  0021               	movlb	1	; select bank1
  5573  02DB  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5574                           
  5575                           ;main.c: 263: break;
  5576  02DC  0008               	return
  5577  02DD                     l2744:	
  5578                           ;main.c: 264: }
  5579                           ;main.c: 265: case 1 : {
  5580                           
  5581                           
  5582                           ;main.c: 266: if(wkOnFlag) { iLEDs0_LSB |= 0b00001000;
  5583  02DD  0020               	movlb	0	; select bank0
  5584  02DE  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5585  02DF  1903               	btfsc	3,2
  5586  02E0  2AF1               	goto	l2754
  5587  02E1  0021               	movlb	1	; select bank1
  5588  02E2  15B2               	bsf	_iLEDs0_LSB^(0+128),3
  5589                           
  5590                           ;main.c: 267: if(wkBrightFlag) {iLEDs0_LSB |= 0b00000100;}else{iLEDs0_LSB &= 0b11111011;
      +                          };
  5591  02E3  0020               	movlb	0	; select bank0
  5592  02E4  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5593  02E5  1903               	btfsc	3,2
  5594  02E6  2AEA               	goto	l2752
  5595  02E7  0021               	movlb	1	; select bank1
  5596  02E8  1532               	bsf	_iLEDs0_LSB^(0+128),2
  5597  02E9  0008               	return
  5598  02EA                     l2752:	
  5599  02EA  30FB               	movlw	251
  5600  02EB  0020               	movlb	0	; select bank0
  5601  02EC  00A1               	movwf	??_UpdateLEDsFromValue
  5602  02ED  0821               	movf	??_UpdateLEDsFromValue,w
  5603  02EE  0021               	movlb	1	; select bank1
  5604  02EF  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5605                           
  5606                           ;main.c: 268: }else{ iLEDs0_LSB &= 0b11110011;}
  5607  02F0  0008               	return
  5608  02F1                     l2754:	
  5609  02F1  30F3               	movlw	243
  5610  02F2  0020               	movlb	0	; select bank0
  5611  02F3  00A1               	movwf	??_UpdateLEDsFromValue
  5612  02F4  0821               	movf	??_UpdateLEDsFromValue,w
  5613  02F5  0021               	movlb	1	; select bank1
  5614  02F6  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5615                           
  5616                           ;main.c: 269: break;
  5617  02F7  0008               	return
  5618  02F8                     l2756:	
  5619                           ;main.c: 270: }
  5620                           ;main.c: 271: case 2 : {
  5621                           
  5622                           
  5623                           ;main.c: 272: if(wkOnFlag) { iLEDs0_LSB |= 0b00100000;
  5624  02F8  0020               	movlb	0	; select bank0
  5625  02F9  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5626  02FA  1903               	btfsc	3,2
  5627  02FB  2B0C               	goto	l2766
  5628  02FC  0021               	movlb	1	; select bank1
  5629  02FD  16B2               	bsf	_iLEDs0_LSB^(0+128),5
  5630                           
  5631                           ;main.c: 273: if(wkBrightFlag) {iLEDs0_LSB |= 0b00010000;}else{iLEDs0_LSB &= 0b11101111;
      +                          };
  5632  02FE  0020               	movlb	0	; select bank0
  5633  02FF  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5634  0300  1903               	btfsc	3,2
  5635  0301  2B05               	goto	l2764
  5636  0302  0021               	movlb	1	; select bank1
  5637  0303  1632               	bsf	_iLEDs0_LSB^(0+128),4
  5638  0304  0008               	return
  5639  0305                     l2764:	
  5640  0305  30EF               	movlw	239
  5641  0306  0020               	movlb	0	; select bank0
  5642  0307  00A1               	movwf	??_UpdateLEDsFromValue
  5643  0308  0821               	movf	??_UpdateLEDsFromValue,w
  5644  0309  0021               	movlb	1	; select bank1
  5645  030A  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5646                           
  5647                           ;main.c: 274: }else{ iLEDs0_LSB &= 0b11001111;}
  5648  030B  0008               	return
  5649  030C                     l2766:	
  5650  030C  30CF               	movlw	207
  5651  030D  0020               	movlb	0	; select bank0
  5652  030E  00A1               	movwf	??_UpdateLEDsFromValue
  5653  030F  0821               	movf	??_UpdateLEDsFromValue,w
  5654  0310  0021               	movlb	1	; select bank1
  5655  0311  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5656                           
  5657                           ;main.c: 275: break;
  5658  0312  0008               	return
  5659  0313                     l2768:	
  5660                           ;main.c: 276: }
  5661                           ;main.c: 277: case 3 : {
  5662                           
  5663                           
  5664                           ;main.c: 278: if(wkOnFlag) { iLEDs0_LSB |= 0b10000000;
  5665  0313  0020               	movlb	0	; select bank0
  5666  0314  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5667  0315  1903               	btfsc	3,2
  5668  0316  2B27               	goto	l2778
  5669  0317  0021               	movlb	1	; select bank1
  5670  0318  17B2               	bsf	_iLEDs0_LSB^(0+128),7
  5671                           
  5672                           ;main.c: 279: if(wkBrightFlag) {iLEDs0_LSB |= 0b01000000;}else{iLEDs0_LSB &= 0b10111111;
      +                          };
  5673  0319  0020               	movlb	0	; select bank0
  5674  031A  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5675  031B  1903               	btfsc	3,2
  5676  031C  2B20               	goto	l2776
  5677  031D  0021               	movlb	1	; select bank1
  5678  031E  1732               	bsf	_iLEDs0_LSB^(0+128),6
  5679  031F  0008               	return
  5680  0320                     l2776:	
  5681  0320  30BF               	movlw	191
  5682  0321  0020               	movlb	0	; select bank0
  5683  0322  00A1               	movwf	??_UpdateLEDsFromValue
  5684  0323  0821               	movf	??_UpdateLEDsFromValue,w
  5685  0324  0021               	movlb	1	; select bank1
  5686  0325  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5687                           
  5688                           ;main.c: 280: }else{ iLEDs0_LSB &= 0b00111111;}
  5689  0326  0008               	return
  5690  0327                     l2778:	
  5691  0327  303F               	movlw	63
  5692  0328  0020               	movlb	0	; select bank0
  5693  0329  00A1               	movwf	??_UpdateLEDsFromValue
  5694  032A  0821               	movf	??_UpdateLEDsFromValue,w
  5695  032B  0021               	movlb	1	; select bank1
  5696  032C  05B2               	andwf	_iLEDs0_LSB^(0+128),f
  5697                           
  5698                           ;main.c: 281: break;
  5699  032D  0008               	return
  5700  032E                     l2780:	
  5701                           ;main.c: 282: }
  5702                           ;main.c: 283: case 4 : {
  5703                           
  5704                           
  5705                           ;main.c: 284: if(wkOnFlag) { iLEDs0_MSB |= 0b00000010;
  5706  032E  0020               	movlb	0	; select bank0
  5707  032F  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5708  0330  1903               	btfsc	3,2
  5709  0331  2B42               	goto	l2790
  5710  0332  0021               	movlb	1	; select bank1
  5711  0333  14B3               	bsf	_iLEDs0_MSB^(0+128),1
  5712                           
  5713                           ;main.c: 285: if(wkBrightFlag) {iLEDs0_MSB |= 0b00000001;}else{iLEDs0_MSB &= 0b11111110;
      +                          };
  5714  0334  0020               	movlb	0	; select bank0
  5715  0335  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5716  0336  1903               	btfsc	3,2
  5717  0337  2B3B               	goto	l2788
  5718  0338  0021               	movlb	1	; select bank1
  5719  0339  1433               	bsf	_iLEDs0_MSB^(0+128),0
  5720  033A  0008               	return
  5721  033B                     l2788:	
  5722  033B  30FE               	movlw	254
  5723  033C  0020               	movlb	0	; select bank0
  5724  033D  00A1               	movwf	??_UpdateLEDsFromValue
  5725  033E  0821               	movf	??_UpdateLEDsFromValue,w
  5726  033F  0021               	movlb	1	; select bank1
  5727  0340  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5728                           
  5729                           ;main.c: 286: }else{ iLEDs0_MSB &= 0b11111100;}
  5730  0341  0008               	return
  5731  0342                     l2790:	
  5732  0342  30FC               	movlw	252
  5733  0343  0020               	movlb	0	; select bank0
  5734  0344  00A1               	movwf	??_UpdateLEDsFromValue
  5735  0345  0821               	movf	??_UpdateLEDsFromValue,w
  5736  0346  0021               	movlb	1	; select bank1
  5737  0347  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5738                           
  5739                           ;main.c: 287: break;
  5740  0348  0008               	return
  5741  0349                     l2792:	
  5742                           ;main.c: 288: }
  5743                           ;main.c: 289: case 5 : {
  5744                           
  5745                           
  5746                           ;main.c: 290: if(wkOnFlag) { iLEDs0_MSB |= 0b00001000;
  5747  0349  0020               	movlb	0	; select bank0
  5748  034A  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5749  034B  1903               	btfsc	3,2
  5750  034C  2B5D               	goto	l2802
  5751  034D  0021               	movlb	1	; select bank1
  5752  034E  15B3               	bsf	_iLEDs0_MSB^(0+128),3
  5753                           
  5754                           ;main.c: 291: if(wkBrightFlag) {iLEDs0_MSB |= 0b00000100;}else{iLEDs0_MSB &= 0b11111011;
      +                          };
  5755  034F  0020               	movlb	0	; select bank0
  5756  0350  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5757  0351  1903               	btfsc	3,2
  5758  0352  2B56               	goto	l2800
  5759  0353  0021               	movlb	1	; select bank1
  5760  0354  1533               	bsf	_iLEDs0_MSB^(0+128),2
  5761  0355  0008               	return
  5762  0356                     l2800:	
  5763  0356  30FB               	movlw	251
  5764  0357  0020               	movlb	0	; select bank0
  5765  0358  00A1               	movwf	??_UpdateLEDsFromValue
  5766  0359  0821               	movf	??_UpdateLEDsFromValue,w
  5767  035A  0021               	movlb	1	; select bank1
  5768  035B  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5769                           
  5770                           ;main.c: 292: }else{ iLEDs0_MSB &= 0b11110011;}
  5771  035C  0008               	return
  5772  035D                     l2802:	
  5773  035D  30F3               	movlw	243
  5774  035E  0020               	movlb	0	; select bank0
  5775  035F  00A1               	movwf	??_UpdateLEDsFromValue
  5776  0360  0821               	movf	??_UpdateLEDsFromValue,w
  5777  0361  0021               	movlb	1	; select bank1
  5778  0362  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5779                           
  5780                           ;main.c: 293: break;
  5781  0363  0008               	return
  5782  0364                     l2804:	
  5783                           ;main.c: 294: }
  5784                           ;main.c: 295: case 6 : {
  5785                           
  5786                           
  5787                           ;main.c: 296: if(wkOnFlag) { iLEDs0_MSB |= 0b00100000;
  5788  0364  0020               	movlb	0	; select bank0
  5789  0365  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5790  0366  1903               	btfsc	3,2
  5791  0367  2B78               	goto	l2814
  5792  0368  0021               	movlb	1	; select bank1
  5793  0369  16B3               	bsf	_iLEDs0_MSB^(0+128),5
  5794                           
  5795                           ;main.c: 297: if(wkBrightFlag) {iLEDs0_MSB |= 0b00010000;}else{iLEDs0_MSB &= 0b11101111;
      +                          };
  5796  036A  0020               	movlb	0	; select bank0
  5797  036B  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5798  036C  1903               	btfsc	3,2
  5799  036D  2B71               	goto	l2812
  5800  036E  0021               	movlb	1	; select bank1
  5801  036F  1633               	bsf	_iLEDs0_MSB^(0+128),4
  5802  0370  0008               	return
  5803  0371                     l2812:	
  5804  0371  30EF               	movlw	239
  5805  0372  0020               	movlb	0	; select bank0
  5806  0373  00A1               	movwf	??_UpdateLEDsFromValue
  5807  0374  0821               	movf	??_UpdateLEDsFromValue,w
  5808  0375  0021               	movlb	1	; select bank1
  5809  0376  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5810                           
  5811                           ;main.c: 298: }else{ iLEDs0_MSB &= 0b11001111;}
  5812  0377  0008               	return
  5813  0378                     l2814:	
  5814  0378  30CF               	movlw	207
  5815  0379  0020               	movlb	0	; select bank0
  5816  037A  00A1               	movwf	??_UpdateLEDsFromValue
  5817  037B  0821               	movf	??_UpdateLEDsFromValue,w
  5818  037C  0021               	movlb	1	; select bank1
  5819  037D  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5820                           
  5821                           ;main.c: 299: break;
  5822  037E  0008               	return
  5823  037F                     l2816:	
  5824                           ;main.c: 300: }
  5825                           ;main.c: 301: case 7 : {
  5826                           
  5827                           
  5828                           ;main.c: 302: if(wkOnFlag) { iLEDs0_MSB |= 0b10000000;
  5829  037F  0020               	movlb	0	; select bank0
  5830  0380  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5831  0381  1903               	btfsc	3,2
  5832  0382  2B93               	goto	l2826
  5833  0383  0021               	movlb	1	; select bank1
  5834  0384  17B3               	bsf	_iLEDs0_MSB^(0+128),7
  5835                           
  5836                           ;main.c: 303: if(wkBrightFlag) {iLEDs0_MSB |= 0b01000000;}else{iLEDs0_MSB &= 0b10111111;
      +                          };
  5837  0385  0020               	movlb	0	; select bank0
  5838  0386  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5839  0387  1903               	btfsc	3,2
  5840  0388  2B8C               	goto	l2824
  5841  0389  0021               	movlb	1	; select bank1
  5842  038A  1733               	bsf	_iLEDs0_MSB^(0+128),6
  5843  038B  0008               	return
  5844  038C                     l2824:	
  5845  038C  30BF               	movlw	191
  5846  038D  0020               	movlb	0	; select bank0
  5847  038E  00A1               	movwf	??_UpdateLEDsFromValue
  5848  038F  0821               	movf	??_UpdateLEDsFromValue,w
  5849  0390  0021               	movlb	1	; select bank1
  5850  0391  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5851                           
  5852                           ;main.c: 304: }else{ iLEDs0_MSB &= 0b00111111;}
  5853  0392  0008               	return
  5854  0393                     l2826:	
  5855  0393  303F               	movlw	63
  5856  0394  0020               	movlb	0	; select bank0
  5857  0395  00A1               	movwf	??_UpdateLEDsFromValue
  5858  0396  0821               	movf	??_UpdateLEDsFromValue,w
  5859  0397  0021               	movlb	1	; select bank1
  5860  0398  05B3               	andwf	_iLEDs0_MSB^(0+128),f
  5861                           
  5862                           ;main.c: 305: }
  5863                           ;main.c: 306: }
  5864  0399  0008               	return
  5865  039A                     l2828:	
  5866  039A  0020               	movlb	0	; select bank0
  5867  039B  0822               	movf	UpdateLEDsFromValue@inFaderNum,w
  5868                           
  5869                           ; Switch size 1, requested type "space"
  5870                           ; Number of cases is 8, Range of values is 0 to 7
  5871                           ; switch strategies available:
  5872                           ; Name         Instructions Cycles
  5873                           ; direct_byte           22     6 (fixed)
  5874                           ; simple_byte           25    13 (average)
  5875                           ; jumptable            260     6 (fixed)
  5876                           ;	Chosen strategy is direct_byte
  5877  039C  0084               	movwf	4
  5878  039D  3008               	movlw	8
  5879  039E  0204               	subwf	4,w
  5880  039F  1803               	skipnc
  5881  03A0  0008               	return
  5882  03A1  3188               	movlp	high S3396
  5883  03A2  3504               	lslf	4,w
  5884  03A3  3E18               	addlw	low S3396
  5885  03A4  0082               	movwf	2
  5886  03A5  0008               	return
  5887  03A6                     __end_of_UpdateLEDsFromValue:	
  5888                           
  5889                           	psect	swtext1
  5890  0818                     __pswtext1:	
  5891  0818                     S3396:	
  5892  0818  3182  2AC3         	ljmp	l2732
  5893  081A  3182  2ADD         	ljmp	l2744
  5894  081C  3182  2AF8         	ljmp	l2756
  5895  081E  3183  2B13         	ljmp	l2768
  5896  0820  3183  2B2E         	ljmp	l2780
  5897  0822  3183  2B49         	ljmp	l2792
  5898  0824  3183  2B64         	ljmp	l2804
  5899  0826  3183  2B7F         	ljmp	l2816
  5900                           
  5901                           	psect	text5
  5902  0D83                     __ptext5:	
  5903 ;; *************** function _SYSTEM_Initialize *****************
  5904 ;; Defined at:
  5905 ;;		line 83 in file "mcc_generated_files/mcc.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, pclath, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    4
  5926 ;; This function calls:
  5927 ;;		_ADCC_Initialize
  5928 ;;		_I2C1_Initialize
  5929 ;;		_OSCILLATOR_Initialize
  5930 ;;		_PIN_MANAGER_Initialize
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           
  5937                           ;psect for function _SYSTEM_Initialize
  5938  0D83                     _SYSTEM_Initialize:	
  5939                           
  5940                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5944  0D83  318F  276F  318D   	fcall	_PIN_MANAGER_Initialize
  5945                           
  5946                           ;mcc.c: 87: OSCILLATOR_Initialize();
  5947  0D86  318D  256F  318D   	fcall	_OSCILLATOR_Initialize
  5948                           
  5949                           ;mcc.c: 88: I2C1_Initialize();
  5950  0D89  318D  25EF  318D   	fcall	_I2C1_Initialize
  5951                           
  5952                           ;mcc.c: 89: ADCC_Initialize();
  5953  0D8C  318E  2609         	fcall	_ADCC_Initialize
  5954  0D8E  0008               	return
  5955  0D8F                     __end_of_SYSTEM_Initialize:	
  5956                           
  5957                           	psect	text6
  5958  0F6F                     __ptext6:	
  5959 ;; *************** function _PIN_MANAGER_Initialize *****************
  5960 ;; Defined at:
  5961 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  state           1    0[BANK0 ] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;Total ram usage:        1 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    3
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_SYSTEM_Initialize
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           
  5990                           ;psect for function _PIN_MANAGER_Initialize
  5991  0F6F                     _PIN_MANAGER_Initialize:	
  5992                           
  5993                           ;pin_manager.c: 57: LATA = 0x00;
  5994                           
  5995                           ;incstack = 0
  5996                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5997  0F6F  0020               	movlb	0	; select bank0
  5998  0F70  0196               	clrf	22	;volatile
  5999                           
  6000                           ;pin_manager.c: 58: LATB = 0x00;
  6001  0F71  0197               	clrf	23	;volatile
  6002                           
  6003                           ;pin_manager.c: 59: LATC = 0x00;
  6004  0F72  0198               	clrf	24	;volatile
  6005                           
  6006                           ;pin_manager.c: 64: TRISA = 0xFF;
  6007  0F73  30FF               	movlw	255
  6008  0F74  0091               	movwf	17	;volatile
  6009                           
  6010                           ;pin_manager.c: 65: TRISB = 0xE0;
  6011  0F75  30E0               	movlw	224
  6012  0F76  0092               	movwf	18	;volatile
  6013                           
  6014                           ;pin_manager.c: 66: TRISC = 0x1D;
  6015  0F77  301D               	movlw	29
  6016  0F78  0093               	movwf	19	;volatile
  6017                           
  6018                           ;pin_manager.c: 71: ANSELC = 0xE7;
  6019  0F79  30E7               	movlw	231
  6020  0F7A  003E               	movlb	30	; select bank30
  6021  0F7B  00CE               	movwf	78	;volatile
  6022                           
  6023                           ;pin_manager.c: 72: ANSELB = 0x1F;
  6024  0F7C  301F               	movlw	31
  6025  0F7D  00C3               	movwf	67	;volatile
  6026                           
  6027                           ;pin_manager.c: 73: ANSELA = 0xFF;
  6028  0F7E  30FF               	movlw	255
  6029  0F7F  00B8               	movwf	56	;volatile
  6030                           
  6031                           ;pin_manager.c: 78: WPUE = 0x00;
  6032  0F80  01E5               	clrf	101	;volatile
  6033                           
  6034                           ;pin_manager.c: 79: WPUB = 0x00;
  6035  0F81  01C4               	clrf	68	;volatile
  6036                           
  6037                           ;pin_manager.c: 80: WPUA = 0x00;
  6038  0F82  01B9               	clrf	57	;volatile
  6039                           
  6040                           ;pin_manager.c: 81: WPUC = 0x00;
  6041  0F83  01CF               	clrf	79	;volatile
  6042                           
  6043                           ;pin_manager.c: 86: ODCONA = 0x00;
  6044  0F84  01BA               	clrf	58	;volatile
  6045                           
  6046                           ;pin_manager.c: 87: ODCONB = 0x00;
  6047  0F85  01C5               	clrf	69	;volatile
  6048                           
  6049                           ;pin_manager.c: 88: ODCONC = 0x00;
  6050  0F86  01D0               	clrf	80	;volatile
  6051                           
  6052                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  6053  0F87  3000               	movlw	0
  6054  0F88  1B8B               	btfsc	11,7	;volatile
  6055  0F89  3001               	movlw	1
  6056  0F8A  0020               	movlb	0	; select bank0
  6057  0F8B  00A0               	movwf	PIN_MANAGER_Initialize@state
  6058                           
  6059                           ;pin_manager.c: 96: GIE = 0;
  6060  0F8C  138B               	bcf	11,7	;volatile
  6061                           
  6062                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  6063  0F8D  3055               	movlw	85
  6064  0F8E  003D               	movlb	29	; select bank29
  6065  0F8F  008F               	movwf	15	;volsfr
  6066                           
  6067                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  6068  0F90  30AA               	movlw	170
  6069  0F91  008F               	movwf	15	;volsfr
  6070                           
  6071                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  6072  0F92  100F               	bcf	15,0	;volsfr
  6073                           
  6074                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  6075  0F93  0846               	movf	70,w	;volatile
  6076  0F94  39E0               	andlw	-32
  6077  0F95  3813               	iorlw	19
  6078  0F96  00C6               	movwf	70	;volatile
  6079                           
  6080                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  6081  0F97  0845               	movf	69,w	;volatile
  6082  0F98  39E0               	andlw	-32
  6083  0F99  3814               	iorlw	20
  6084  0F9A  00C5               	movwf	69	;volatile
  6085                           
  6086                           ;pin_manager.c: 103: RC3PPS = 0x15;
  6087  0F9B  3015               	movlw	21
  6088  0F9C  003E               	movlb	30	; select bank30
  6089  0F9D  00A3               	movwf	35	;volatile
  6090                           
  6091                           ;pin_manager.c: 104: RC4PPS = 0x14;
  6092  0F9E  3014               	movlw	20
  6093  0F9F  00A4               	movwf	36	;volatile
  6094                           
  6095                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  6096  0FA0  3055               	movlw	85
  6097  0FA1  003D               	movlb	29	; select bank29
  6098  0FA2  008F               	movwf	15	;volsfr
  6099                           
  6100                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  6101  0FA3  30AA               	movlw	170
  6102  0FA4  008F               	movwf	15	;volsfr
  6103                           
  6104                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  6105  0FA5  140F               	bsf	15,0	;volsfr
  6106                           
  6107                           ;pin_manager.c: 110: GIE = state;
  6108  0FA6  0020               	movlb	0	; select bank0
  6109  0FA7  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  6110  0FA8  2FAB               	goto	u2790
  6111  0FA9  178B               	bsf	11,7	;volatile
  6112  0FAA  0008               	return
  6113  0FAB                     u2790:	
  6114  0FAB  138B               	bcf	11,7	;volatile
  6115  0FAC  0008               	return
  6116  0FAD                     __end_of_PIN_MANAGER_Initialize:	
  6117                           
  6118                           	psect	text7
  6119  0D6F                     __ptext7:	
  6120 ;; *************** function _OSCILLATOR_Initialize *****************
  6121 ;; Defined at:
  6122 ;;		line 92 in file "mcc_generated_files/mcc.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, status,2
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;Total ram usage:        0 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; Hardware stack levels required when called:    3
  6143 ;; This function calls:
  6144 ;;		Nothing
  6145 ;; This function is called by:
  6146 ;;		_SYSTEM_Initialize
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function _OSCILLATOR_Initialize
  6152  0D6F                     _OSCILLATOR_Initialize:	
  6153                           
  6154                           ;mcc.c: 95: OSCCON1 = 0x60;
  6155                           
  6156                           ;incstack = 0
  6157                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6158  0D6F  3060               	movlw	96
  6159  0D70  0031               	movlb	17	; select bank17
  6160  0D71  008D               	movwf	13	;volatile
  6161                           
  6162                           ;mcc.c: 97: OSCCON3 = 0x00;
  6163  0D72  018F               	clrf	15	;volatile
  6164                           
  6165                           ;mcc.c: 99: OSCEN = 0x00;
  6166  0D73  0191               	clrf	17	;volatile
  6167                           
  6168                           ;mcc.c: 101: OSCFRQ = 0x06;
  6169  0D74  3006               	movlw	6
  6170  0D75  0093               	movwf	19	;volatile
  6171                           
  6172                           ;mcc.c: 103: OSCTUNE = 0x00;
  6173  0D76  0192               	clrf	18	;volatile
  6174  0D77  0008               	return
  6175  0D78                     __end_of_OSCILLATOR_Initialize:	
  6176                           
  6177                           	psect	text8
  6178  0DEF                     __ptext8:	
  6179 ;; *************** function _I2C1_Initialize *****************
  6180 ;; Defined at:
  6181 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;Total ram usage:        1 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    3
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_SYSTEM_Initialize
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _I2C1_Initialize
  6211  0DEF                     _I2C1_Initialize:	
  6212                           
  6213                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  6214                           
  6215                           ;incstack = 0
  6216                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  6217  0DEF  30C4               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  6218  0DF0  0020               	movlb	0	; select bank0
  6219  0DF1  00A0               	movwf	??_I2C1_Initialize
  6220  0DF2  0820               	movf	??_I2C1_Initialize,w
  6221  0DF3  0021               	movlb	1	; select bank1
  6222  0DF4  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  6223                           
  6224                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  6225  0DF5  30C4               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  6226  0DF6  0020               	movlb	0	; select bank0
  6227  0DF7  00A0               	movwf	??_I2C1_Initialize
  6228  0DF8  0820               	movf	??_I2C1_Initialize,w
  6229  0DF9  0021               	movlb	1	; select bank1
  6230  0DFA  00A0               	movwf	_i2c1_object^(0+128)
  6231                           
  6232                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  6233  0DFB  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  6234                           
  6235                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  6236  0DFC  1022               	bcf	(_i2c1_object^(0+128)+2),0
  6237                           
  6238                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  6239  0DFD  01A4               	clrf	(_i2c1_object^(0+128)+4)
  6240                           
  6241                           ;i2c1.c: 208: SSP1STAT = 0x00;
  6242  0DFE  0023               	movlb	3	; select bank3
  6243  0DFF  018F               	clrf	15	;volatile
  6244                           
  6245                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  6246  0E00  3028               	movlw	40
  6247  0E01  0090               	movwf	16	;volatile
  6248                           
  6249                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  6250  0E02  0192               	clrf	18	;volatile
  6251                           
  6252                           ;i2c1.c: 214: SSP1ADD = 0x13;
  6253  0E03  3013               	movlw	19
  6254  0E04  008D               	movwf	13	;volatile
  6255                           
  6256                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  6257  0E05  002E               	movlb	14	; select bank14
  6258  0E06  100F               	bcf	15,0	;volatile
  6259                           
  6260                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  6261  0E07  1419               	bsf	25,0	;volatile
  6262  0E08  0008               	return
  6263  0E09                     __end_of_I2C1_Initialize:	
  6264                           
  6265                           	psect	text9
  6266  0E09                     __ptext9:	
  6267 ;; *************** function _ADCC_Initialize *****************
  6268 ;; Defined at:
  6269 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    3
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_SYSTEM_Initialize
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function _ADCC_Initialize
  6299  0E09                     _ADCC_Initialize:	
  6300                           
  6301                           ;adcc.c: 66: ADCON1 = 0x00;
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  6305  0E09  0021               	movlb	1	; select bank1
  6306  0E0A  0194               	clrf	20	;volatile
  6307                           
  6308                           ;adcc.c: 68: ADCON2 = 0x03;
  6309  0E0B  3003               	movlw	3
  6310  0E0C  0095               	movwf	21	;volatile
  6311                           
  6312                           ;adcc.c: 70: ADCON3 = 0x00;
  6313  0E0D  0196               	clrf	22	;volatile
  6314                           
  6315                           ;adcc.c: 72: ADACT = 0x00;
  6316  0E0E  0199               	clrf	25	;volatile
  6317                           
  6318                           ;adcc.c: 74: ADSTAT = 0x00;
  6319  0E0F  0197               	clrf	23	;volatile
  6320                           
  6321                           ;adcc.c: 76: ADCLK = 0x0F;
  6322  0E10  300F               	movlw	15
  6323  0E11  0098               	movwf	24	;volatile
  6324                           
  6325                           ;adcc.c: 78: ADREF = 0x00;
  6326  0E12  019A               	clrf	26	;volatile
  6327                           
  6328                           ;adcc.c: 80: ADCAP = 0x00;
  6329  0E13  019B               	clrf	27	;volatile
  6330                           
  6331                           ;adcc.c: 82: ADPRE = 0x00;
  6332  0E14  019C               	clrf	28	;volatile
  6333                           
  6334                           ;adcc.c: 84: ADACQ = 0x04;
  6335  0E15  3004               	movlw	4
  6336  0E16  009D               	movwf	29	;volatile
  6337                           
  6338                           ;adcc.c: 86: ADPCH = 0x00;
  6339  0E17  019E               	clrf	30	;volatile
  6340                           
  6341                           ;adcc.c: 88: ADRPT = 0x00;
  6342  0E18  0022               	movlb	2	; select bank2
  6343  0E19  018D               	clrf	13	;volatile
  6344                           
  6345                           ;adcc.c: 90: ADLTHL = 0x00;
  6346  0E1A  018E               	clrf	14	;volatile
  6347                           
  6348                           ;adcc.c: 92: ADLTHH = 0x00;
  6349  0E1B  018F               	clrf	15	;volatile
  6350                           
  6351                           ;adcc.c: 94: ADUTHL = 0x00;
  6352  0E1C  0190               	clrf	16	;volatile
  6353                           
  6354                           ;adcc.c: 96: ADUTHH = 0x00;
  6355  0E1D  0191               	clrf	17	;volatile
  6356                           
  6357                           ;adcc.c: 98: ADSTPTL = 0x00;
  6358  0E1E  0192               	clrf	18	;volatile
  6359                           
  6360                           ;adcc.c: 100: ADSTPTH = 0x00;
  6361  0E1F  0193               	clrf	19	;volatile
  6362                           
  6363                           ;adcc.c: 103: ADCON0 = 0x84;
  6364  0E20  3084               	movlw	132
  6365  0E21  0021               	movlb	1	; select bank1
  6366  0E22  0093               	movwf	19	;volatile
  6367  0E23  0008               	return
  6368  0E24                     __end_of_ADCC_Initialize:	
  6369                           
  6370                           	psect	text10
  6371  0610                     __ptext10:	
  6372 ;; *************** function _MYI2C_Write2LEDBytes *****************
  6373 ;; Defined at:
  6374 ;;		line 441 in file "main.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  slaveDeviceA    1    wreg     unsigned char 
  6377 ;;  MSBWriteByte    1   14[BANK0 ] unsigned char 
  6378 ;;  LSBWriteByte    1   15[BANK0 ] unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  slaveDeviceA    1   41[BANK0 ] unsigned char 
  6381 ;;  sourceData     16   20[BANK0 ] unsigned char [16]
  6382 ;;  writeBuffer     3   47[BANK0 ] unsigned char [3]
  6383 ;;  timeOut         2   44[BANK0 ] unsigned int 
  6384 ;;  counter         2   42[BANK0 ] unsigned int 
  6385 ;;  nCount          2   39[BANK0 ] unsigned int 
  6386 ;;  dataAddress     2   36[BANK0 ] unsigned int 
  6387 ;;  pData           2    0        PTR unsigned char 
  6388 ;;  status          1   50[BANK0 ] enum E14267
  6389 ;;  pointerByte     1   46[BANK0 ] unsigned char 
  6390 ;;  pD              1   38[BANK0 ] PTR unsigned char 
  6391 ;;		 -> MYI2C_Write2LEDBytes@sourceData(16), 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;Total ram usage:       37 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    5
  6408 ;; This function calls:
  6409 ;;		_I2C1_MasterWrite
  6410 ;; This function is called by:
  6411 ;;		_main
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           
  6416                           ;psect for function _MYI2C_Write2LEDBytes
  6417  0610                     _MYI2C_Write2LEDBytes:	
  6418                           
  6419                           ;incstack = 0
  6420                           ; Regs used in _MYI2C_Write2LEDBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6421                           ;MYI2C_Write2LEDBytes@slaveDeviceAddress stored from wreg
  6422  0610  0020               	movlb	0	; select bank0
  6423  0611  00C9               	movwf	MYI2C_Write2LEDBytes@slaveDeviceAddress
  6424                           
  6425                           ;main.c: 452: uint16_t dataAddress;
  6426                           ;main.c: 453: uint8_t sourceData[16] = { 0xA0, 0xA1, 0xA2, 0xA3,
  6427                           ;main.c: 454: 0xA4, 0xA5, 0xA6, 0xA7,
  6428                           ;main.c: 455: 0xA8, 0xA9, 0xAA, 0xAB,
  6429                           ;main.c: 456: 0xAC, 0xAD, 0xAE, 0xAF };
  6430  0612  30DB               	movlw	low MYI2C_Write2LEDBytes@F14457
  6431  0613  0086               	movwf	6
  6432  0614  3000               	movlw	high MYI2C_Write2LEDBytes@F14457
  6433  0615  0087               	movwf	7
  6434  0616  3034               	movlw	low MYI2C_Write2LEDBytes@sourceData
  6435  0617  0084               	movwf	4
  6436  0618  3000               	movlw	high MYI2C_Write2LEDBytes@sourceData
  6437  0619  0085               	movwf	5
  6438  061A  3010               	movlw	16
  6439  061B  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6440  061C                     u2400:	
  6441  061C  0016               	moviw fsr1++
  6442  061D  001A               	movwi fsr0++
  6443  061E  0BB0               	decfsz	??_MYI2C_Write2LEDBytes,f
  6444  061F  2E1C               	goto	u2400
  6445                           
  6446                           ;main.c: 457: uint8_t *pData;
  6447                           ;main.c: 458: uint16_t nCount;
  6448                           ;main.c: 460: uint8_t writeBuffer[3];
  6449                           ;main.c: 461: uint8_t *pD;
  6450                           ;main.c: 462: uint16_t counter, timeOut;
  6451                           ;main.c: 463: uint8_t pointerByte = 0b00100000;
  6452  0620  3020               	movlw	32
  6453  0621  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6454  0622  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6455  0623  00CE               	movwf	MYI2C_Write2LEDBytes@pointerByte
  6456                           
  6457                           ;main.c: 465: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  6458  0624  3002               	movlw	2
  6459  0625  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6460  0626  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6461  0627  00D2               	movwf	MYI2C_Write2LEDBytes@status
  6462                           
  6463                           ;main.c: 467: dataAddress = 0x00;
  6464  0628  01C4               	clrf	MYI2C_Write2LEDBytes@dataAddress
  6465  0629  01C5               	clrf	MYI2C_Write2LEDBytes@dataAddress+1
  6466                           
  6467                           ;main.c: 468: pD = sourceData;
  6468  062A  3034               	movlw	(low (MYI2C_Write2LEDBytes@sourceData| 0))& (0+255)
  6469  062B  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6470  062C  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6471  062D  00C6               	movwf	MYI2C_Write2LEDBytes@pD
  6472                           
  6473                           ;main.c: 469: nCount = 1;
  6474  062E  3001               	movlw	1
  6475  062F  00C7               	movwf	MYI2C_Write2LEDBytes@nCount
  6476  0630  3000               	movlw	0
  6477  0631  00C8               	movwf	MYI2C_Write2LEDBytes@nCount+1
  6478                           
  6479                           ;main.c: 473: PORTC |= 0x02;
  6480  0632  148E               	bsf	14,1	;volatile
  6481                           
  6482                           ;main.c: 475: for (counter = 0; counter < nCount; counter++)
  6483  0633  01CA               	clrf	MYI2C_Write2LEDBytes@counter
  6484  0634  01CB               	clrf	MYI2C_Write2LEDBytes@counter+1
  6485  0635                     l541:	
  6486  0635  0848               	movf	MYI2C_Write2LEDBytes@nCount+1,w
  6487  0636  024B               	subwf	MYI2C_Write2LEDBytes@counter+1,w
  6488  0637  1D03               	skipz
  6489  0638  2E3B               	goto	u2465
  6490  0639  0847               	movf	MYI2C_Write2LEDBytes@nCount,w
  6491  063A  024A               	subwf	MYI2C_Write2LEDBytes@counter,w
  6492  063B                     u2465:	
  6493  063B  1803               	btfsc	3,0
  6494  063C  2E7F               	goto	l2878
  6495                           
  6496                           ;main.c: 476: {
  6497                           ;main.c: 479: writeBuffer[0] = pointerByte;
  6498  063D  084E               	movf	MYI2C_Write2LEDBytes@pointerByte,w
  6499  063E  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6500  063F  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6501  0640  00CF               	movwf	MYI2C_Write2LEDBytes@writeBuffer
  6502                           
  6503                           ;main.c: 481: writeBuffer[1] = (MSBWriteByte);
  6504  0641  082E               	movf	MYI2C_Write2LEDBytes@MSBWriteByte,w
  6505  0642  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6506  0643  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6507  0644  00D0               	movwf	MYI2C_Write2LEDBytes@writeBuffer+1
  6508                           
  6509                           ;main.c: 482: writeBuffer[2] = (LSBWriteByte);
  6510  0645  082F               	movf	MYI2C_Write2LEDBytes@LSBWriteByte,w
  6511  0646  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6512  0647  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6513  0648  00D1               	movwf	MYI2C_Write2LEDBytes@writeBuffer+2
  6514                           
  6515                           ;main.c: 487: timeOut = 0;
  6516  0649  01CC               	clrf	MYI2C_Write2LEDBytes@timeOut
  6517  064A  01CD               	clrf	MYI2C_Write2LEDBytes@timeOut+1
  6518  064B                     l2870:	
  6519                           ;main.c: 488: while(status != I2C1_MESSAGE_FAIL)
  6520                           
  6521  064B  0352               	decf	MYI2C_Write2LEDBytes@status,w
  6522  064C  1903               	btfsc	3,2
  6523  064D  2E73               	goto	l2872
  6524                           
  6525                           ;main.c: 489: {
  6526                           ;main.c: 491: I2C1_MasterWrite( writeBuffer,
  6527                           ;main.c: 492: 3,
  6528                           ;main.c: 493: slaveDeviceAddress,
  6529                           ;main.c: 494: &status);
  6530  064E  3003               	movlw	3
  6531  064F  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6532  0650  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6533  0651  00A7               	movwf	I2C1_MasterWrite@length
  6534  0652  0849               	movf	MYI2C_Write2LEDBytes@slaveDeviceAddress,w
  6535  0653  00B1               	movwf	??_MYI2C_Write2LEDBytes+1
  6536  0654  01B2               	clrf	??_MYI2C_Write2LEDBytes+2
  6537  0655  0831               	movf	??_MYI2C_Write2LEDBytes+1,w
  6538  0656  00A8               	movwf	I2C1_MasterWrite@address
  6539  0657  0832               	movf	??_MYI2C_Write2LEDBytes+2,w
  6540  0658  00A9               	movwf	I2C1_MasterWrite@address+1
  6541  0659  3052               	movlw	(low (MYI2C_Write2LEDBytes@status| 0))& (0+255)
  6542  065A  00B3               	movwf	??_MYI2C_Write2LEDBytes+3
  6543  065B  0833               	movf	??_MYI2C_Write2LEDBytes+3,w
  6544  065C  00AA               	movwf	I2C1_MasterWrite@pflag
  6545  065D  304F               	movlw	(low (MYI2C_Write2LEDBytes@writeBuffer| 0))& (0+255)
  6546  065E  318E  26E3  3186   	fcall	_I2C1_MasterWrite
  6547  0661                     l2856:	
  6548                           ;main.c: 497: while(status == I2C1_MESSAGE_PENDING);
  6549                           
  6550  0661  3002               	movlw	2
  6551  0662  0020               	movlb	0	; select bank0
  6552  0663  0652               	xorwf	MYI2C_Write2LEDBytes@status,w
  6553  0664  1903               	btfsc	3,2
  6554  0665  2E61               	goto	l2856
  6555                           
  6556                           ;main.c: 499: if (status == I2C1_MESSAGE_COMPLETE)
  6557  0666  0852               	movf	MYI2C_Write2LEDBytes@status,w
  6558  0667  1903               	btfsc	3,2
  6559  0668  2E73               	goto	l2872
  6560                           
  6561                           ;main.c: 509: if (timeOut == 100)
  6562                           
  6563                           ;main.c: 500: break;
  6564  0669  3064               	movlw	100
  6565  066A  064C               	xorwf	MYI2C_Write2LEDBytes@timeOut,w
  6566  066B  044D               	iorwf	MYI2C_Write2LEDBytes@timeOut+1,w
  6567  066C  1903               	btfsc	3,2
  6568  066D  2E73               	goto	l2872
  6569                           
  6570                           ;main.c: 511: else
  6571                           ;main.c: 512: timeOut++;
  6572                           
  6573                           ;main.c: 510: break;
  6574  066E  3001               	movlw	1
  6575  066F  07CC               	addwf	MYI2C_Write2LEDBytes@timeOut,f
  6576  0670  3000               	movlw	0
  6577  0671  3DCD               	addwfc	MYI2C_Write2LEDBytes@timeOut+1,f
  6578  0672  2E4B               	goto	l2870
  6579  0673                     l2872:	
  6580                           
  6581                           ;main.c: 513: }
  6582                           ;main.c: 515: if (status == I2C1_MESSAGE_FAIL)
  6583  0673  0352               	decf	MYI2C_Write2LEDBytes@status,w
  6584  0674  1903               	btfsc	3,2
  6585  0675  2E7F               	goto	l2878
  6586                           
  6587                           ;main.c: 518: }
  6588                           ;main.c: 519: dataAddress++;
  6589                           
  6590                           ;main.c: 516: {
  6591                           ;main.c: 517: break;
  6592  0676  3001               	movlw	1
  6593  0677  07C4               	addwf	MYI2C_Write2LEDBytes@dataAddress,f
  6594  0678  3000               	movlw	0
  6595  0679  3DC5               	addwfc	MYI2C_Write2LEDBytes@dataAddress+1,f
  6596  067A  3001               	movlw	1
  6597  067B  07CA               	addwf	MYI2C_Write2LEDBytes@counter,f
  6598  067C  3000               	movlw	0
  6599  067D  3DCB               	addwfc	MYI2C_Write2LEDBytes@counter+1,f
  6600  067E  2E35               	goto	l541
  6601  067F                     l2878:	
  6602                           
  6603                           ;main.c: 520: }
  6604                           ;main.c: 521: PORTC &= 0xFD;
  6605  067F  30FD               	movlw	253
  6606  0680  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6607  0681  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6608  0682  058E               	andwf	14,f	;volatile
  6609  0683  0008               	return
  6610  0684                     __end_of_MYI2C_Write2LEDBytes:	
  6611                           
  6612                           	psect	text11
  6613  0EE3                     __ptext11:	
  6614 ;; *************** function _I2C1_MasterWrite *****************
  6615 ;; Defined at:
  6616 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  pdata           1    wreg     PTR unsigned char 
  6619 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  6620 ;;  length          1    7[BANK0 ] unsigned char 
  6621 ;;  address         2    8[BANK0 ] unsigned int 
  6622 ;;  pflag           1   10[BANK0 ] PTR enum E14260
  6623 ;;		 -> MYI2C_Write2LEDBytes@status(1), 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  6626 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;Total ram usage:        7 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    4
  6643 ;; This function calls:
  6644 ;;		_I2C1_MasterTRBInsert
  6645 ;;		_I2C1_MasterWriteTRBBuild
  6646 ;; This function is called by:
  6647 ;;		_MYI2C_Write2LEDBytes
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _I2C1_MasterWrite
  6653  0EE3                     _I2C1_MasterWrite:	
  6654                           
  6655                           ;incstack = 0
  6656                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6657                           ;I2C1_MasterWrite@pdata stored from wreg
  6658  0EE3  0020               	movlb	0	; select bank0
  6659  0EE4  00AD               	movwf	I2C1_MasterWrite@pdata
  6660                           
  6661                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  6662                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  6663  0EE5  0021               	movlb	1	; select bank1
  6664  0EE6  1822               	btfsc	(_i2c1_object^(0+128)+2),0
  6665  0EE7  2F06               	goto	l2414
  6666                           
  6667                           ;i2c1.c: 608: {
  6668                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  6669  0EE8  0020               	movlb	0	; select bank0
  6670  0EE9  082D               	movf	I2C1_MasterWrite@pdata,w
  6671  0EEA  00AB               	movwf	??_I2C1_MasterWrite
  6672  0EEB  082B               	movf	??_I2C1_MasterWrite,w
  6673  0EEC  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  6674  0EED  0827               	movf	I2C1_MasterWrite@length,w
  6675  0EEE  00AC               	movwf	??_I2C1_MasterWrite+1
  6676  0EEF  082C               	movf	??_I2C1_MasterWrite+1,w
  6677  0EF0  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  6678  0EF1  0829               	movf	I2C1_MasterWrite@address+1,w
  6679  0EF2  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  6680  0EF3  0828               	movf	I2C1_MasterWrite@address,w
  6681  0EF4  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  6682  0EF5  30C0               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  6683  0EF6  318E  2677  318E   	fcall	_I2C1_MasterWriteTRBBuild
  6684                           
  6685                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  6686  0EF9  30C0               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  6687  0EFA  0020               	movlb	0	; select bank0
  6688  0EFB  00AB               	movwf	??_I2C1_MasterWrite
  6689  0EFC  082B               	movf	??_I2C1_MasterWrite,w
  6690  0EFD  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  6691  0EFE  082A               	movf	I2C1_MasterWrite@pflag,w
  6692  0EFF  00AC               	movwf	??_I2C1_MasterWrite+1
  6693  0F00  082C               	movf	??_I2C1_MasterWrite+1,w
  6694  0F01  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  6695  0F02  3001               	movlw	1
  6696  0F03  3187  27A2         	fcall	_I2C1_MasterTRBInsert
  6697                           
  6698                           ;i2c1.c: 611: }
  6699  0F05  0008               	return
  6700  0F06                     l2414:	
  6701                           
  6702                           ;i2c1.c: 612: else
  6703                           ;i2c1.c: 613: {
  6704                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  6705  0F06  0020               	movlb	0	; select bank0
  6706  0F07  082A               	movf	I2C1_MasterWrite@pflag,w
  6707  0F08  0086               	movwf	6
  6708  0F09  0187               	clrf	7
  6709  0F0A  0181               	clrf	1
  6710  0F0B  0A81               	incf	1,f
  6711  0F0C  0008               	return
  6712  0F0D                     __end_of_I2C1_MasterWrite:	
  6713                           
  6714                           	psect	text12
  6715  074B                     __ptext12:	
  6716 ;; *************** function _MYI2C_ReadFaders *****************
  6717 ;; Defined at:
  6718 ;;		line 308 in file "main.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  slaveDeviceA    1    wreg     unsigned char 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  slaveDeviceA    1   15[BANK0 ] unsigned char 
  6723 ;;  readTRB         8   17[BANK0 ] struct .[2]
  6724 ;;  writeBuffer     3    0        unsigned char [3]
  6725 ;;  timeOut         2   13[BANK0 ] unsigned int 
  6726 ;;  dataAddress     2   11[BANK0 ] int 
  6727 ;;  pflag           2    0        int 
  6728 ;;  status          1   25[BANK0 ] enum E14267
  6729 ;;  pointerByte     1   16[BANK0 ] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      enum E14267
  6732 ;; Registers used:
  6733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;Total ram usage:       19 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		_I2C1_MasterReadTRBBuild
  6748 ;;		_I2C1_MasterTRBInsert
  6749 ;;		_I2C1_MasterWriteTRBBuild
  6750 ;; This function is called by:
  6751 ;;		_main
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           
  6756                           ;psect for function _MYI2C_ReadFaders
  6757  074B                     _MYI2C_ReadFaders:	
  6758                           
  6759                           ;incstack = 0
  6760                           ; Regs used in _MYI2C_ReadFaders: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6761                           ;MYI2C_ReadFaders@slaveDeviceAddress stored from wreg
  6762  074B  0020               	movlb	0	; select bank0
  6763  074C  00AF               	movwf	MYI2C_ReadFaders@slaveDeviceAddress
  6764                           
  6765                           ;main.c: 311: int pflag;
  6766                           ;main.c: 312: int dataAddress=0;
  6767  074D  01AB               	clrf	MYI2C_ReadFaders@dataAddress
  6768  074E  01AC               	clrf	MYI2C_ReadFaders@dataAddress+1
  6769                           
  6770                           ;main.c: 313: uint8_t pointerByte=0b00100000;
  6771  074F  3020               	movlw	32
  6772  0750  00A7               	movwf	??_MYI2C_ReadFaders
  6773  0751  0827               	movf	??_MYI2C_ReadFaders,w
  6774  0752  00B0               	movwf	MYI2C_ReadFaders@pointerByte
  6775                           
  6776                           ;main.c: 314: I2C1_MESSAGE_STATUS status;
  6777                           ;main.c: 315: I2C1_TRANSACTION_REQUEST_BLOCK readTRB[2];
  6778                           ;main.c: 316: uint8_t writeBuffer[3];
  6779                           ;main.c: 317: uint16_t timeOut;
  6780                           ;main.c: 321: status = I2C1_MESSAGE_PENDING;
  6781  0753  3002               	movlw	2
  6782  0754  00A7               	movwf	??_MYI2C_ReadFaders
  6783  0755  0827               	movf	??_MYI2C_ReadFaders,w
  6784  0756  00B9               	movwf	MYI2C_ReadFaders@status
  6785                           
  6786                           ;main.c: 329: timeOut = 0;
  6787  0757  01AD               	clrf	MYI2C_ReadFaders@timeOut
  6788  0758  01AE               	clrf	MYI2C_ReadFaders@timeOut+1
  6789  0759                     l2714:	
  6790                           ;main.c: 331: while(status != I2C1_MESSAGE_FAIL)
  6791                           
  6792  0759  0339               	decf	MYI2C_ReadFaders@status,w
  6793  075A  1903               	btfsc	3,2
  6794  075B  2FA0               	goto	l2718
  6795                           
  6796                           ;main.c: 332: {
  6797                           ;main.c: 336: I2C1_MasterWriteTRBBuild( &readTRB[0],
  6798                           ;main.c: 337: &pointerByte,
  6799                           ;main.c: 338: 1,
  6800                           ;main.c: 339: slaveDeviceAddress);
  6801  075C  3030               	movlw	(low (MYI2C_ReadFaders@pointerByte| 0))& (0+255)
  6802  075D  00A7               	movwf	??_MYI2C_ReadFaders
  6803  075E  0827               	movf	??_MYI2C_ReadFaders,w
  6804  075F  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  6805  0760  01A1               	clrf	I2C1_MasterWriteTRBBuild@length
  6806  0761  0AA1               	incf	I2C1_MasterWriteTRBBuild@length,f
  6807  0762  082F               	movf	MYI2C_ReadFaders@slaveDeviceAddress,w
  6808  0763  00A8               	movwf	??_MYI2C_ReadFaders+1
  6809  0764  01A9               	clrf	??_MYI2C_ReadFaders+2
  6810  0765  0828               	movf	??_MYI2C_ReadFaders+1,w
  6811  0766  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  6812  0767  0829               	movf	??_MYI2C_ReadFaders+2,w
  6813  0768  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  6814  0769  3031               	movlw	(low (MYI2C_ReadFaders@readTRB| 0))& (0+255)
  6815  076A  318E  2677  3187   	fcall	_I2C1_MasterWriteTRBBuild
  6816                           
  6817                           ;main.c: 341: I2C1_MasterReadTRBBuild( &readTRB[1],
  6818                           ;main.c: 342: byteFaderValue,
  6819                           ;main.c: 343: 8,
  6820                           ;main.c: 344: slaveDeviceAddress);
  6821  076D  30B4               	movlw	(low (_byteFaderValue| 0))& (0+255)
  6822  076E  0020               	movlb	0	; select bank0
  6823  076F  00A7               	movwf	??_MYI2C_ReadFaders
  6824  0770  0827               	movf	??_MYI2C_ReadFaders,w
  6825  0771  00A0               	movwf	I2C1_MasterReadTRBBuild@pdata
  6826  0772  3008               	movlw	8
  6827  0773  00A8               	movwf	??_MYI2C_ReadFaders+1
  6828  0774  0828               	movf	??_MYI2C_ReadFaders+1,w
  6829  0775  00A1               	movwf	I2C1_MasterReadTRBBuild@length
  6830  0776  082F               	movf	MYI2C_ReadFaders@slaveDeviceAddress,w
  6831  0777  00A9               	movwf	??_MYI2C_ReadFaders+2
  6832  0778  01AA               	clrf	??_MYI2C_ReadFaders+3
  6833  0779  0829               	movf	??_MYI2C_ReadFaders+2,w
  6834  077A  00A2               	movwf	I2C1_MasterReadTRBBuild@address
  6835  077B  082A               	movf	??_MYI2C_ReadFaders+3,w
  6836  077C  00A3               	movwf	I2C1_MasterReadTRBBuild@address+1
  6837  077D  3035               	movlw	(low ((MYI2C_ReadFaders@readTRB| 0+4)))& (0+255)
  6838  077E  318E  26BB  3187   	fcall	_I2C1_MasterReadTRBBuild
  6839                           
  6840                           ;main.c: 347: I2C1_MasterTRBInsert(2, readTRB, &status);
  6841  0781  3031               	movlw	(low (MYI2C_ReadFaders@readTRB| 0))& (0+255)
  6842  0782  0020               	movlb	0	; select bank0
  6843  0783  00A7               	movwf	??_MYI2C_ReadFaders
  6844  0784  0827               	movf	??_MYI2C_ReadFaders,w
  6845  0785  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  6846  0786  3039               	movlw	(low (MYI2C_ReadFaders@status| 0))& (0+255)
  6847  0787  00A8               	movwf	??_MYI2C_ReadFaders+1
  6848  0788  0828               	movf	??_MYI2C_ReadFaders+1,w
  6849  0789  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  6850  078A  3002               	movlw	2
  6851  078B  3187  27A2  3187   	fcall	_I2C1_MasterTRBInsert
  6852  078E                     l2700:	
  6853                           ;main.c: 350: while(status == I2C1_MESSAGE_PENDING);
  6854                           
  6855  078E  3002               	movlw	2
  6856  078F  0020               	movlb	0	; select bank0
  6857  0790  0639               	xorwf	MYI2C_ReadFaders@status,w
  6858  0791  1903               	btfsc	3,2
  6859  0792  2F8E               	goto	l2700
  6860                           
  6861                           ;main.c: 352: if (status == I2C1_MESSAGE_COMPLETE)
  6862  0793  0839               	movf	MYI2C_ReadFaders@status,w
  6863  0794  1903               	btfsc	3,2
  6864  0795  2FA0               	goto	l2718
  6865                           
  6866                           ;main.c: 362: if (timeOut == 100)
  6867                           
  6868                           ;main.c: 353: break;
  6869  0796  3064               	movlw	100
  6870  0797  062D               	xorwf	MYI2C_ReadFaders@timeOut,w
  6871  0798  042E               	iorwf	MYI2C_ReadFaders@timeOut+1,w
  6872  0799  1903               	btfsc	3,2
  6873  079A  2FA0               	goto	l2718
  6874                           
  6875                           ;main.c: 364: else
  6876                           ;main.c: 365: timeOut++;
  6877                           
  6878                           ;main.c: 363: break;
  6879  079B  3001               	movlw	1
  6880  079C  07AD               	addwf	MYI2C_ReadFaders@timeOut,f
  6881  079D  3000               	movlw	0
  6882  079E  3DAE               	addwfc	MYI2C_ReadFaders@timeOut+1,f
  6883  079F  2F59               	goto	l2714
  6884  07A0                     l2718:	
  6885                           
  6886                           ;main.c: 371: }
  6887                           ;main.c: 373: return status;
  6888  07A0  0839               	movf	MYI2C_ReadFaders@status,w
  6889  07A1  0008               	return
  6890  07A2                     __end_of_MYI2C_ReadFaders:	
  6891                           
  6892                           	psect	text13
  6893  0E77                     __ptext13:	
  6894 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  6895 ;; Defined at:
  6896 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  ptrb            1    wreg     PTR struct .
  6899 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  6900 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6901 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), MYI2C_ReadFaders@pointerByte(1), 
  6902 ;;  length          1    1[BANK0 ] unsigned char 
  6903 ;;  address         2    2[BANK0 ] unsigned int 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6906 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;Total ram usage:        7 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    3
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_I2C1_MasterWrite
  6927 ;;		_MYI2C_ReadFaders
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _I2C1_MasterWriteTRBBuild
  6933  0E77                     _I2C1_MasterWriteTRBBuild:	
  6934                           
  6935                           ;incstack = 0
  6936                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6937                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  6938  0E77  0020               	movlb	0	; select bank0
  6939  0E78  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  6940                           
  6941                           ;i2c1.c: 713: ptrb->address = address << 1;
  6942  0E79  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  6943  0E7A  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  6944  0E7B  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  6945  0E7C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  6946  0E7D  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  6947  0E7E  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  6948  0E7F  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  6949  0E80  0086               	movwf	6
  6950  0E81  0187               	clrf	7
  6951  0E82  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  6952  0E83  3FC0               	movwi [0]fsr1
  6953  0E84  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  6954  0E85  3FC1               	movwi [1]fsr1
  6955                           
  6956                           ;i2c1.c: 714: ptrb->length = length;
  6957  0E86  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  6958  0E87  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  6959  0E88  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  6960  0E89  3E02               	addlw	2
  6961  0E8A  0086               	movwf	6
  6962  0E8B  0187               	clrf	7
  6963  0E8C  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  6964  0E8D  0081               	movwf	1
  6965                           
  6966                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  6967  0E8E  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  6968  0E8F  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  6969  0E90  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  6970  0E91  3E03               	addlw	3
  6971  0E92  0086               	movwf	6
  6972  0E93  0187               	clrf	7
  6973  0E94  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  6974  0E95  0081               	movwf	1
  6975  0E96  0008               	return
  6976  0E97                     __end_of_I2C1_MasterWriteTRBBuild:	
  6977                           
  6978                           	psect	text14
  6979  07A2                     __ptext14:	
  6980 ;; *************** function _I2C1_MasterTRBInsert *****************
  6981 ;; Defined at:
  6982 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  count           1    wreg     unsigned char 
  6985 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6986 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  6987 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  6988 ;;		 -> MYI2C_Write2LEDBytes@status(1), MYI2C_ReadFaders@status(1), 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  count           1    3[BANK0 ] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;Total ram usage:        4 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    3
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_I2C1_MasterWrite
  7011 ;;		_MYI2C_ReadFaders
  7012 ;;		_I2C1_MasterRead
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           
  7017                           ;psect for function _I2C1_MasterTRBInsert
  7018  07A2                     _I2C1_MasterTRBInsert:	
  7019                           
  7020                           ;incstack = 0
  7021                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  7022                           ;I2C1_MasterTRBInsert@count stored from wreg
  7023  07A2  0020               	movlb	0	; select bank0
  7024  07A3  00A3               	movwf	I2C1_MasterTRBInsert@count
  7025                           
  7026                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  7027  07A4  0021               	movlb	1	; select bank1
  7028  07A5  1822               	btfsc	(_i2c1_object^(0+128)+2),0
  7029  07A6  2FE1               	goto	l2208
  7030                           
  7031                           ;i2c1.c: 649: {
  7032                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  7033  07A7  3002               	movlw	2
  7034  07A8  0020               	movlb	0	; select bank0
  7035  07A9  00A2               	movwf	??_I2C1_MasterTRBInsert
  7036  07AA  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7037  07AB  0086               	movwf	6
  7038  07AC  0187               	clrf	7
  7039  07AD  0822               	movf	??_I2C1_MasterTRBInsert,w
  7040  07AE  0081               	movwf	1
  7041                           
  7042                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  7043  07AF  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  7044  07B0  00A2               	movwf	??_I2C1_MasterTRBInsert
  7045  07B1  0021               	movlb	1	; select bank1
  7046  07B2  0A20               	incf	_i2c1_object^(0+128),w
  7047  07B3  0086               	movwf	6
  7048  07B4  0187               	clrf	7
  7049  07B5  0020               	movlb	0	; select bank0
  7050  07B6  0822               	movf	??_I2C1_MasterTRBInsert,w
  7051  07B7  0081               	movwf	1
  7052                           
  7053                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  7054  07B8  0823               	movf	I2C1_MasterTRBInsert@count,w
  7055  07B9  00A2               	movwf	??_I2C1_MasterTRBInsert
  7056  07BA  0021               	movlb	1	; select bank1
  7057  07BB  0820               	movf	_i2c1_object^(0+128),w
  7058  07BC  0086               	movwf	6
  7059  07BD  0187               	clrf	7
  7060  07BE  0020               	movlb	0	; select bank0
  7061  07BF  0822               	movf	??_I2C1_MasterTRBInsert,w
  7062  07C0  0081               	movwf	1
  7063                           
  7064                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  7065  07C1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7066  07C2  00A2               	movwf	??_I2C1_MasterTRBInsert
  7067  07C3  0021               	movlb	1	; select bank1
  7068  07C4  0820               	movf	_i2c1_object^(0+128),w
  7069  07C5  3E02               	addlw	2
  7070  07C6  0086               	movwf	6
  7071  07C7  0187               	clrf	7
  7072  07C8  0020               	movlb	0	; select bank0
  7073  07C9  0822               	movf	??_I2C1_MasterTRBInsert,w
  7074  07CA  0081               	movwf	1
  7075                           
  7076                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  7077  07CB  3003               	movlw	3
  7078  07CC  00A2               	movwf	??_I2C1_MasterTRBInsert
  7079  07CD  0822               	movf	??_I2C1_MasterTRBInsert,w
  7080  07CE  0021               	movlb	1	; select bank1
  7081  07CF  07A0               	addwf	_i2c1_object^(0+128),f
  7082                           
  7083                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  7084  07D0  0820               	movf	_i2c1_object^(0+128),w
  7085  07D1  3AC7               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  7086  07D2  1D03               	skipz
  7087  07D3  2FDA               	goto	l2204
  7088                           
  7089                           ;i2c1.c: 659: {
  7090                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  7091  07D4  30C4               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7092  07D5  0020               	movlb	0	; select bank0
  7093  07D6  00A2               	movwf	??_I2C1_MasterTRBInsert
  7094  07D7  0822               	movf	??_I2C1_MasterTRBInsert,w
  7095  07D8  0021               	movlb	1	; select bank1
  7096  07D9  00A0               	movwf	_i2c1_object^(0+128)
  7097  07DA                     l2204:	
  7098                           
  7099                           ;i2c1.c: 662: }
  7100                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  7101  07DA  10A2               	bcf	(_i2c1_object^(0+128)+2),1
  7102                           
  7103                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  7104  07DB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  7105  07DC  0620               	xorwf	_i2c1_object^(0+128),w
  7106  07DD  1D03               	skipz
  7107  07DE  2FE7               	goto	l2210
  7108                           
  7109                           ;i2c1.c: 670: {
  7110                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  7111  07DF  1422               	bsf	(_i2c1_object^(0+128)+2),0
  7112                           
  7113                           ;i2c1.c: 673: }
  7114                           ;i2c1.c: 675: }
  7115  07E0  2FE7               	goto	l2210
  7116  07E1                     l2208:	
  7117                           
  7118                           ;i2c1.c: 676: else
  7119                           ;i2c1.c: 677: {
  7120                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  7121  07E1  0020               	movlb	0	; select bank0
  7122  07E2  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7123  07E3  0086               	movwf	6
  7124  07E4  0187               	clrf	7
  7125  07E5  0181               	clrf	1
  7126  07E6  0A81               	incf	1,f
  7127  07E7                     l2210:	
  7128                           
  7129                           ;i2c1.c: 679: }
  7130                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  7131  07E7  0020               	movlb	0	; select bank0
  7132  07E8  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7133  07E9  0086               	movwf	6
  7134  07EA  0187               	clrf	7
  7135  07EB  3002               	movlw	2
  7136  07EC  0601               	xorwf	1,w
  7137  07ED  1D03               	btfss	3,2
  7138  07EE  0008               	return
  7139  07EF                     l2214:	
  7140                           ;i2c1.c: 683: {
  7141                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  7142                           
  7143  07EF  086F               	movf	_i2c1_state,w
  7144  07F0  1D03               	btfss	3,2
  7145  07F1  2FEF               	goto	l2214
  7146                           
  7147                           ;i2c1.c: 685: {
  7148                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  7149  07F2  002E               	movlb	14	; select bank14
  7150  07F3  140F               	bsf	15,0	;volatile
  7151  07F4  0008               	return
  7152  07F5                     __end_of_I2C1_MasterTRBInsert:	
  7153                           
  7154                           	psect	text15
  7155  0EBB                     __ptext15:	
  7156 ;; *************** function _I2C1_MasterReadTRBBuild *****************
  7157 ;; Defined at:
  7158 ;;		line 694 in file "mcc_generated_files/i2c1.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  ptrb            1    wreg     PTR struct .
  7161 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), 
  7162 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  7163 ;;		 -> byteFaderValue(8), 
  7164 ;;  length          1    1[BANK0 ] unsigned char 
  7165 ;;  address         2    2[BANK0 ] unsigned int 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  ptrb            1    6[BANK0 ] PTR struct .
  7168 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7178 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;Total ram usage:        7 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    3
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_MYI2C_ReadFaders
  7189 ;;		_I2C1_MasterRead
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           
  7194                           ;psect for function _I2C1_MasterReadTRBBuild
  7195  0EBB                     _I2C1_MasterReadTRBBuild:	
  7196                           
  7197                           ;incstack = 0
  7198                           ; Regs used in _I2C1_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  7199                           ;I2C1_MasterReadTRBBuild@ptrb stored from wreg
  7200  0EBB  0020               	movlb	0	; select bank0
  7201  0EBC  00A6               	movwf	I2C1_MasterReadTRBBuild@ptrb
  7202                           
  7203                           ;i2c1.c: 700: ptrb->address = address << 1;
  7204  0EBD  0823               	movf	I2C1_MasterReadTRBBuild@address+1,w
  7205  0EBE  00A5               	movwf	??_I2C1_MasterReadTRBBuild+1
  7206  0EBF  0822               	movf	I2C1_MasterReadTRBBuild@address,w
  7207  0EC0  00A4               	movwf	??_I2C1_MasterReadTRBBuild
  7208  0EC1  35A4               	lslf	??_I2C1_MasterReadTRBBuild,f
  7209  0EC2  0DA5               	rlf	??_I2C1_MasterReadTRBBuild+1,f
  7210  0EC3  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7211  0EC4  0086               	movwf	6
  7212  0EC5  0187               	clrf	7
  7213  0EC6  0824               	movf	??_I2C1_MasterReadTRBBuild,w
  7214  0EC7  3FC0               	movwi [0]fsr1
  7215  0EC8  0825               	movf	??_I2C1_MasterReadTRBBuild+1,w
  7216  0EC9  3FC1               	movwi [1]fsr1
  7217                           
  7218                           ;i2c1.c: 702: ptrb->address |= 0x01;
  7219  0ECA  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7220  0ECB  0086               	movwf	6
  7221  0ECC  0187               	clrf	7
  7222  0ECD  3001               	movlw	1
  7223  0ECE  0481               	iorwf	1,f
  7224  0ECF  3141               	addfsr 1,1
  7225  0ED0  3000               	movlw	0
  7226  0ED1  0481               	iorwf	1,f
  7227                           
  7228                           ;i2c1.c: 703: ptrb->length = length;
  7229  0ED2  0821               	movf	I2C1_MasterReadTRBBuild@length,w
  7230  0ED3  00A4               	movwf	??_I2C1_MasterReadTRBBuild
  7231  0ED4  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7232  0ED5  3E02               	addlw	2
  7233  0ED6  0086               	movwf	6
  7234  0ED7  0187               	clrf	7
  7235  0ED8  0824               	movf	??_I2C1_MasterReadTRBBuild,w
  7236  0ED9  0081               	movwf	1
  7237                           
  7238                           ;i2c1.c: 704: ptrb->pbuffer = pdata;
  7239  0EDA  0820               	movf	I2C1_MasterReadTRBBuild@pdata,w
  7240  0EDB  00A4               	movwf	??_I2C1_MasterReadTRBBuild
  7241  0EDC  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7242  0EDD  3E03               	addlw	3
  7243  0EDE  0086               	movwf	6
  7244  0EDF  0187               	clrf	7
  7245  0EE0  0824               	movf	??_I2C1_MasterReadTRBBuild,w
  7246  0EE1  0081               	movwf	1
  7247  0EE2  0008               	return
  7248  0EE3                     __end_of_I2C1_MasterReadTRBBuild:	
  7249                           
  7250                           	psect	text16
  7251  0D8F                     __ptext16:	
  7252 ;; *************** function _LED7SegSetup *****************
  7253 ;; Defined at:
  7254 ;;		line 31 in file "LED7Seg.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		None
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    3
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _LED7SegSetup
  7284  0D8F                     _LED7SegSetup:	
  7285                           
  7286                           ;incstack = 0
  7287                           ; Regs used in _LED7SegSetup: []
  7288                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
  7289  0D8F  003E               	movlb	30	; select bank30
  7290  0D90  12CE               	bcf	78,5	;volatile
  7291                           
  7292                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
  7293  0D91  0020               	movlb	0	; select bank0
  7294  0D92  1293               	bcf	19,5	;volatile
  7295                           
  7296                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
  7297  0D93  003E               	movlb	30	; select bank30
  7298  0D94  134E               	bcf	78,6	;volatile
  7299                           
  7300                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
  7301  0D95  0020               	movlb	0	; select bank0
  7302  0D96  1313               	bcf	19,6	;volatile
  7303                           
  7304                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
  7305  0D97  003E               	movlb	30	; select bank30
  7306  0D98  13CE               	bcf	78,7	;volatile
  7307                           
  7308                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
  7309  0D99  0020               	movlb	0	; select bank0
  7310  0D9A  1393               	bcf	19,7	;volatile
  7311  0D9B  0008               	return
  7312  0D9C                     __end_of_LED7SegSetup:	
  7313                           
  7314                           	psect	text17
  7315  03A6                     __ptext17:	
  7316 ;; *************** function _LED7SegLoop *****************
  7317 ;; Defined at:
  7318 ;;		line 111 in file "LED7Seg.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  d               2   57[BANK0 ] int 
  7323 ;;  d               2   59[BANK0 ] int 
  7324 ;;  z               2   61[BANK0 ] int 
  7325 ;;  d               2   55[BANK0 ] int 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;Total ram usage:        9 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    8
  7342 ;; This function calls:
  7343 ;;		_LED7SegBlankDisplay
  7344 ;;		_LED7SegDisplayValue
  7345 ;;		_delay
  7346 ;; This function is called by:
  7347 ;;		_main
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _LED7SegLoop
  7353  03A6                     _LED7SegLoop:	
  7354                           
  7355                           ;LED7Seg.c: 113: LED7SegBlankDisplay();
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _LED7SegLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7359  03A6  3187  27F5  3183   	fcall	_LED7SegBlankDisplay
  7360                           
  7361                           ;LED7Seg.c: 116: for(int d=0;d<200;d++){
  7362  03A9  0020               	movlb	0	; select bank0
  7363  03AA  01D7               	clrf	LED7SegLoop@d
  7364  03AB  01D8               	clrf	LED7SegLoop@d+1
  7365  03AC  0858               	movf	LED7SegLoop@d+1,w
  7366  03AD  3A80               	xorlw	128
  7367  03AE  00D6               	movwf	??_LED7SegLoop
  7368  03AF  3080               	movlw	128
  7369  03B0  0256               	subwf	??_LED7SegLoop,w
  7370  03B1  1D03               	skipz
  7371  03B2  2BB5               	goto	u2855
  7372  03B3  30C8               	movlw	200
  7373  03B4  0257               	subwf	LED7SegLoop@d,w
  7374  03B5                     u2855:	
  7375  03B5  1803               	btfsc	3,0
  7376  03B6  2BD3               	goto	l3252
  7377  03B7                     l3246:	
  7378                           
  7379                           ;LED7Seg.c: 117: delay(speed);
  7380  03B7  3004               	movlw	low (_speed| (0+32768))
  7381  03B8  0084               	movwf	4
  7382  03B9  3090               	movlw	high (_speed| (0+32768))
  7383  03BA  0085               	movwf	5
  7384  03BB  3F00               	moviw [0]fsr0
  7385  03BC  0020               	movlb	0	; select bank0
  7386  03BD  00A6               	movwf	delay@delaytime
  7387  03BE  3F01               	moviw [1]fsr0
  7388  03BF  00A7               	movwf	delay@delaytime+1
  7389  03C0  318F  27AD  3183   	fcall	_delay
  7390  03C3  3001               	movlw	1
  7391  03C4  0020               	movlb	0	; select bank0
  7392  03C5  07D7               	addwf	LED7SegLoop@d,f
  7393  03C6  3000               	movlw	0
  7394  03C7  3DD8               	addwfc	LED7SegLoop@d+1,f
  7395  03C8  0858               	movf	LED7SegLoop@d+1,w
  7396  03C9  3A80               	xorlw	128
  7397  03CA  00D6               	movwf	??_LED7SegLoop
  7398  03CB  3080               	movlw	128
  7399  03CC  0256               	subwf	??_LED7SegLoop,w
  7400  03CD  1D03               	skipz
  7401  03CE  2BD1               	goto	u2865
  7402  03CF  30C8               	movlw	200
  7403  03D0  0257               	subwf	LED7SegLoop@d,w
  7404  03D1                     u2865:	
  7405  03D1  1C03               	skipc
  7406  03D2  2BB7               	goto	l3246
  7407  03D3                     l3252:	
  7408                           
  7409                           ;LED7Seg.c: 118: }
  7410                           ;LED7Seg.c: 121: for (int z=0; z<100; z++)
  7411  03D3  0020               	movlb	0	; select bank0
  7412  03D4  01DD               	clrf	LED7SegLoop@z
  7413  03D5  01DE               	clrf	LED7SegLoop@z+1
  7414  03D6  085E               	movf	LED7SegLoop@z+1,w
  7415  03D7  3A80               	xorlw	128
  7416  03D8  00D6               	movwf	??_LED7SegLoop
  7417  03D9  3080               	movlw	128
  7418  03DA  0256               	subwf	??_LED7SegLoop,w
  7419  03DB  1D03               	skipz
  7420  03DC  2BDF               	goto	u2875
  7421  03DD  3064               	movlw	100
  7422  03DE  025D               	subwf	LED7SegLoop@z,w
  7423  03DF                     u2875:	
  7424  03DF  1803               	btfsc	3,0
  7425  03E0  2C23               	goto	l3274
  7426  03E1                     l3258:	
  7427                           
  7428                           ;LED7Seg.c: 122: {
  7429                           ;LED7Seg.c: 123: LED7SegDisplayValue(z);
  7430  03E1  0020               	movlb	0	; select bank0
  7431  03E2  085E               	movf	LED7SegLoop@z+1,w
  7432  03E3  00CF               	movwf	LED7SegDisplayValue@iTwoDigitNumber+1
  7433  03E4  085D               	movf	LED7SegLoop@z,w
  7434  03E5  00CE               	movwf	LED7SegDisplayValue@iTwoDigitNumber
  7435  03E6  3184  24F9  3183   	fcall	_LED7SegDisplayValue
  7436                           
  7437                           ;LED7Seg.c: 124: for(int d=0;d<25;d++){
  7438  03E9  0020               	movlb	0	; select bank0
  7439  03EA  01D9               	clrf	LED7SegLoop@d_1039
  7440  03EB  01DA               	clrf	LED7SegLoop@d_1039+1
  7441  03EC  085A               	movf	LED7SegLoop@d_1039+1,w
  7442  03ED  3A80               	xorlw	128
  7443  03EE  00D6               	movwf	??_LED7SegLoop
  7444  03EF  3080               	movlw	128
  7445  03F0  0256               	subwf	??_LED7SegLoop,w
  7446  03F1  1D03               	skipz
  7447  03F2  2BF5               	goto	u2885
  7448  03F3  3019               	movlw	25
  7449  03F4  0259               	subwf	LED7SegLoop@d_1039,w
  7450  03F5                     u2885:	
  7451  03F5  1803               	btfsc	3,0
  7452  03F6  2C13               	goto	l3272
  7453  03F7                     l3266:	
  7454                           
  7455                           ;LED7Seg.c: 125: delay(speed);
  7456  03F7  3004               	movlw	low (_speed| (0+32768))
  7457  03F8  0084               	movwf	4
  7458  03F9  3090               	movlw	high (_speed| (0+32768))
  7459  03FA  0085               	movwf	5
  7460  03FB  3F00               	moviw [0]fsr0
  7461  03FC  0020               	movlb	0	; select bank0
  7462  03FD  00A6               	movwf	delay@delaytime
  7463  03FE  3F01               	moviw [1]fsr0
  7464  03FF  00A7               	movwf	delay@delaytime+1
  7465  0400  318F  27AD  3183   	fcall	_delay
  7466  0403  3001               	movlw	1
  7467  0404  0020               	movlb	0	; select bank0
  7468  0405  07D9               	addwf	LED7SegLoop@d_1039,f
  7469  0406  3000               	movlw	0
  7470  0407  3DDA               	addwfc	LED7SegLoop@d_1039+1,f
  7471  0408  085A               	movf	LED7SegLoop@d_1039+1,w
  7472  0409  3A80               	xorlw	128
  7473  040A  00D6               	movwf	??_LED7SegLoop
  7474  040B  3080               	movlw	128
  7475  040C  0256               	subwf	??_LED7SegLoop,w
  7476  040D  1D03               	skipz
  7477  040E  2C11               	goto	u2895
  7478  040F  3019               	movlw	25
  7479  0410  0259               	subwf	LED7SegLoop@d_1039,w
  7480  0411                     u2895:	
  7481  0411  1C03               	skipc
  7482  0412  2BF7               	goto	l3266
  7483  0413                     l3272:	
  7484  0413  3001               	movlw	1
  7485  0414  0020               	movlb	0	; select bank0
  7486  0415  07DD               	addwf	LED7SegLoop@z,f
  7487  0416  3000               	movlw	0
  7488  0417  3DDE               	addwfc	LED7SegLoop@z+1,f
  7489  0418  085E               	movf	LED7SegLoop@z+1,w
  7490  0419  3A80               	xorlw	128
  7491  041A  00D6               	movwf	??_LED7SegLoop
  7492  041B  3080               	movlw	128
  7493  041C  0256               	subwf	??_LED7SegLoop,w
  7494  041D  1D03               	skipz
  7495  041E  2C21               	goto	u2905
  7496  041F  3064               	movlw	100
  7497  0420  025D               	subwf	LED7SegLoop@z,w
  7498  0421                     u2905:	
  7499  0421  1C03               	skipc
  7500  0422  2BE1               	goto	l3258
  7501  0423                     l3274:	
  7502                           
  7503                           ;LED7Seg.c: 126: }
  7504                           ;LED7Seg.c: 127: }
  7505                           ;LED7Seg.c: 130: for(int d=0;d<200;d++){
  7506  0423  0020               	movlb	0	; select bank0
  7507  0424  01DB               	clrf	LED7SegLoop@d_1040
  7508  0425  01DC               	clrf	LED7SegLoop@d_1040+1
  7509  0426  085C               	movf	LED7SegLoop@d_1040+1,w
  7510  0427  3A80               	xorlw	128
  7511  0428  00D6               	movwf	??_LED7SegLoop
  7512  0429  3080               	movlw	128
  7513  042A  0256               	subwf	??_LED7SegLoop,w
  7514  042B  1D03               	skipz
  7515  042C  2C2F               	goto	u2915
  7516  042D  30C8               	movlw	200
  7517  042E  025B               	subwf	LED7SegLoop@d_1040,w
  7518  042F                     u2915:	
  7519  042F  1803               	btfsc	3,0
  7520  0430  2C4D               	goto	l3286
  7521  0431                     l3280:	
  7522                           
  7523                           ;LED7Seg.c: 131: delay(speed);
  7524  0431  3004               	movlw	low (_speed| (0+32768))
  7525  0432  0084               	movwf	4
  7526  0433  3090               	movlw	high (_speed| (0+32768))
  7527  0434  0085               	movwf	5
  7528  0435  3F00               	moviw [0]fsr0
  7529  0436  0020               	movlb	0	; select bank0
  7530  0437  00A6               	movwf	delay@delaytime
  7531  0438  3F01               	moviw [1]fsr0
  7532  0439  00A7               	movwf	delay@delaytime+1
  7533  043A  318F  27AD  3183   	fcall	_delay
  7534  043D  3001               	movlw	1
  7535  043E  0020               	movlb	0	; select bank0
  7536  043F  07DB               	addwf	LED7SegLoop@d_1040,f
  7537  0440  3000               	movlw	0
  7538  0441  3DDC               	addwfc	LED7SegLoop@d_1040+1,f
  7539  0442  085C               	movf	LED7SegLoop@d_1040+1,w
  7540  0443  3A80               	xorlw	128
  7541  0444  00D6               	movwf	??_LED7SegLoop
  7542  0445  3080               	movlw	128
  7543  0446  0256               	subwf	??_LED7SegLoop,w
  7544  0447  1D03               	skipz
  7545  0448  2C4B               	goto	u2925
  7546  0449  30C8               	movlw	200
  7547  044A  025B               	subwf	LED7SegLoop@d_1040,w
  7548  044B                     u2925:	
  7549  044B  1C03               	skipc
  7550  044C  2C31               	goto	l3280
  7551  044D                     l3286:	
  7552                           
  7553                           ;LED7Seg.c: 132: }
  7554                           ;LED7Seg.c: 134: LED7SegBlankDisplay();
  7555  044D  3187  27F5         	fcall	_LED7SegBlankDisplay
  7556  044F  0008               	return
  7557  0450                     __end_of_LED7SegLoop:	
  7558                           
  7559                           	psect	text18
  7560  04F9                     __ptext18:	
  7561 ;; *************** function _LED7SegDisplayValue *****************
  7562 ;; Defined at:
  7563 ;;		line 80 in file "LED7Seg.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  iTwoDigitNum    2   46[BANK0 ] unsigned int 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  iTensDigit      2   52[BANK0 ] unsigned int 
  7568 ;;  iTensCode       2   50[BANK0 ] unsigned int 
  7569 ;;  iUnitsDigit     2   48[BANK0 ] unsigned int 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;Total ram usage:        8 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    7
  7586 ;; This function calls:
  7587 ;;		_LED7SegShiftOutPulseClock
  7588 ;;		___fttol
  7589 ;;		___lwdiv
  7590 ;;		___lwmod
  7591 ;;		___lwtoft
  7592 ;; This function is called by:
  7593 ;;		_main
  7594 ;;		_LED7SegLoop
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function _LED7SegDisplayValue
  7600  04F9                     _LED7SegDisplayValue:	
  7601                           
  7602                           ;LED7Seg.c: 86: if(99<iTwoDigitNumber) iTwoDigitNumber=99;
  7603                           
  7604                           ;LED7Seg.c: 81: unsigned int iTensDigit;
  7605                           ;LED7Seg.c: 82: unsigned int iUnitsDigit;
  7606                           ;LED7Seg.c: 83: unsigned int iTensCode;
  7607                           ;LED7Seg.c: 85: if(0>iTwoDigitNumber) iTwoDigitNumber=0;
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _LED7SegDisplayValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7611  04F9  3000               	movlw	0
  7612  04FA  0020               	movlb	0	; select bank0
  7613  04FB  024F               	subwf	LED7SegDisplayValue@iTwoDigitNumber+1,w
  7614  04FC  3064               	movlw	100
  7615  04FD  1903               	skipnz
  7616  04FE  024E               	subwf	LED7SegDisplayValue@iTwoDigitNumber,w
  7617  04FF  1C03               	skipc
  7618  0500  2D05               	goto	l3164
  7619  0501  3063               	movlw	99
  7620  0502  00CE               	movwf	LED7SegDisplayValue@iTwoDigitNumber
  7621  0503  3000               	movlw	0
  7622  0504  00CF               	movwf	LED7SegDisplayValue@iTwoDigitNumber+1
  7623  0505                     l3164:	
  7624                           
  7625                           ;LED7Seg.c: 88: d=iTwoDigitNumber%10;
  7626  0505  084F               	movf	LED7SegDisplayValue@iTwoDigitNumber+1,w
  7627  0506  00A3               	movwf	___lwmod@dividend+1
  7628  0507  084E               	movf	LED7SegDisplayValue@iTwoDigitNumber,w
  7629  0508  00A2               	movwf	___lwmod@dividend
  7630  0509  300A               	movlw	10
  7631  050A  00A0               	movwf	___lwmod@divisor
  7632  050B  3000               	movlw	0
  7633  050C  00A1               	movwf	___lwmod@divisor+1
  7634  050D  318F  270D  3184   	fcall	___lwmod
  7635  0510  0020               	movlb	0	; select bank0
  7636  0511  0821               	movf	?___lwmod+1,w
  7637  0512  00A9               	movwf	___lwtoft@c+1
  7638  0513  0820               	movf	?___lwmod,w
  7639  0514  00A8               	movwf	___lwtoft@c
  7640  0515  318D  25C2  3184   	fcall	___lwtoft
  7641  0518  0020               	movlb	0	; select bank0
  7642  0519  0828               	movf	?___lwtoft,w
  7643  051A  0021               	movlb	1	; select bank1
  7644  051B  00A5               	movwf	_d^(0+128)
  7645  051C  0020               	movlb	0	; select bank0
  7646  051D  0829               	movf	?___lwtoft+1,w
  7647  051E  0021               	movlb	1	; select bank1
  7648  051F  00A6               	movwf	(_d+1)^(0+128)
  7649  0520  0020               	movlb	0	; select bank0
  7650  0521  082A               	movf	?___lwtoft+2,w
  7651  0522  0021               	movlb	1	; select bank1
  7652  0523  00A7               	movwf	(_d+2)^(0+128)
  7653                           
  7654                           ;LED7Seg.c: 89: iUnitsDigit=d;
  7655  0524  0825               	movf	_d^(0+128),w
  7656  0525  0020               	movlb	0	; select bank0
  7657  0526  00C0               	movwf	___fttol@f1
  7658  0527  0021               	movlb	1	; select bank1
  7659  0528  0826               	movf	(_d+1)^(0+128),w
  7660  0529  0020               	movlb	0	; select bank0
  7661  052A  00C1               	movwf	___fttol@f1+1
  7662  052B  0021               	movlb	1	; select bank1
  7663  052C  0827               	movf	(_d+2)^(0+128),w
  7664  052D  0020               	movlb	0	; select bank0
  7665  052E  00C2               	movwf	___fttol@f1+2
  7666  052F  3185  2589  3184   	fcall	___fttol
  7667  0532  0020               	movlb	0	; select bank0
  7668  0533  0841               	movf	?___fttol+1,w
  7669  0534  00D1               	movwf	LED7SegDisplayValue@iUnitsDigit+1
  7670  0535  0840               	movf	?___fttol,w
  7671  0536  00D0               	movwf	LED7SegDisplayValue@iUnitsDigit
  7672                           
  7673                           ;LED7Seg.c: 90: b=iTwoDigitNumber/10;
  7674  0537  300A               	movlw	10
  7675  0538  00A0               	movwf	___lwdiv@divisor
  7676  0539  3000               	movlw	0
  7677  053A  00A1               	movwf	___lwdiv@divisor+1
  7678  053B  084F               	movf	LED7SegDisplayValue@iTwoDigitNumber+1,w
  7679  053C  00A3               	movwf	___lwdiv@dividend+1
  7680  053D  084E               	movf	LED7SegDisplayValue@iTwoDigitNumber,w
  7681  053E  00A2               	movwf	___lwdiv@dividend
  7682  053F  318F  273A  3184   	fcall	___lwdiv
  7683  0542  0020               	movlb	0	; select bank0
  7684  0543  0821               	movf	?___lwdiv+1,w
  7685  0544  00A9               	movwf	___lwtoft@c+1
  7686  0545  0820               	movf	?___lwdiv,w
  7687  0546  00A8               	movwf	___lwtoft@c
  7688  0547  318D  25C2  3184   	fcall	___lwtoft
  7689  054A  0020               	movlb	0	; select bank0
  7690  054B  0828               	movf	?___lwtoft,w
  7691  054C  0021               	movlb	1	; select bank1
  7692  054D  00A8               	movwf	_b^(0+128)
  7693  054E  0020               	movlb	0	; select bank0
  7694  054F  0829               	movf	?___lwtoft+1,w
  7695  0550  0021               	movlb	1	; select bank1
  7696  0551  00A9               	movwf	(_b+1)^(0+128)
  7697  0552  0020               	movlb	0	; select bank0
  7698  0553  082A               	movf	?___lwtoft+2,w
  7699  0554  0021               	movlb	1	; select bank1
  7700  0555  00AA               	movwf	(_b+2)^(0+128)
  7701                           
  7702                           ;LED7Seg.c: 91: iTensDigit=b;
  7703  0556  0828               	movf	_b^(0+128),w
  7704  0557  0020               	movlb	0	; select bank0
  7705  0558  00C0               	movwf	___fttol@f1
  7706  0559  0021               	movlb	1	; select bank1
  7707  055A  0829               	movf	(_b+1)^(0+128),w
  7708  055B  0020               	movlb	0	; select bank0
  7709  055C  00C1               	movwf	___fttol@f1+1
  7710  055D  0021               	movlb	1	; select bank1
  7711  055E  082A               	movf	(_b+2)^(0+128),w
  7712  055F  0020               	movlb	0	; select bank0
  7713  0560  00C2               	movwf	___fttol@f1+2
  7714  0561  3185  2589  3184   	fcall	___fttol
  7715  0564  0020               	movlb	0	; select bank0
  7716  0565  0841               	movf	?___fttol+1,w
  7717  0566  00D5               	movwf	LED7SegDisplayValue@iTensDigit+1
  7718  0567  0840               	movf	?___fttol,w
  7719  0568  00D4               	movwf	LED7SegDisplayValue@iTensDigit
  7720                           
  7721                           ;LED7Seg.c: 92: iTensCode=segdisp[iTensDigit];
  7722  0569  3554               	lslf	LED7SegDisplayValue@iTensDigit,w
  7723  056A  3EC7               	addlw	(low (_segdisp| 0))& (0+255)
  7724  056B  0086               	movwf	6
  7725  056C  0187               	clrf	7
  7726  056D  3F40               	moviw [0]fsr1
  7727  056E  00D2               	movwf	LED7SegDisplayValue@iTensCode
  7728  056F  3F41               	moviw [1]fsr1
  7729  0570  00D3               	movwf	LED7SegDisplayValue@iTensCode+1
  7730                           
  7731                           ;LED7Seg.c: 93: if(0==iTensDigit) iTensCode=255;
  7732  0571  0854               	movf	LED7SegDisplayValue@iTensDigit,w
  7733  0572  0455               	iorwf	LED7SegDisplayValue@iTensDigit+1,w
  7734  0573  1D03               	btfss	3,2
  7735  0574  2D79               	goto	l3178
  7736  0575  30FF               	movlw	255
  7737  0576  00D2               	movwf	LED7SegDisplayValue@iTensCode
  7738  0577  3000               	movlw	0
  7739  0578  00D3               	movwf	LED7SegDisplayValue@iTensCode+1
  7740  0579                     l3178:	
  7741                           
  7742                           ;LED7Seg.c: 95: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
  7743  0579  3550               	lslf	LED7SegDisplayValue@iUnitsDigit,w
  7744  057A  3EC7               	addlw	(low (_segdisp| 0))& (0+255)
  7745  057B  0086               	movwf	6
  7746  057C  0187               	clrf	7
  7747  057D  0801               	movf	1,w
  7748  057E  318E  265B  3184   	fcall	_LED7SegShiftOutPulseClock
  7749                           
  7750                           ;LED7Seg.c: 96: LED7SegShiftOutPulseClock( iTensCode );
  7751  0581  0020               	movlb	0	; select bank0
  7752  0582  0852               	movf	LED7SegDisplayValue@iTensCode,w
  7753  0583  318E  265B         	fcall	_LED7SegShiftOutPulseClock
  7754                           
  7755                           ;LED7Seg.c: 98: do { LATCbits.LATC5 = 1; } while(0);
  7756  0585  0020               	movlb	0	; select bank0
  7757  0586  1698               	bsf	24,5	;volatile
  7758                           
  7759                           ;LED7Seg.c: 99: do { LATCbits.LATC5 = 0; } while(0);
  7760  0587  1298               	bcf	24,5	;volatile
  7761  0588  0008               	return
  7762  0589                     __end_of_LED7SegDisplayValue:	
  7763                           
  7764                           	psect	text19
  7765  0DC2                     __ptext19:	
  7766 ;; *************** function ___lwtoft *****************
  7767 ;; Defined at:
  7768 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  c               2    8[BANK0 ] unsigned int 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  3    8[BANK0 ] float 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, pclath, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7782 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;Total ram usage:        4 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    4
  7789 ;; This function calls:
  7790 ;;		___ftpack
  7791 ;; This function is called by:
  7792 ;;		_LED7SegDisplayValue
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           
  7797                           ;psect for function ___lwtoft
  7798  0DC2                     ___lwtoft:	
  7799                           
  7800                           ;incstack = 0
  7801                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7802  0DC2  0020               	movlb	0	; select bank0
  7803  0DC3  0828               	movf	___lwtoft@c,w
  7804  0DC4  00A0               	movwf	___ftpack@arg
  7805  0DC5  0829               	movf	___lwtoft@c+1,w
  7806  0DC6  00A1               	movwf	___ftpack@arg+1
  7807  0DC7  01A2               	clrf	___ftpack@arg+2
  7808  0DC8  308E               	movlw	142
  7809  0DC9  00AB               	movwf	??___lwtoft
  7810  0DCA  082B               	movf	??___lwtoft,w
  7811  0DCB  00A3               	movwf	___ftpack@exp
  7812  0DCC  01A4               	clrf	___ftpack@sign
  7813  0DCD  3186  2684         	fcall	___ftpack
  7814  0DCF  0020               	movlb	0	; select bank0
  7815  0DD0  0820               	movf	?___ftpack,w
  7816  0DD1  00A8               	movwf	?___lwtoft
  7817  0DD2  0821               	movf	?___ftpack+1,w
  7818  0DD3  00A9               	movwf	?___lwtoft+1
  7819  0DD4  0822               	movf	?___ftpack+2,w
  7820  0DD5  00AA               	movwf	?___lwtoft+2
  7821  0DD6  0008               	return
  7822  0DD7                     __end_of___lwtoft:	
  7823                           
  7824                           	psect	text20
  7825  0684                     __ptext20:	
  7826 ;; *************** function ___ftpack *****************
  7827 ;; Defined at:
  7828 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  arg             3    0[BANK0 ] unsigned um
  7831 ;;  exp             1    3[BANK0 ] unsigned char 
  7832 ;;  sign            1    4[BANK0 ] unsigned char 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  3    0[BANK0 ] float 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7844 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;Total ram usage:        8 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    3
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		___ftdiv
  7855 ;;		___lbtoft
  7856 ;;		___lwtoft
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           
  7861                           ;psect for function ___ftpack
  7862  0684                     ___ftpack:	
  7863                           
  7864                           ;incstack = 0
  7865                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7866  0684  0020               	movlb	0	; select bank0
  7867  0685  0823               	movf	___ftpack@exp,w
  7868  0686  1903               	btfsc	3,2
  7869  0687  2E8D               	goto	l2164
  7870  0688  0822               	movf	___ftpack@arg+2,w
  7871  0689  0421               	iorwf	___ftpack@arg+1,w
  7872  068A  0420               	iorwf	___ftpack@arg,w
  7873  068B  1D03               	skipz
  7874  068C  2E9E               	goto	l2170
  7875  068D                     l2164:	
  7876  068D  3000               	movlw	0
  7877  068E  00A0               	movwf	?___ftpack
  7878  068F  3000               	movlw	0
  7879  0690  00A1               	movwf	?___ftpack+1
  7880  0691  3000               	movlw	0
  7881  0692  00A2               	movwf	?___ftpack+2
  7882  0693  0008               	return
  7883  0694                     l2168:	
  7884  0694  3001               	movlw	1
  7885  0695  00A5               	movwf	??___ftpack
  7886  0696  0825               	movf	??___ftpack,w
  7887  0697  07A3               	addwf	___ftpack@exp,f
  7888  0698  3001               	movlw	1
  7889  0699                     u1445:	
  7890  0699  36A2               	lsrf	___ftpack@arg+2,f
  7891  069A  0CA1               	rrf	___ftpack@arg+1,f
  7892  069B  0CA0               	rrf	___ftpack@arg,f
  7893  069C  0B89               	decfsz	9,f
  7894  069D  2E99               	goto	u1445
  7895  069E                     l2170:	
  7896  069E  30FE               	movlw	254
  7897  069F  0522               	andwf	___ftpack@arg+2,w
  7898  06A0  1903               	btfsc	3,2
  7899  06A1  2EB7               	goto	l891
  7900  06A2  2E94               	goto	l2168
  7901  06A3                     l2172:	
  7902  06A3  3001               	movlw	1
  7903  06A4  00A5               	movwf	??___ftpack
  7904  06A5  0825               	movf	??___ftpack,w
  7905  06A6  07A3               	addwf	___ftpack@exp,f
  7906  06A7  3001               	movlw	1
  7907  06A8  07A0               	addwf	___ftpack@arg,f
  7908  06A9  3000               	movlw	0
  7909  06AA  1803               	skipnc
  7910  06AB  3001               	movlw	1
  7911  06AC  07A1               	addwf	___ftpack@arg+1,f
  7912  06AD  3000               	movlw	0
  7913  06AE  1803               	skipnc
  7914  06AF  3001               	movlw	1
  7915  06B0  07A2               	addwf	___ftpack@arg+2,f
  7916  06B1  3001               	movlw	1
  7917  06B2                     u1465:	
  7918  06B2  36A2               	lsrf	___ftpack@arg+2,f
  7919  06B3  0CA1               	rrf	___ftpack@arg+1,f
  7920  06B4  0CA0               	rrf	___ftpack@arg,f
  7921  06B5  0B89               	decfsz	9,f
  7922  06B6  2EB2               	goto	u1465
  7923  06B7                     l891:	
  7924  06B7  30FF               	movlw	255
  7925  06B8  0522               	andwf	___ftpack@arg+2,w
  7926  06B9  1903               	btfsc	3,2
  7927  06BA  2EC4               	goto	l2180
  7928  06BB  2EA3               	goto	l2172
  7929  06BC                     l2178:	
  7930  06BC  3001               	movlw	1
  7931  06BD  02A3               	subwf	___ftpack@exp,f
  7932  06BE  3001               	movlw	1
  7933  06BF                     u1485:	
  7934  06BF  35A0               	lslf	___ftpack@arg,f
  7935  06C0  0DA1               	rlf	___ftpack@arg+1,f
  7936  06C1  0DA2               	rlf	___ftpack@arg+2,f
  7937  06C2  0B89               	decfsz	9,f
  7938  06C3  2EBF               	goto	u1485
  7939  06C4                     l2180:	
  7940  06C4  1BA1               	btfsc	___ftpack@arg+1,7
  7941  06C5  2ECA               	goto	l898
  7942  06C6  3002               	movlw	2
  7943  06C7  0223               	subwf	___ftpack@exp,w
  7944  06C8  1803               	skipnc
  7945  06C9  2EBC               	goto	l2178
  7946  06CA                     l898:	
  7947  06CA  1823               	btfsc	___ftpack@exp,0
  7948  06CB  2ED2               	goto	l899
  7949  06CC  30FF               	movlw	255
  7950  06CD  05A0               	andwf	___ftpack@arg,f
  7951  06CE  307F               	movlw	127
  7952  06CF  05A1               	andwf	___ftpack@arg+1,f
  7953  06D0  30FF               	movlw	255
  7954  06D1  05A2               	andwf	___ftpack@arg+2,f
  7955  06D2                     l899:	
  7956  06D2  1003               	clrc
  7957  06D3  0CA3               	rrf	___ftpack@exp,f
  7958  06D4  0823               	movf	___ftpack@exp,w
  7959  06D5  00A5               	movwf	??___ftpack
  7960  06D6  01A6               	clrf	??___ftpack+1
  7961  06D7  01A7               	clrf	??___ftpack+2
  7962  06D8  3010               	movlw	16
  7963  06D9                     u1525:	
  7964  06D9  35A5               	lslf	??___ftpack,f
  7965  06DA  0DA6               	rlf	??___ftpack+1,f
  7966  06DB  0DA7               	rlf	??___ftpack+2,f
  7967  06DC  0B89               	decfsz	9,f
  7968  06DD  2ED9               	goto	u1525
  7969  06DE  0825               	movf	??___ftpack,w
  7970  06DF  04A0               	iorwf	___ftpack@arg,f
  7971  06E0  0826               	movf	??___ftpack+1,w
  7972  06E1  04A1               	iorwf	___ftpack@arg+1,f
  7973  06E2  0827               	movf	??___ftpack+2,w
  7974  06E3  04A2               	iorwf	___ftpack@arg+2,f
  7975  06E4  0824               	movf	___ftpack@sign,w
  7976  06E5  1903               	btfsc	3,2
  7977  06E6  0008               	return
  7978  06E7  17A2               	bsf	___ftpack@arg+2,7
  7979  06E8  0008               	return
  7980  06E9                     __end_of___ftpack:	
  7981                           
  7982                           	psect	text21
  7983  0F0D                     __ptext21:	
  7984 ;; *************** function ___lwmod *****************
  7985 ;; Defined at:
  7986 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  divisor         2    0[BANK0 ] unsigned int 
  7989 ;;  dividend        2    2[BANK0 ] unsigned int 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  counter         1    5[BANK0 ] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  2    0[BANK0 ] unsigned int 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;Total ram usage:        6 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    3
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_LED7SegDisplayValue
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           
  8016                           ;psect for function ___lwmod
  8017  0F0D                     ___lwmod:	
  8018                           
  8019                           ;incstack = 0
  8020                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8021  0F0D  0020               	movlb	0	; select bank0
  8022  0F0E  0820               	movf	___lwmod@divisor,w
  8023  0F0F  0421               	iorwf	___lwmod@divisor+1,w
  8024  0F10  1903               	btfsc	3,2
  8025  0F11  2F35               	goto	l2316
  8026  0F12  01A5               	clrf	___lwmod@counter
  8027  0F13  0AA5               	incf	___lwmod@counter,f
  8028  0F14                     l2306:	
  8029  0F14  1BA1               	btfsc	___lwmod@divisor+1,7
  8030  0F15  2F20               	goto	l2308
  8031  0F16  3001               	movlw	1
  8032  0F17                     u1805:	
  8033  0F17  35A0               	lslf	___lwmod@divisor,f
  8034  0F18  0DA1               	rlf	___lwmod@divisor+1,f
  8035  0F19  0B89               	decfsz	9,f
  8036  0F1A  2F17               	goto	u1805
  8037  0F1B  3001               	movlw	1
  8038  0F1C  00A4               	movwf	??___lwmod
  8039  0F1D  0824               	movf	??___lwmod,w
  8040  0F1E  07A5               	addwf	___lwmod@counter,f
  8041  0F1F  2F14               	goto	l2306
  8042  0F20                     l2308:	
  8043  0F20  0821               	movf	___lwmod@divisor+1,w
  8044  0F21  0223               	subwf	___lwmod@dividend+1,w
  8045  0F22  1D03               	skipz
  8046  0F23  2F26               	goto	u1825
  8047  0F24  0820               	movf	___lwmod@divisor,w
  8048  0F25  0222               	subwf	___lwmod@dividend,w
  8049  0F26                     u1825:	
  8050  0F26  1C03               	skipc
  8051  0F27  2F2C               	goto	l2312
  8052  0F28  0820               	movf	___lwmod@divisor,w
  8053  0F29  02A2               	subwf	___lwmod@dividend,f
  8054  0F2A  0821               	movf	___lwmod@divisor+1,w
  8055  0F2B  3BA3               	subwfb	___lwmod@dividend+1,f
  8056  0F2C                     l2312:	
  8057  0F2C  3001               	movlw	1
  8058  0F2D                     u1835:	
  8059  0F2D  36A1               	lsrf	___lwmod@divisor+1,f
  8060  0F2E  0CA0               	rrf	___lwmod@divisor,f
  8061  0F2F  0B89               	decfsz	9,f
  8062  0F30  2F2D               	goto	u1835
  8063  0F31  3001               	movlw	1
  8064  0F32  02A5               	subwf	___lwmod@counter,f
  8065  0F33  1D03               	btfss	3,2
  8066  0F34  2F20               	goto	l2308
  8067  0F35                     l2316:	
  8068  0F35  0823               	movf	___lwmod@dividend+1,w
  8069  0F36  00A1               	movwf	?___lwmod+1
  8070  0F37  0822               	movf	___lwmod@dividend,w
  8071  0F38  00A0               	movwf	?___lwmod
  8072  0F39  0008               	return
  8073  0F3A                     __end_of___lwmod:	
  8074                           
  8075                           	psect	text22
  8076  0F3A                     __ptext22:	
  8077 ;; *************** function ___lwdiv *****************
  8078 ;; Defined at:
  8079 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  divisor         2    0[BANK0 ] unsigned int 
  8082 ;;  dividend        2    2[BANK0 ] unsigned int 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  quotient        2    5[BANK0 ] unsigned int 
  8085 ;;  counter         1    7[BANK0 ] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  2    0[BANK0 ] unsigned int 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;Total ram usage:        8 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    3
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_LED7SegDisplayValue
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           
  8110                           ;psect for function ___lwdiv
  8111  0F3A                     ___lwdiv:	
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8115  0F3A  0020               	movlb	0	; select bank0
  8116  0F3B  01A5               	clrf	___lwdiv@quotient
  8117  0F3C  01A6               	clrf	___lwdiv@quotient+1
  8118  0F3D  0820               	movf	___lwdiv@divisor,w
  8119  0F3E  0421               	iorwf	___lwdiv@divisor+1,w
  8120  0F3F  1903               	btfsc	3,2
  8121  0F40  2F6A               	goto	l2294
  8122  0F41  01A7               	clrf	___lwdiv@counter
  8123  0F42  0AA7               	incf	___lwdiv@counter,f
  8124  0F43                     l2282:	
  8125  0F43  1BA1               	btfsc	___lwdiv@divisor+1,7
  8126  0F44  2F4F               	goto	l2284
  8127  0F45  3001               	movlw	1
  8128  0F46                     u1735:	
  8129  0F46  35A0               	lslf	___lwdiv@divisor,f
  8130  0F47  0DA1               	rlf	___lwdiv@divisor+1,f
  8131  0F48  0B89               	decfsz	9,f
  8132  0F49  2F46               	goto	u1735
  8133  0F4A  3001               	movlw	1
  8134  0F4B  00A4               	movwf	??___lwdiv
  8135  0F4C  0824               	movf	??___lwdiv,w
  8136  0F4D  07A7               	addwf	___lwdiv@counter,f
  8137  0F4E  2F43               	goto	l2282
  8138  0F4F                     l2284:	
  8139  0F4F  3001               	movlw	1
  8140  0F50                     u1755:	
  8141  0F50  35A5               	lslf	___lwdiv@quotient,f
  8142  0F51  0DA6               	rlf	___lwdiv@quotient+1,f
  8143  0F52  0B89               	decfsz	9,f
  8144  0F53  2F50               	goto	u1755
  8145  0F54  0821               	movf	___lwdiv@divisor+1,w
  8146  0F55  0223               	subwf	___lwdiv@dividend+1,w
  8147  0F56  1D03               	skipz
  8148  0F57  2F5A               	goto	u1765
  8149  0F58  0820               	movf	___lwdiv@divisor,w
  8150  0F59  0222               	subwf	___lwdiv@dividend,w
  8151  0F5A                     u1765:	
  8152  0F5A  1C03               	skipc
  8153  0F5B  2F61               	goto	l2290
  8154  0F5C  0820               	movf	___lwdiv@divisor,w
  8155  0F5D  02A2               	subwf	___lwdiv@dividend,f
  8156  0F5E  0821               	movf	___lwdiv@divisor+1,w
  8157  0F5F  3BA3               	subwfb	___lwdiv@dividend+1,f
  8158  0F60  1425               	bsf	___lwdiv@quotient,0
  8159  0F61                     l2290:	
  8160  0F61  3001               	movlw	1
  8161  0F62                     u1775:	
  8162  0F62  36A1               	lsrf	___lwdiv@divisor+1,f
  8163  0F63  0CA0               	rrf	___lwdiv@divisor,f
  8164  0F64  0B89               	decfsz	9,f
  8165  0F65  2F62               	goto	u1775
  8166  0F66  3001               	movlw	1
  8167  0F67  02A7               	subwf	___lwdiv@counter,f
  8168  0F68  1D03               	btfss	3,2
  8169  0F69  2F4F               	goto	l2284
  8170  0F6A                     l2294:	
  8171  0F6A  0826               	movf	___lwdiv@quotient+1,w
  8172  0F6B  00A1               	movwf	?___lwdiv+1
  8173  0F6C  0825               	movf	___lwdiv@quotient,w
  8174  0F6D  00A0               	movwf	?___lwdiv
  8175  0F6E  0008               	return
  8176  0F6F                     __end_of___lwdiv:	
  8177                           
  8178                           	psect	text23
  8179  0589                     __ptext23:	
  8180 ;; *************** function ___fttol *****************
  8181 ;; Defined at:
  8182 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  f1              3   32[BANK0 ] float 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  lval            4   41[BANK0 ] unsigned long 
  8187 ;;  exp1            1   45[BANK0 ] unsigned char 
  8188 ;;  sign1           1   40[BANK0 ] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  4   32[BANK0 ] long 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8199 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;Total ram usage:       14 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    3
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_main
  8209 ;;		_LED7SegDisplayValue
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           
  8214                           ;psect for function ___fttol
  8215  0589                     ___fttol:	
  8216                           
  8217                           ;incstack = 0
  8218                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8219  0589  0020               	movlb	0	; select bank0
  8220  058A  0840               	movf	___fttol@f1,w
  8221  058B  00C4               	movwf	??___fttol
  8222  058C  0841               	movf	___fttol@f1+1,w
  8223  058D  00C5               	movwf	??___fttol+1
  8224  058E  0842               	movf	___fttol@f1+2,w
  8225  058F  00C6               	movwf	??___fttol+2
  8226  0590  1003               	clrc
  8227  0591  0D45               	rlf	??___fttol+1,w
  8228  0592  0D46               	rlf	??___fttol+2,w
  8229  0593  00C7               	movwf	??___fttol+3
  8230  0594  0847               	movf	??___fttol+3,w
  8231  0595  00CD               	movwf	___fttol@exp1
  8232  0596  084D               	movf	___fttol@exp1,w
  8233  0597  1D03               	btfss	3,2
  8234  0598  2DA2               	goto	l2236
  8235  0599  3000               	movlw	0
  8236  059A  00C3               	movwf	?___fttol+3
  8237  059B  3000               	movlw	0
  8238  059C  00C2               	movwf	?___fttol+2
  8239  059D  3000               	movlw	0
  8240  059E  00C1               	movwf	?___fttol+1
  8241  059F  3000               	movlw	0
  8242  05A0  00C0               	movwf	?___fttol
  8243  05A1  0008               	return
  8244  05A2                     l2236:	
  8245  05A2  0840               	movf	___fttol@f1,w
  8246  05A3  00C4               	movwf	??___fttol
  8247  05A4  0841               	movf	___fttol@f1+1,w
  8248  05A5  00C5               	movwf	??___fttol+1
  8249  05A6  0842               	movf	___fttol@f1+2,w
  8250  05A7  00C6               	movwf	??___fttol+2
  8251  05A8  3017               	movlw	23
  8252  05A9                     u1635:	
  8253  05A9  36C6               	lsrf	??___fttol+2,f
  8254  05AA  0CC5               	rrf	??___fttol+1,f
  8255  05AB  0CC4               	rrf	??___fttol,f
  8256  05AC  0B89               	decfsz	9,f
  8257  05AD  2DA9               	goto	u1635
  8258  05AE  0844               	movf	??___fttol,w
  8259  05AF  00C7               	movwf	??___fttol+3
  8260  05B0  0847               	movf	??___fttol+3,w
  8261  05B1  00C8               	movwf	___fttol@sign1
  8262  05B2  17C1               	bsf	___fttol@f1+1,7
  8263  05B3  30FF               	movlw	255
  8264  05B4  05C0               	andwf	___fttol@f1,f
  8265  05B5  30FF               	movlw	255
  8266  05B6  05C1               	andwf	___fttol@f1+1,f
  8267  05B7  3000               	movlw	0
  8268  05B8  05C2               	andwf	___fttol@f1+2,f
  8269  05B9  0840               	movf	___fttol@f1,w
  8270  05BA  00C9               	movwf	___fttol@lval
  8271  05BB  0841               	movf	___fttol@f1+1,w
  8272  05BC  00CA               	movwf	___fttol@lval+1
  8273  05BD  0842               	movf	___fttol@f1+2,w
  8274  05BE  00CB               	movwf	___fttol@lval+2
  8275  05BF  01CC               	clrf	___fttol@lval+3
  8276  05C0  308E               	movlw	142
  8277  05C1  02CD               	subwf	___fttol@exp1,f
  8278  05C2  1FCD               	btfss	___fttol@exp1,7
  8279  05C3  2DE0               	goto	l2256
  8280  05C4  084D               	movf	___fttol@exp1,w
  8281  05C5  3A80               	xorlw	128
  8282  05C6  3E8F               	addlw	143
  8283  05C7  1803               	skipnc
  8284  05C8  2DD2               	goto	l2254
  8285  05C9  3000               	movlw	0
  8286  05CA  00C3               	movwf	?___fttol+3
  8287  05CB  3000               	movlw	0
  8288  05CC  00C2               	movwf	?___fttol+2
  8289  05CD  3000               	movlw	0
  8290  05CE  00C1               	movwf	?___fttol+1
  8291  05CF  3000               	movlw	0
  8292  05D0  00C0               	movwf	?___fttol
  8293  05D1  0008               	return
  8294  05D2                     l2254:	
  8295  05D2  3001               	movlw	1
  8296  05D3                     u1665:	
  8297  05D3  36CC               	lsrf	___fttol@lval+3,f
  8298  05D4  0CCB               	rrf	___fttol@lval+2,f
  8299  05D5  0CCA               	rrf	___fttol@lval+1,f
  8300  05D6  0CC9               	rrf	___fttol@lval,f
  8301  05D7  0B89               	decfsz	9,f
  8302  05D8  2DD3               	goto	u1665
  8303  05D9  3001               	movlw	1
  8304  05DA  00C4               	movwf	??___fttol
  8305  05DB  0844               	movf	??___fttol,w
  8306  05DC  07CD               	addwf	___fttol@exp1,f
  8307  05DD  1903               	btfsc	3,2
  8308  05DE  2DF9               	goto	l2264
  8309  05DF  2DD2               	goto	l2254
  8310  05E0                     l2256:	
  8311  05E0  3018               	movlw	24
  8312  05E1  024D               	subwf	___fttol@exp1,w
  8313  05E2  1C03               	skipc
  8314  05E3  2DF6               	goto	l982
  8315  05E4  3000               	movlw	0
  8316  05E5  00C3               	movwf	?___fttol+3
  8317  05E6  3000               	movlw	0
  8318  05E7  00C2               	movwf	?___fttol+2
  8319  05E8  3000               	movlw	0
  8320  05E9  00C1               	movwf	?___fttol+1
  8321  05EA  3000               	movlw	0
  8322  05EB  00C0               	movwf	?___fttol
  8323  05EC  0008               	return
  8324  05ED                     l2262:	
  8325  05ED  3001               	movlw	1
  8326  05EE                     u1695:	
  8327  05EE  35C9               	lslf	___fttol@lval,f
  8328  05EF  0DCA               	rlf	___fttol@lval+1,f
  8329  05F0  0DCB               	rlf	___fttol@lval+2,f
  8330  05F1  0DCC               	rlf	___fttol@lval+3,f
  8331  05F2  0B89               	decfsz	9,f
  8332  05F3  2DEE               	goto	u1695
  8333  05F4  3001               	movlw	1
  8334  05F5  02CD               	subwf	___fttol@exp1,f
  8335  05F6                     l982:	
  8336  05F6  084D               	movf	___fttol@exp1,w
  8337  05F7  1D03               	btfss	3,2
  8338  05F8  2DED               	goto	l2262
  8339  05F9                     l2264:	
  8340  05F9  0848               	movf	___fttol@sign1,w
  8341  05FA  1903               	btfsc	3,2
  8342  05FB  2E07               	goto	l2268
  8343  05FC  09C9               	comf	___fttol@lval,f
  8344  05FD  09CA               	comf	___fttol@lval+1,f
  8345  05FE  09CB               	comf	___fttol@lval+2,f
  8346  05FF  09CC               	comf	___fttol@lval+3,f
  8347  0600  0AC9               	incf	___fttol@lval,f
  8348  0601  1903               	skipnz
  8349  0602  0ACA               	incf	___fttol@lval+1,f
  8350  0603  1903               	skipnz
  8351  0604  0ACB               	incf	___fttol@lval+2,f
  8352  0605  1903               	skipnz
  8353  0606  0ACC               	incf	___fttol@lval+3,f
  8354  0607                     l2268:	
  8355  0607  084C               	movf	___fttol@lval+3,w
  8356  0608  00C3               	movwf	?___fttol+3
  8357  0609  084B               	movf	___fttol@lval+2,w
  8358  060A  00C2               	movwf	?___fttol+2
  8359  060B  084A               	movf	___fttol@lval+1,w
  8360  060C  00C1               	movwf	?___fttol+1
  8361  060D  0849               	movf	___fttol@lval,w
  8362  060E  00C0               	movwf	?___fttol
  8363  060F  0008               	return
  8364  0610                     __end_of___fttol:	
  8365                           
  8366                           	psect	text24
  8367  07F5                     __ptext24:	
  8368 ;; *************** function _LED7SegBlankDisplay *****************
  8369 ;; Defined at:
  8370 ;;		line 102 in file "LED7Seg.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    7
  8391 ;; This function calls:
  8392 ;;		_LED7SegShiftOutPulseClock
  8393 ;; This function is called by:
  8394 ;;		_LED7SegLoop
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _LED7SegBlankDisplay
  8400  07F5                     _LED7SegBlankDisplay:	
  8401                           
  8402                           ;LED7Seg.c: 104: LED7SegShiftOutPulseClock(255);
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _LED7SegBlankDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8406  07F5  30FF               	movlw	255
  8407  07F6  318E  265B  3187   	fcall	_LED7SegShiftOutPulseClock
  8408                           
  8409                           ;LED7Seg.c: 105: LED7SegShiftOutPulseClock(255);
  8410  07F9  30FF               	movlw	255
  8411  07FA  318E  265B         	fcall	_LED7SegShiftOutPulseClock
  8412                           
  8413                           ;LED7Seg.c: 107: do { LATCbits.LATC5 = 1; } while(0);
  8414  07FC  0020               	movlb	0	; select bank0
  8415  07FD  1698               	bsf	24,5	;volatile
  8416                           
  8417                           ;LED7Seg.c: 109: do { LATCbits.LATC5 = 0; } while(0);
  8418  07FE  1298               	bcf	24,5	;volatile
  8419  07FF  0008               	return
  8420  0800                     __end_of_LED7SegBlankDisplay:	
  8421                           
  8422                           	psect	text25
  8423  0E5B                     __ptext25:	
  8424 ;; *************** function _LED7SegShiftOutPulseClock *****************
  8425 ;; Defined at:
  8426 ;;		line 69 in file "LED7Seg.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  val             1    wreg     unsigned char 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;  val             1   18[BANK0 ] unsigned char 
  8431 ;;  i               1   19[BANK0 ] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8445 ;;Total ram usage:        3 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; Hardware stack levels required when called:    6
  8448 ;; This function calls:
  8449 ;;		_LED7SegPinWrite
  8450 ;;		_LED7SegPulseClock
  8451 ;; This function is called by:
  8452 ;;		_LED7SegDisplayValue
  8453 ;;		_LED7SegBlankDisplay
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           
  8458                           ;psect for function _LED7SegShiftOutPulseClock
  8459  0E5B                     _LED7SegShiftOutPulseClock:	
  8460                           
  8461                           ;incstack = 0
  8462                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8463                           ;LED7SegShiftOutPulseClock@val stored from wreg
  8464  0E5B  0020               	movlb	0	; select bank0
  8465  0E5C  00B2               	movwf	LED7SegShiftOutPulseClock@val
  8466                           
  8467                           ;LED7Seg.c: 71: char i;
  8468                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
  8469  0E5D  01B3               	clrf	LED7SegShiftOutPulseClock@i
  8470  0E5E                     L2:	
  8471  0E5E  3008               	movlw	8
  8472  0E5F  0233               	subwf	LED7SegShiftOutPulseClock@i,w
  8473  0E60  1803               	btfsc	3,0
  8474  0E61  0008               	return
  8475                           
  8476                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
  8477  0E62  3001               	movlw	1
  8478  0E63  00B1               	movwf	??_LED7SegShiftOutPulseClock
  8479  0E64  0A33               	incf	LED7SegShiftOutPulseClock@i,w
  8480  0E65  2E67               	goto	u2774
  8481  0E66                     u2775:	
  8482  0E66  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
  8483  0E67                     u2774:	
  8484  0E67  0B89               	decfsz	9,f
  8485  0E68  2E66               	goto	u2775
  8486  0E69  0831               	movf	??_LED7SegShiftOutPulseClock,w
  8487  0E6A  0532               	andwf	LED7SegShiftOutPulseClock@val,w
  8488  0E6B  318D  2566  318E   	fcall	_LED7SegPinWrite
  8489                           
  8490                           ;LED7Seg.c: 77: LED7SegPulseClock();
  8491  0E6E  318D  2578  318E   	fcall	_LED7SegPulseClock
  8492  0E71  3001               	movlw	1
  8493  0E72  0020               	movlb	0	; select bank0
  8494  0E73  00B1               	movwf	??_LED7SegShiftOutPulseClock
  8495  0E74  0831               	movf	??_LED7SegShiftOutPulseClock,w
  8496  0E75  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
  8497  0E76  2E5E               	goto	L2
  8498  0E77                     __end_of_LED7SegShiftOutPulseClock:	
  8499                           
  8500                           	psect	text26
  8501  0D78                     __ptext26:	
  8502 ;; *************** function _LED7SegPulseClock *****************
  8503 ;; Defined at:
  8504 ;;		line 60 in file "LED7Seg.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    5
  8525 ;; This function calls:
  8526 ;;		_delay
  8527 ;; This function is called by:
  8528 ;;		_LED7SegShiftOutPulseClock
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function _LED7SegPulseClock
  8534  0D78                     _LED7SegPulseClock:	
  8535                           
  8536                           ;incstack = 0
  8537                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8538                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
  8539  0D78  0020               	movlb	0	; select bank0
  8540  0D79  1718               	bsf	24,6	;volatile
  8541                           
  8542                           ;LED7Seg.c: 64: delay(1);
  8543  0D7A  3001               	movlw	1
  8544  0D7B  00A6               	movwf	delay@delaytime
  8545  0D7C  3000               	movlw	0
  8546  0D7D  00A7               	movwf	delay@delaytime+1
  8547  0D7E  318F  27AD         	fcall	_delay
  8548                           
  8549                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
  8550  0D80  0020               	movlb	0	; select bank0
  8551  0D81  1318               	bcf	24,6	;volatile
  8552  0D82  0008               	return
  8553  0D83                     __end_of_LED7SegPulseClock:	
  8554                           
  8555                           	psect	text27
  8556  0FAD                     __ptext27:	
  8557 ;; *************** function _delay *****************
  8558 ;; Defined at:
  8559 ;;		line 94 in file "main.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  delaytime       2    6[BANK0 ] int 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  counter         4   13[BANK0 ] long 
  8564 ;;  adjustedDela    4    9[BANK0 ] long 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;Total ram usage:       11 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    4
  8581 ;; This function calls:
  8582 ;;		___wmul
  8583 ;; This function is called by:
  8584 ;;		_blinkyLoop
  8585 ;;		_main
  8586 ;;		_LED7SegPulseClock
  8587 ;;		_LED7SegLoop
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _delay
  8593  0FAD                     _delay:	
  8594                           
  8595                           ;main.c: 95: long counter = 0;
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8599  0FAD  3000               	movlw	0
  8600  0FAE  0020               	movlb	0	; select bank0
  8601  0FAF  00B0               	movwf	delay@counter+3
  8602  0FB0  3000               	movlw	0
  8603  0FB1  00AF               	movwf	delay@counter+2
  8604  0FB2  3000               	movlw	0
  8605  0FB3  00AE               	movwf	delay@counter+1
  8606  0FB4  3000               	movlw	0
  8607  0FB5  00AD               	movwf	delay@counter
  8608                           
  8609                           ;main.c: 96: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  8610  0FB6  0827               	movf	delay@delaytime+1,w
  8611  0FB7  00A1               	movwf	___wmul@multiplier+1
  8612  0FB8  0826               	movf	delay@delaytime,w
  8613  0FB9  00A0               	movwf	___wmul@multiplier
  8614  0FBA  300C               	movlw	low (_cMstrClkAdjust| (0+32768))
  8615  0FBB  0084               	movwf	4
  8616  0FBC  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
  8617  0FBD  0085               	movwf	5
  8618  0FBE  3F00               	moviw [0]fsr0
  8619  0FBF  00A2               	movwf	___wmul@multiplicand
  8620  0FC0  3F01               	moviw [1]fsr0
  8621  0FC1  00A3               	movwf	___wmul@multiplicand+1
  8622  0FC2  318E  263F  318F   	fcall	___wmul
  8623  0FC5  0020               	movlb	0	; select bank0
  8624  0FC6  0820               	movf	?___wmul,w
  8625  0FC7  00A9               	movwf	delay@adjustedDelaytime
  8626  0FC8  0821               	movf	?___wmul+1,w
  8627  0FC9  00AA               	movwf	delay@adjustedDelaytime+1
  8628  0FCA  0D89               	rlf	9,f
  8629  0FCB  3B89               	subwfb	9,f
  8630  0FCC  0989               	comf	9,f
  8631  0FCD  00AB               	movwf	delay@adjustedDelaytime+2
  8632  0FCE  00AC               	movwf	delay@adjustedDelaytime+3
  8633                           
  8634                           ;main.c: 97: if (0<delaytime)
  8635  0FCF  0827               	movf	delay@delaytime+1,w
  8636  0FD0  3A80               	xorlw	128
  8637  0FD1  00A8               	movwf	??_delay
  8638  0FD2  3080               	movlw	128
  8639  0FD3  0228               	subwf	??_delay,w
  8640  0FD4  1D03               	skipz
  8641  0FD5  2FD8               	goto	u2735
  8642  0FD6  3001               	movlw	1
  8643  0FD7  0226               	subwf	delay@delaytime,w
  8644  0FD8                     u2735:	
  8645  0FD8  1C03               	skipc
  8646  0FD9  0008               	return
  8647                           
  8648                           ;main.c: 98: for (counter = 0; counter<adjustedDelaytime; counter++);
  8649  0FDA  3000               	movlw	0
  8650  0FDB  0020               	movlb	0	; select bank0
  8651  0FDC  00B0               	movwf	delay@counter+3
  8652  0FDD  3000               	movlw	0
  8653  0FDE  00AF               	movwf	delay@counter+2
  8654  0FDF  3000               	movlw	0
  8655  0FE0  00AE               	movwf	delay@counter+1
  8656  0FE1  3000               	movlw	0
  8657  0FE2  00AD               	movwf	delay@counter
  8658  0FE3                     l450:	
  8659  0FE3  0830               	movf	delay@counter+3,w
  8660  0FE4  3A80               	xorlw	128
  8661  0FE5  00A8               	movwf	??_delay
  8662  0FE6  082C               	movf	delay@adjustedDelaytime+3,w
  8663  0FE7  3A80               	xorlw	128
  8664  0FE8  0228               	subwf	??_delay,w
  8665  0FE9  1D03               	skipz
  8666  0FEA  2FF5               	goto	u2743
  8667  0FEB  082B               	movf	delay@adjustedDelaytime+2,w
  8668  0FEC  022F               	subwf	delay@counter+2,w
  8669  0FED  1D03               	skipz
  8670  0FEE  2FF5               	goto	u2743
  8671  0FEF  082A               	movf	delay@adjustedDelaytime+1,w
  8672  0FF0  022E               	subwf	delay@counter+1,w
  8673  0FF1  1D03               	skipz
  8674  0FF2  2FF5               	goto	u2743
  8675  0FF3  0829               	movf	delay@adjustedDelaytime,w
  8676  0FF4  022D               	subwf	delay@counter,w
  8677  0FF5                     u2743:	
  8678  0FF5  1803               	btfsc	3,0
  8679  0FF6  0008               	return
  8680  0FF7  3001               	movlw	1
  8681  0FF8  07AD               	addwf	delay@counter,f
  8682  0FF9  3000               	movlw	0
  8683  0FFA  3DAE               	addwfc	delay@counter+1,f
  8684  0FFB  3000               	movlw	0
  8685  0FFC  3DAF               	addwfc	delay@counter+2,f
  8686  0FFD  3000               	movlw	0
  8687  0FFE  3DB0               	addwfc	delay@counter+3,f
  8688  0FFF  2FE3               	goto	l450
  8689  1000                     __end_of_delay:	
  8690                           
  8691                           	psect	text28
  8692  0E3F                     __ptext28:	
  8693 ;; *************** function ___wmul *****************
  8694 ;; Defined at:
  8695 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8698 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  product         2    4[BANK0 ] unsigned int 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  2    0[BANK0 ] unsigned int 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;Total ram usage:        6 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    3
  8717 ;; This function calls:
  8718 ;;		Nothing
  8719 ;; This function is called by:
  8720 ;;		_delay
  8721 ;;		_blinkyLoop
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function ___wmul
  8727  0E3F                     ___wmul:	
  8728                           
  8729                           ;incstack = 0
  8730                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8731  0E3F  0020               	movlb	0	; select bank0
  8732  0E40  01A4               	clrf	___wmul@product
  8733  0E41  01A5               	clrf	___wmul@product+1
  8734  0E42                     l3058:	
  8735  0E42  1C20               	btfss	___wmul@multiplier,0
  8736  0E43  2E48               	goto	l730
  8737  0E44  0822               	movf	___wmul@multiplicand,w
  8738  0E45  07A4               	addwf	___wmul@product,f
  8739  0E46  0823               	movf	___wmul@multiplicand+1,w
  8740  0E47  3DA5               	addwfc	___wmul@product+1,f
  8741  0E48                     l730:	
  8742  0E48  3001               	movlw	1
  8743  0E49                     u2705:	
  8744  0E49  35A2               	lslf	___wmul@multiplicand,f
  8745  0E4A  0DA3               	rlf	___wmul@multiplicand+1,f
  8746  0E4B  0B89               	decfsz	9,f
  8747  0E4C  2E49               	goto	u2705
  8748  0E4D  3001               	movlw	1
  8749  0E4E                     u2715:	
  8750  0E4E  36A1               	lsrf	___wmul@multiplier+1,f
  8751  0E4F  0CA0               	rrf	___wmul@multiplier,f
  8752  0E50  0B89               	decfsz	9,f
  8753  0E51  2E4E               	goto	u2715
  8754  0E52  0820               	movf	___wmul@multiplier,w
  8755  0E53  0421               	iorwf	___wmul@multiplier+1,w
  8756  0E54  1D03               	btfss	3,2
  8757  0E55  2E42               	goto	l3058
  8758  0E56  0825               	movf	___wmul@product+1,w
  8759  0E57  00A1               	movwf	?___wmul+1
  8760  0E58  0824               	movf	___wmul@product,w
  8761  0E59  00A0               	movwf	?___wmul
  8762  0E5A  0008               	return
  8763  0E5B                     __end_of___wmul:	
  8764                           
  8765                           	psect	text29
  8766  0D66                     __ptext29:	
  8767 ;; *************** function _LED7SegPinWrite *****************
  8768 ;; Defined at:
  8769 ;;		line 48 in file "LED7Seg.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  val             1    wreg     unsigned char 
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;  val             1    0[BANK0 ] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  1    wreg      void 
  8776 ;; Registers used:
  8777 ;;		wreg, status,2, status,0
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;Total ram usage:        1 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:    3
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_LED7SegShiftOutPulseClock
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           
  8798                           ;psect for function _LED7SegPinWrite
  8799  0D66                     _LED7SegPinWrite:	
  8800                           
  8801                           ;incstack = 0
  8802                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
  8803                           ;LED7SegPinWrite@val stored from wreg
  8804  0D66  0020               	movlb	0	; select bank0
  8805  0D67  00A0               	movwf	LED7SegPinWrite@val
  8806                           
  8807                           ;LED7Seg.c: 50: if (val){
  8808  0D68  0820               	movf	LED7SegPinWrite@val,w
  8809  0D69  1903               	btfsc	3,2
  8810  0D6A  2D6D               	goto	l606
  8811                           
  8812                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
  8813  0D6B  1798               	bsf	24,7	;volatile
  8814                           
  8815                           ;LED7Seg.c: 53: } else {
  8816  0D6C  0008               	return
  8817  0D6D                     l606:	
  8818                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
  8819                           
  8820  0D6D  1398               	bcf	24,7	;volatile
  8821  0D6E  0008               	return
  8822  0D6F                     __end_of_LED7SegPinWrite:	
  8823                           
  8824                           	psect	text30
  8825  0DAE                     __ptext30:	
  8826 ;; *************** function _ADCC_GetSingleConversion *****************
  8827 ;; Defined at:
  8828 ;;		line 132 in file "mcc_generated_files/adcc.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  channel         1    wreg     enum E14259
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  channel         1    3[BANK0 ] enum E14259
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  2    0[BANK0 ] unsigned int 
  8835 ;; Registers used:
  8836 ;;		wreg
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8842 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;Total ram usage:        4 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    3
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_main
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           
  8857                           ;psect for function _ADCC_GetSingleConversion
  8858  0DAE                     _ADCC_GetSingleConversion:	
  8859                           
  8860                           ;incstack = 0
  8861                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  8862                           ;ADCC_GetSingleConversion@channel stored from wreg
  8863  0DAE  0020               	movlb	0	; select bank0
  8864  0DAF  00A3               	movwf	ADCC_GetSingleConversion@channel
  8865                           
  8866                           ;adcc.c: 135: ADPCH = channel;
  8867  0DB0  0823               	movf	ADCC_GetSingleConversion@channel,w
  8868  0DB1  0021               	movlb	1	; select bank1
  8869  0DB2  009E               	movwf	30	;volatile
  8870                           
  8871                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  8872  0DB3  1793               	bsf	19,7	;volatile
  8873                           
  8874                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  8875  0DB4  1313               	bcf	19,6	;volatile
  8876                           
  8877                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  8878  0DB5  1413               	bsf	19,0	;volatile
  8879                           
  8880                           ;adcc.c: 147: __nop();
  8881  0DB6  0000               	nop
  8882  0DB7                     l163:	
  8883                           ;adcc.c: 151: {
  8884                           
  8885                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  8886                           
  8887  0DB7  0021               	movlb	1	; select bank1
  8888  0DB8  1813               	btfsc	19,0	;volatile
  8889  0DB9  2DB7               	goto	l163
  8890                           
  8891                           ;adcc.c: 152: }
  8892                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8893  0DBA  080D               	movf	13,w	;volatile
  8894  0DBB  0020               	movlb	0	; select bank0
  8895  0DBC  00A1               	movwf	?_ADCC_GetSingleConversion+1
  8896  0DBD  0021               	movlb	1	; select bank1
  8897  0DBE  080C               	movf	12,w	;volatile
  8898  0DBF  0020               	movlb	0	; select bank0
  8899  0DC0  00A0               	movwf	?_ADCC_GetSingleConversion
  8900  0DC1  0008               	return
  8901  0DC2                     __end_of_ADCC_GetSingleConversion:	
  8902                           
  8903                           	psect	intentry
  8904  0004                     __pintentry:	
  8905 ;; *************** function _INTERRUPT_InterruptManager *****************
  8906 ;; Defined at:
  8907 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;Total ram usage:        1 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    2
  8928 ;; This function calls:
  8929 ;;		_I2C1_BusCollisionISR
  8930 ;;		_I2C1_ISR
  8931 ;; This function is called by:
  8932 ;;		Interrupt level 1
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936  0004                     _INTERRUPT_InterruptManager:	
  8937                           
  8938                           ;incstack = 0
  8939  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8940                           
  8941                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8942  0005  3180               	pagesel	$
  8943  0006  0020               	movlb	0	; select bank0
  8944  0007  087F               	movf	127,w
  8945  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  8946                           
  8947                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
  8948  0009  1F0B               	btfss	11,6	;volatile
  8949  000A  2813               	goto	i1l394
  8950  000B  002E               	movlb	14	; select bank14
  8951  000C  1899               	btfsc	25,1	;volatile
  8952  000D  1C8F               	btfss	15,1	;volatile
  8953  000E  2813               	goto	i1l394
  8954                           
  8955                           ;interrupt_manager.c: 55: {
  8956                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  8957  000F  3180  2003  3180   	fcall	_I2C1_BusCollisionISR
  8958                           
  8959                           ;interrupt_manager.c: 57: }
  8960  0012  281B               	goto	i1l398
  8961  0013                     i1l394:	
  8962                           
  8963                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
  8964  0013  1F0B               	btfss	11,6	;volatile
  8965  0014  281B               	goto	i1l398
  8966  0015  002E               	movlb	14	; select bank14
  8967  0016  1819               	btfsc	25,0	;volatile
  8968  0017  1C0F               	btfss	15,0	;volatile
  8969  0018  281B               	goto	i1l398
  8970                           
  8971                           ;interrupt_manager.c: 59: {
  8972                           ;interrupt_manager.c: 60: I2C1_ISR();
  8973  0019  3180  2042         	fcall	_I2C1_ISR
  8974  001B                     i1l398:	
  8975                           ;interrupt_manager.c: 62: else
  8976                           ;interrupt_manager.c: 63: {
  8977                           
  8978                           ;interrupt_manager.c: 61: }
  8979                           
  8980  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  8981  001C  0020               	movlb	0	; select bank0
  8982  001D  00FF               	movwf	127
  8983  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8984  001F  0009               	retfie
  8985  0020                     __end_of_INTERRUPT_InterruptManager:	
  8986                           
  8987                           	psect	text32
  8988  0042                     __ptext32:	
  8989 ;; *************** function _I2C1_ISR *****************
  8990 ;; Defined at:
  8991 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;Total ram usage:        4 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    1
  9012 ;; This function calls:
  9013 ;;		_I2C1_FunctionComplete
  9014 ;;		_I2C1_Stop
  9015 ;; This function is called by:
  9016 ;;		_INTERRUPT_InterruptManager
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           
  9021                           ;psect for function _I2C1_ISR
  9022  0042                     _I2C1_ISR:	
  9023                           
  9024                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  9025                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  9026                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  9027                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  9028                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  9029                           
  9030                           ;incstack = 0
  9031                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9032  0042  002E               	movlb	14	; select bank14
  9033  0043  100F               	bcf	15,0	;volatile
  9034                           
  9035                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  9036  0044  0023               	movlb	3	; select bank3
  9037  0045  1F90               	btfss	16,7	;volatile
  9038  0046  2972               	goto	i1l2606
  9039                           
  9040                           ;i2c1.c: 246: {
  9041                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  9042  0047  1390               	bcf	16,7	;volatile
  9043                           
  9044                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  9045  0048  0020               	movlb	0	; select bank0
  9046  0049  01EF               	clrf	_i2c1_state
  9047                           
  9048                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  9049  004A  0872               	movf	_p_i2c1_current,w
  9050  004B  3E02               	addlw	2
  9051  004C  0086               	movwf	6
  9052  004D  0187               	clrf	7
  9053  004E  0801               	movf	1,w
  9054  004F  0086               	movwf	6
  9055  0050  0187               	clrf	7
  9056  0051  0181               	clrf	1
  9057  0052  0A81               	incf	1,f
  9058                           
  9059                           ;i2c1.c: 253: p_i2c1_current = (0);
  9060  0053  01F2               	clrf	_p_i2c1_current
  9061                           
  9062                           ;i2c1.c: 255: return;
  9063  0054  0008               	return
  9064  0055                     i1l292:	
  9065                           ;i2c1.c: 260: {
  9066                           ;i2c1.c: 261: case S_MASTER_IDLE:
  9067                           
  9068                           ;i2c1.c: 256: }
  9069                           ;i2c1.c: 259: switch(i2c1_state)
  9070                           
  9071                           
  9072                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  9073  0055  0021               	movlb	1	; select bank1
  9074  0056  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
  9075  0057  0008               	return
  9076                           
  9077                           ;i2c1.c: 264: {
  9078                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  9079  0058  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  9080  0059  00F9               	movwf	??_I2C1_ISR
  9081  005A  0879               	movf	??_I2C1_ISR,w
  9082  005B  00F2               	movwf	_p_i2c1_current
  9083                           
  9084                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  9085  005C  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  9086  005D  0086               	movwf	6
  9087  005E  0187               	clrf	7
  9088  005F  0801               	movf	1,w
  9089  0060  00F9               	movwf	??_I2C1_ISR
  9090  0061  0879               	movf	??_I2C1_ISR,w
  9091  0062  00F4               	movwf	_i2c1_trb_count
  9092                           
  9093                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  9094  0063  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  9095  0064  0086               	movwf	6
  9096  0065  0187               	clrf	7
  9097  0066  3F41               	moviw [1]fsr1
  9098  0067  00F3               	movwf	_p_i2c1_trb_current
  9099                           
  9100                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  9101  0068  3003               	movlw	3
  9102  0069  00F9               	movwf	??_I2C1_ISR
  9103  006A  0879               	movf	??_I2C1_ISR,w
  9104  006B  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
  9105                           
  9106                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  9107  006C  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  9108  006D  3AC7               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  9109  006E  1D03               	skipz
  9110  006F  2874               	goto	i1l2494
  9111                           
  9112                           ;i2c1.c: 274: {
  9113                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  9114  0070  30C4               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9115  0071  00F9               	movwf	??_I2C1_ISR
  9116  0072  0879               	movf	??_I2C1_ISR,w
  9117  0073  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  9118  0074                     i1l2494:	
  9119                           
  9120                           ;i2c1.c: 277: }
  9121                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  9122  0074  1022               	bcf	(_i2c1_object^(0+128)+2),0
  9123                           
  9124                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  9125  0075  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  9126  0076  0620               	xorwf	_i2c1_object^(0+128),w
  9127  0077  1903               	btfsc	3,2
  9128                           
  9129                           ;i2c1.c: 285: {
  9130                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  9131  0078  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  9132                           
  9133                           ;i2c1.c: 288: }
  9134                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  9135  0079  0023               	movlb	3	; select bank3
  9136  007A  1411               	bsf	17,0	;volatile
  9137                           
  9138                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  9139  007B  3002               	movlw	2
  9140  007C  00F9               	movwf	??_I2C1_ISR
  9141  007D  0879               	movf	??_I2C1_ISR,w
  9142  007E  0020               	movlb	0	; select bank0
  9143  007F  00EF               	movwf	_i2c1_state
  9144                           
  9145                           ;i2c1.c: 295: }
  9146                           ;i2c1.c: 297: break;
  9147  0080  0008               	return
  9148  0081                     i1l297:	
  9149                           ;i2c1.c: 299: case S_MASTER_RESTART:
  9150                           
  9151                           
  9152                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  9153  0081  0023               	movlb	3	; select bank3
  9154  0082  1491               	bsf	17,1	;volatile
  9155                           
  9156                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  9157  0083  3002               	movlw	2
  9158  0084  00F9               	movwf	??_I2C1_ISR
  9159  0085  0879               	movf	??_I2C1_ISR,w
  9160  0086  0020               	movlb	0	; select bank0
  9161  0087  00EF               	movwf	_i2c1_state
  9162                           
  9163                           ;i2c1.c: 309: break;
  9164  0088  0008               	return
  9165  0089                     i1l298:	
  9166                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  9167                           
  9168                           
  9169                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  9170  0089  0023               	movlb	3	; select bank3
  9171  008A  1F11               	btfss	17,6	;volatile
  9172  008B  2895               	goto	i1l2506
  9173                           
  9174                           ;i2c1.c: 314: {
  9175                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  9176  008C  3001               	movlw	1
  9177  008D  00F9               	movwf	??_I2C1_ISR
  9178  008E  0879               	movf	??_I2C1_ISR,w
  9179  008F  0021               	movlb	1	; select bank1
  9180  0090  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  9181                           
  9182                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9183  0091  3004               	movlw	4
  9184  0092  318D  25D7         	fcall	_I2C1_Stop
  9185                           
  9186                           ;i2c1.c: 317: }
  9187  0094  0008               	return
  9188  0095                     i1l2506:	
  9189                           
  9190                           ;i2c1.c: 318: else
  9191                           ;i2c1.c: 319: {
  9192                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  9193  0095  0876               	movf	I2C1_ISR@i2c_address+1,w
  9194  0096  00FA               	movwf	??_I2C1_ISR+1
  9195  0097  0875               	movf	I2C1_ISR@i2c_address,w
  9196  0098  00F9               	movwf	??_I2C1_ISR
  9197  0099  36FA               	lsrf	??_I2C1_ISR+1,f
  9198  009A  0CF9               	rrf	??_I2C1_ISR,f
  9199  009B  0879               	movf	??_I2C1_ISR,w
  9200  009C  0023               	movlb	3	; select bank3
  9201  009D  008C               	movwf	12	;volatile
  9202                           
  9203                           ;i2c1.c: 324: if(i2c_address & 0x01)
  9204  009E  1C75               	btfss	I2C1_ISR@i2c_address,0
  9205  009F  28A6               	goto	i1l2512
  9206                           
  9207                           ;i2c1.c: 325: {
  9208                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  9209  00A0  300B               	movlw	11
  9210  00A1  00F9               	movwf	??_I2C1_ISR
  9211  00A2  0879               	movf	??_I2C1_ISR,w
  9212  00A3  0020               	movlb	0	; select bank0
  9213  00A4  00EF               	movwf	_i2c1_state
  9214                           
  9215                           ;i2c1.c: 329: }
  9216  00A5  0008               	return
  9217  00A6                     i1l2512:	
  9218                           
  9219                           ;i2c1.c: 330: else
  9220                           ;i2c1.c: 331: {
  9221                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  9222  00A6  3003               	movlw	3
  9223  00A7  00F9               	movwf	??_I2C1_ISR
  9224  00A8  0879               	movf	??_I2C1_ISR,w
  9225  00A9  0020               	movlb	0	; select bank0
  9226  00AA  00EF               	movwf	_i2c1_state
  9227                           
  9228                           ;i2c1.c: 334: }
  9229                           ;i2c1.c: 335: }
  9230                           ;i2c1.c: 337: break;
  9231  00AB  0008               	return
  9232  00AC                     i1l303:	
  9233                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  9234                           
  9235                           
  9236                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  9237  00AC  0023               	movlb	3	; select bank3
  9238  00AD  1F11               	btfss	17,6	;volatile
  9239  00AE  28B8               	goto	i1l304
  9240                           
  9241                           ;i2c1.c: 342: {
  9242                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  9243  00AF  3001               	movlw	1
  9244  00B0  00F9               	movwf	??_I2C1_ISR
  9245  00B1  0879               	movf	??_I2C1_ISR,w
  9246  00B2  0021               	movlb	1	; select bank1
  9247  00B3  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  9248                           
  9249                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9250  00B4  3004               	movlw	4
  9251  00B5  318D  25D7         	fcall	_I2C1_Stop
  9252                           
  9253                           ;i2c1.c: 345: }
  9254  00B7  0008               	return
  9255  00B8                     i1l304:	
  9256                           
  9257                           ;i2c1.c: 346: else
  9258                           ;i2c1.c: 347: {
  9259                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  9260  00B8  1491               	bsf	17,1	;volatile
  9261                           
  9262                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  9263  00B9  0876               	movf	I2C1_ISR@i2c_address+1,w
  9264  00BA  00FA               	movwf	??_I2C1_ISR+1
  9265  00BB  0875               	movf	I2C1_ISR@i2c_address,w
  9266  00BC  00F9               	movwf	??_I2C1_ISR
  9267  00BD  087A               	movf	??_I2C1_ISR+1,w
  9268  00BE  00F9               	movwf	??_I2C1_ISR
  9269  00BF  01FA               	clrf	??_I2C1_ISR+1
  9270  00C0  3006               	movlw	6
  9271  00C1  0579               	andwf	??_I2C1_ISR,w
  9272  00C2  00FB               	movwf	??_I2C1_ISR+2
  9273  00C3  3000               	movlw	0
  9274  00C4  057A               	andwf	??_I2C1_ISR+1,w
  9275  00C5  00FC               	movwf	??_I2C1_ISR+3
  9276  00C6  30F0               	movlw	240
  9277  00C7  047B               	iorwf	??_I2C1_ISR+2,w
  9278  00C8  00F5               	movwf	I2C1_ISR@i2c_address
  9279  00C9  3000               	movlw	0
  9280  00CA  047C               	iorwf	??_I2C1_ISR+3,w
  9281  00CB  00F6               	movwf	I2C1_ISR@i2c_address+1
  9282                           
  9283                           ;i2c1.c: 357: i2c_address |= 0x0001;
  9284  00CC  1475               	bsf	I2C1_ISR@i2c_address,0
  9285                           
  9286                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  9287  00CD  0020               	movlb	0	; select bank0
  9288  00CE  01EE               	clrf	I2C1_ISR@i2c_10bit_address_restart
  9289  00CF  0AEE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  9290                           
  9291                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  9292  00D0  3002               	movlw	2
  9293  00D1  00F9               	movwf	??_I2C1_ISR
  9294  00D2  0879               	movf	??_I2C1_ISR,w
  9295  00D3  00EF               	movwf	_i2c1_state
  9296                           
  9297                           ;i2c1.c: 364: }
  9298                           ;i2c1.c: 366: break;
  9299  00D4  0008               	return
  9300  00D5                     i1l2526:	
  9301                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  9302                           
  9303                           
  9304                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  9305  00D5  036E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  9306  00D6  1903               	btfsc	3,2
  9307  00D7  28E9               	goto	i1l2546
  9308                           
  9309                           ;i2c1.c: 382: {
  9310                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  9311  00D8  0873               	movf	_p_i2c1_trb_current,w
  9312  00D9  0086               	movwf	6
  9313  00DA  0187               	clrf	7
  9314  00DB  3F40               	moviw [0]fsr1
  9315  00DC  00F5               	movwf	I2C1_ISR@i2c_address
  9316  00DD  3F41               	moviw [1]fsr1
  9317  00DE  00F6               	movwf	I2C1_ISR@i2c_address+1
  9318                           
  9319                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  9320  00DF  0873               	movf	_p_i2c1_trb_current,w
  9321  00E0  0086               	movwf	6
  9322  00E1  0187               	clrf	7
  9323  00E2  3F43               	moviw [3]fsr1
  9324  00E3  00F1               	movwf	I2C1_ISR@pi2c_buf_ptr
  9325                           
  9326                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  9327  00E4  0873               	movf	_p_i2c1_trb_current,w
  9328  00E5  0086               	movwf	6
  9329  00E6  0187               	clrf	7
  9330  00E7  3F42               	moviw [2]fsr1
  9331  00E8  00F0               	movwf	I2C1_ISR@i2c_bytes_left
  9332  00E9                     i1l2546:	
  9333                           ;i2c1.c: 407: }
  9334                           ;i2c1.c: 408: }
  9335                           
  9336                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  9337                           
  9338                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  9339                           
  9340                           ;i2c1.c: 400: else
  9341                           ;i2c1.c: 401: {
  9342                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  9343                           
  9344                           ;i2c1.c: 399: }
  9345                           
  9346                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  9347                           
  9348                           ;i2c1.c: 393: {
  9349                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  9350                           
  9351                           ;i2c1.c: 391: {
  9352                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  9353                           
  9354                           ;i2c1.c: 387: }
  9355                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  9356                           
  9357                           
  9358                           ;i2c1.c: 409: else
  9359                           ;i2c1.c: 410: {
  9360                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  9361  00E9  0875               	movf	I2C1_ISR@i2c_address,w
  9362  00EA  0023               	movlb	3	; select bank3
  9363  00EB  008C               	movwf	12	;volatile
  9364                           
  9365                           ;i2c1.c: 413: if(i2c_address & 0x01)
  9366  00EC  1C75               	btfss	I2C1_ISR@i2c_address,0
  9367  00ED  28F4               	goto	i1l2552
  9368                           
  9369                           ;i2c1.c: 414: {
  9370                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  9371  00EE  3005               	movlw	5
  9372  00EF  00F9               	movwf	??_I2C1_ISR
  9373  00F0  0879               	movf	??_I2C1_ISR,w
  9374  00F1  0020               	movlb	0	; select bank0
  9375  00F2  00EF               	movwf	_i2c1_state
  9376                           
  9377                           ;i2c1.c: 417: }
  9378  00F3  0008               	return
  9379  00F4                     i1l2552:	
  9380                           
  9381                           ;i2c1.c: 418: else
  9382                           ;i2c1.c: 419: {
  9383                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  9384  00F4  3003               	movlw	3
  9385  00F5  00F9               	movwf	??_I2C1_ISR
  9386  00F6  0879               	movf	??_I2C1_ISR,w
  9387  00F7  0020               	movlb	0	; select bank0
  9388  00F8  00EF               	movwf	_i2c1_state
  9389                           
  9390                           ;i2c1.c: 422: }
  9391                           ;i2c1.c: 423: }
  9392                           ;i2c1.c: 424: break;
  9393  00F9  0008               	return
  9394  00FA                     i1l314:	
  9395                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  9396                           
  9397                           
  9398                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  9399  00FA  0023               	movlb	3	; select bank3
  9400  00FB  1F11               	btfss	17,6	;volatile
  9401  00FC  2908               	goto	i1l2560
  9402                           
  9403                           ;i2c1.c: 430: {
  9404                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  9405  00FD  3001               	movlw	1
  9406  00FE  00F9               	movwf	??_I2C1_ISR
  9407  00FF  0879               	movf	??_I2C1_ISR,w
  9408  0100  0021               	movlb	1	; select bank1
  9409  0101  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  9410                           
  9411                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  9412  0102  0023               	movlb	3	; select bank3
  9413  0103  1311               	bcf	17,6	;volatile
  9414                           
  9415                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  9416  0104  3005               	movlw	5
  9417  0105  318D  25D7         	fcall	_I2C1_Stop
  9418                           
  9419                           ;i2c1.c: 440: }
  9420  0107  0008               	return
  9421  0108                     i1l2560:	
  9422                           
  9423                           ;i2c1.c: 441: else
  9424                           ;i2c1.c: 442: {
  9425                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  9426  0108  3001               	movlw	1
  9427  0109  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
  9428  010A  0A70               	incf	I2C1_ISR@i2c_bytes_left,w
  9429  010B  1D03               	btfss	3,2
  9430  010C  2921               	goto	i1l2568
  9431                           
  9432                           ;i2c1.c: 445: {
  9433                           ;i2c1.c: 449: p_i2c1_trb_current++;
  9434  010D  3004               	movlw	4
  9435  010E  00F9               	movwf	??_I2C1_ISR
  9436  010F  0879               	movf	??_I2C1_ISR,w
  9437  0110  07F3               	addwf	_p_i2c1_trb_current,f
  9438                           
  9439                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  9440  0111  3001               	movlw	1
  9441  0112  02F4               	subwf	_i2c1_trb_count,f
  9442  0113  1D03               	btfss	3,2
  9443  0114  2919               	goto	i1l318
  9444                           
  9445                           ;i2c1.c: 453: {
  9446                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9447  0115  3000               	movlw	0
  9448  0116  318D  25D7         	fcall	_I2C1_Stop
  9449                           
  9450                           ;i2c1.c: 455: }
  9451  0118  0008               	return
  9452  0119                     i1l318:	
  9453                           
  9454                           ;i2c1.c: 456: else
  9455                           ;i2c1.c: 457: {
  9456                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  9457  0119  0023               	movlb	3	; select bank3
  9458  011A  1491               	bsf	17,1	;volatile
  9459                           
  9460                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  9461  011B  3002               	movlw	2
  9462  011C  00F9               	movwf	??_I2C1_ISR
  9463  011D  0879               	movf	??_I2C1_ISR,w
  9464  011E  0020               	movlb	0	; select bank0
  9465  011F  00EF               	movwf	_i2c1_state
  9466                           
  9467                           ;i2c1.c: 469: }
  9468                           ;i2c1.c: 470: }
  9469  0120  0008               	return
  9470  0121                     i1l2568:	
  9471                           
  9472                           ;i2c1.c: 471: else
  9473                           ;i2c1.c: 472: {
  9474                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  9475  0121  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
  9476  0122  0086               	movwf	6
  9477  0123  0187               	clrf	7
  9478  0124  0801               	movf	1,w
  9479  0125  0023               	movlb	3	; select bank3
  9480  0126  008C               	movwf	12	;volatile
  9481  0127  3001               	movlw	1
  9482  0128  00F9               	movwf	??_I2C1_ISR
  9483  0129  0879               	movf	??_I2C1_ISR,w
  9484  012A  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  9485                           
  9486                           ;i2c1.c: 475: }
  9487                           ;i2c1.c: 476: }
  9488                           ;i2c1.c: 477: break;
  9489  012B  0008               	return
  9490  012C                     i1l321:	
  9491                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  9492                           
  9493                           
  9494                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  9495  012C  0023               	movlb	3	; select bank3
  9496  012D  1F11               	btfss	17,6	;volatile
  9497  012E  293A               	goto	i1l322
  9498                           
  9499                           ;i2c1.c: 483: {
  9500                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  9501  012F  3001               	movlw	1
  9502  0130  00F9               	movwf	??_I2C1_ISR
  9503  0131  0879               	movf	??_I2C1_ISR,w
  9504  0132  0021               	movlb	1	; select bank1
  9505  0133  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  9506                           
  9507                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9508  0134  3004               	movlw	4
  9509  0135  318D  25D7         	fcall	_I2C1_Stop
  9510                           
  9511                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  9512  0137  0023               	movlb	3	; select bank3
  9513  0138  1311               	bcf	17,6	;volatile
  9514                           
  9515                           ;i2c1.c: 493: }
  9516  0139  0008               	return
  9517  013A                     i1l322:	
  9518                           
  9519                           ;i2c1.c: 494: else
  9520                           ;i2c1.c: 495: {
  9521                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  9522  013A  1591               	bsf	17,3	;volatile
  9523                           
  9524                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9525  013B  3008               	movlw	8
  9526  013C  00F9               	movwf	??_I2C1_ISR
  9527  013D  0879               	movf	??_I2C1_ISR,w
  9528  013E  0020               	movlb	0	; select bank0
  9529  013F  00EF               	movwf	_i2c1_state
  9530                           
  9531                           ;i2c1.c: 498: }
  9532                           ;i2c1.c: 499: break;
  9533  0140  0008               	return
  9534  0141                     i1l2580:	
  9535                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  9536                           
  9537                           
  9538                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9539  0141  3008               	movlw	8
  9540  0142  00F9               	movwf	??_I2C1_ISR
  9541  0143  0879               	movf	??_I2C1_ISR,w
  9542  0144  00EF               	movwf	_i2c1_state
  9543                           
  9544                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  9545  0145  0023               	movlb	3	; select bank3
  9546  0146  1591               	bsf	17,3	;volatile
  9547                           
  9548                           ;i2c1.c: 511: break;
  9549  0147  0008               	return
  9550  0148                     i1l2584:	
  9551                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  9552                           
  9553                           
  9554                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  9555  0148  0023               	movlb	3	; select bank3
  9556  0149  080C               	movf	12,w	;volatile
  9557  014A  00F9               	movwf	??_I2C1_ISR
  9558  014B  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
  9559  014C  0086               	movwf	6
  9560  014D  0187               	clrf	7
  9561  014E  0879               	movf	??_I2C1_ISR,w
  9562  014F  0081               	movwf	1
  9563  0150  3001               	movlw	1
  9564  0151  00F9               	movwf	??_I2C1_ISR
  9565  0152  0879               	movf	??_I2C1_ISR,w
  9566  0153  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  9567                           
  9568                           ;i2c1.c: 519: if(--i2c_bytes_left)
  9569  0154  3001               	movlw	1
  9570  0155  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
  9571  0156  1903               	btfsc	3,2
  9572  0157  295F               	goto	i1l326
  9573                           
  9574                           ;i2c1.c: 520: {
  9575                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  9576  0158  1291               	bcf	17,5	;volatile
  9577                           
  9578                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  9579  0159  3006               	movlw	6
  9580  015A  00F9               	movwf	??_I2C1_ISR
  9581  015B  0879               	movf	??_I2C1_ISR,w
  9582  015C  0020               	movlb	0	; select bank0
  9583  015D  00EF               	movwf	_i2c1_state
  9584                           
  9585                           ;i2c1.c: 530: }
  9586  015E  2962               	goto	i1l2596
  9587  015F                     i1l326:	
  9588                           
  9589                           ;i2c1.c: 531: else
  9590                           ;i2c1.c: 532: {
  9591                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  9592  015F  1691               	bsf	17,5	;volatile
  9593                           
  9594                           ;i2c1.c: 538: I2C1_FunctionComplete();
  9595  0160  318D  259C         	fcall	_I2C1_FunctionComplete
  9596  0162                     i1l2596:	
  9597                           
  9598                           ;i2c1.c: 539: }
  9599                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  9600  0162  0023               	movlb	3	; select bank3
  9601  0163  1611               	bsf	17,4	;volatile
  9602                           
  9603                           ;i2c1.c: 543: break;
  9604  0164  0008               	return
  9605  0165                     i1l2598:	
  9606                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  9607                           
  9608                           
  9609                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  9610                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9611  0165  3000               	movlw	0
  9612  0166  318D  25D7         	fcall	_I2C1_Stop
  9613                           
  9614                           ;i2c1.c: 550: break;
  9615  0168  0008               	return
  9616  0169                     i1l2600:	
  9617                           ;i2c1.c: 552: default:
  9618                           
  9619                           
  9620                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  9621  0169  3001               	movlw	1
  9622  016A  00F9               	movwf	??_I2C1_ISR
  9623  016B  0879               	movf	??_I2C1_ISR,w
  9624  016C  0021               	movlb	1	; select bank1
  9625  016D  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  9626                           
  9627                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  9628  016E  3006               	movlw	6
  9629  016F  318D  25D7         	fcall	_I2C1_Stop
  9630                           
  9631                           ;i2c1.c: 560: }
  9632                           
  9633                           ;i2c1.c: 558: break;
  9634  0171  0008               	return
  9635  0172                     i1l2606:	
  9636  0172  0020               	movlb	0	; select bank0
  9637  0173  086F               	movf	_i2c1_state,w
  9638                           
  9639                           ; Switch size 1, requested type "space"
  9640                           ; Number of cases is 11, Range of values is 0 to 11
  9641                           ; switch strategies available:
  9642                           ; Name         Instructions Cycles
  9643                           ; direct_byte           30     6 (fixed)
  9644                           ; simple_byte           34    18 (average)
  9645                           ; jumptable            260     6 (fixed)
  9646                           ;	Chosen strategy is direct_byte
  9647  0174  0084               	movwf	4
  9648  0175  300C               	movlw	12
  9649  0176  0204               	subwf	4,w
  9650  0177  1803               	skipnc
  9651  0178  2969               	goto	i1l2600
  9652  0179  3188               	movlp	high i1S3398
  9653  017A  3504               	lslf	4,w
  9654  017B  3E00               	addlw	low i1S3398
  9655  017C  0082               	movwf	2
  9656  017D  0008               	return
  9657  017E                     __end_of_I2C1_ISR:	
  9658                           
  9659                           	psect	swtext2
  9660  0800                     __pswtext2:	
  9661  0800                     i1S3398:	
  9662  0800  3180  2855         	ljmp	i1l292
  9663  0802  3180  2881         	ljmp	i1l297
  9664  0804  3180  28D5         	ljmp	i1l2526
  9665  0806  3180  28FA         	ljmp	i1l314
  9666  0808  3181  2965         	ljmp	i1l2598
  9667  080A  3181  292C         	ljmp	i1l321
  9668  080C  3181  2941         	ljmp	i1l2580
  9669  080E  3181  2965         	ljmp	i1l2598
  9670  0810  3181  2948         	ljmp	i1l2584
  9671  0812  3181  2969         	ljmp	i1l2600
  9672  0814  3180  2889         	ljmp	i1l298
  9673  0816  3180  28AC         	ljmp	i1l303
  9674                           
  9675                           	psect	text33
  9676  0DD7                     __ptext33:	
  9677 ;; *************** function _I2C1_Stop *****************
  9678 ;; Defined at:
  9679 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  completion_c    1    wreg     enum E14260
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  completion_c    1    1[COMMON] enum E14260
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;Total ram usage:        2 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_I2C1_ISR
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           
  9707                           ;psect for function _I2C1_Stop
  9708  0DD7                     _I2C1_Stop:	
  9709                           
  9710                           ;incstack = 0
  9711                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  9712                           ;I2C1_Stop@completion_code stored from wreg
  9713  0DD7  00F8               	movwf	I2C1_Stop@completion_code
  9714                           
  9715                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  9716  0DD8  0023               	movlb	3	; select bank3
  9717  0DD9  1511               	bsf	17,2	;volatile
  9718                           
  9719                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  9720  0DDA  0872               	movf	_p_i2c1_current,w
  9721  0DDB  3E02               	addlw	2
  9722  0DDC  0086               	movwf	6
  9723  0DDD  0187               	clrf	7
  9724  0DDE  0801               	movf	1,w
  9725  0DDF  1903               	btfsc	3,2
  9726  0DE0  2DEC               	goto	i1l2404
  9727                           
  9728                           ;i2c1.c: 588: {
  9729                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  9730  0DE1  0878               	movf	I2C1_Stop@completion_code,w
  9731  0DE2  00F7               	movwf	??_I2C1_Stop
  9732  0DE3  0872               	movf	_p_i2c1_current,w
  9733  0DE4  3E02               	addlw	2
  9734  0DE5  0086               	movwf	6
  9735  0DE6  0187               	clrf	7
  9736  0DE7  0801               	movf	1,w
  9737  0DE8  0086               	movwf	6
  9738  0DE9  0187               	clrf	7
  9739  0DEA  0877               	movf	??_I2C1_Stop,w
  9740  0DEB  0081               	movwf	1
  9741  0DEC                     i1l2404:	
  9742                           
  9743                           ;i2c1.c: 591: }
  9744                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  9745  0DEC  0020               	movlb	0	; select bank0
  9746  0DED  01EF               	clrf	_i2c1_state
  9747  0DEE  0008               	return
  9748  0DEF                     __end_of_I2C1_Stop:	
  9749                           
  9750                           	psect	text34
  9751  0D9C                     __ptext34:	
  9752 ;; *************** function _I2C1_FunctionComplete *****************
  9753 ;; Defined at:
  9754 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;Total ram usage:        1 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_I2C1_ISR
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           
  9782                           ;psect for function _I2C1_FunctionComplete
  9783  0D9C                     _I2C1_FunctionComplete:	
  9784                           
  9785                           ;i2c1.c: 567: p_i2c1_trb_current++;
  9786                           
  9787                           ;incstack = 0
  9788                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  9789  0D9C  3004               	movlw	4
  9790  0D9D  00F7               	movwf	??_I2C1_FunctionComplete
  9791  0D9E  0877               	movf	??_I2C1_FunctionComplete,w
  9792  0D9F  07F3               	addwf	_p_i2c1_trb_current,f
  9793                           
  9794                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  9795  0DA0  3001               	movlw	1
  9796  0DA1  02F4               	subwf	_i2c1_trb_count,f
  9797  0DA2  1D03               	btfss	3,2
  9798  0DA3  2DAA               	goto	i1l333
  9799                           
  9800                           ;i2c1.c: 571: {
  9801                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  9802  0DA4  3004               	movlw	4
  9803  0DA5  00F7               	movwf	??_I2C1_FunctionComplete
  9804  0DA6  0877               	movf	??_I2C1_FunctionComplete,w
  9805  0DA7  0020               	movlb	0	; select bank0
  9806  0DA8  00EF               	movwf	_i2c1_state
  9807                           
  9808                           ;i2c1.c: 573: }
  9809  0DA9  0008               	return
  9810  0DAA                     i1l333:	
  9811                           
  9812                           ;i2c1.c: 574: else
  9813                           ;i2c1.c: 575: {
  9814                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  9815  0DAA  0020               	movlb	0	; select bank0
  9816  0DAB  01EF               	clrf	_i2c1_state
  9817  0DAC  0AEF               	incf	_i2c1_state,f
  9818  0DAD  0008               	return
  9819  0DAE                     __end_of_I2C1_FunctionComplete:	
  9820                           
  9821                           	psect	text35
  9822  0003                     __ptext35:	
  9823 ;; *************** function _I2C1_BusCollisionISR *****************
  9824 ;; Defined at:
  9825 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;		None
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;		None
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1    wreg      void 
  9832 ;; Registers used:
  9833 ;;		None
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;Total ram usage:        0 bytes
  9844 ;; Hardware stack levels used:    1
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_INTERRUPT_InterruptManager
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           
  9853                           ;psect for function _I2C1_BusCollisionISR
  9854  0003                     _I2C1_BusCollisionISR:	
  9855                           
  9856                           ;incstack = 0
  9857                           ; Regs used in _I2C1_BusCollisionISR: []
  9858  0003  0008               	return
  9859  0004                     __end_of_I2C1_BusCollisionISR:	
  9860  007E                     btemp	set	126	;btemp
  9861  007E                     int$flags	set	126
  9862  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    14
    Data        36
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     78      80
    BANK1            80      0      75
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    MYI2C_Write2LEDBytes@pD	PTR unsigned char  size(1) Largest target is 16
		 -> MYI2C_Write2LEDBytes@sourceData(BANK0[16]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 8
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterWrite@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write2LEDBytes@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S375$pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    S387$pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    S387$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S398$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S398$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_LED7SegLoop
    _blinkyLoop->_delay
    ___lbtoft->___ftpack
    ___ftdiv->___lbtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _MYI2C_Write2LEDBytes->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _MYI2C_ReadFaders->_I2C1_MasterReadTRBBuild
    _MYI2C_ReadFaders->_I2C1_MasterWriteTRBBuild
    _LED7SegLoop->_LED7SegDisplayValue
    _LED7SegDisplayValue->___fttol
    ___lwtoft->___ftpack
    ___lwtoft->___lwdiv
    ___fttol->___ftdiv
    _LED7SegBlankDisplay->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   22749
                                             63 BANK0     15    15      0
           _ADCC_GetSingleConversion
                _LED7SegDisplayValue
                        _LED7SegLoop
                       _LED7SegSetup
                   _MYI2C_ReadFaders
               _MYI2C_Write2LEDBytes
                  _SYSTEM_Initialize
                _UpdateLEDsFromValue
                            ___ftdiv
                            ___fttol
                           ___lbtoft
                         _blinkyLoop
                              _delay
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1677
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1690
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             16 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _UpdateLEDsFromValue                                  5     4      1     475
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MYI2C_Write2LEDBytes                                39    37      2    1745
                                             14 BANK0     37    35      2
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     3      4    1250
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (1) _MYI2C_ReadFaders                                    24    24      0    1807
                                              7 BANK0     19    19      0
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             7     3      4     504
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 4     2      2     450
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterReadTRBBuild                              7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegLoop                                          9     9      0    6886
                                             54 BANK0      9     9      0
                _LED7SegBlankDisplay
                _LED7SegDisplayValue
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LED7SegDisplayValue                                  8     6      2    4318
                                             46 BANK0      8     6      2
          _LED7SegShiftOutPulseClock
                            ___ftdiv (ARG)
                            ___fttol
                           ___lbtoft (ARG)
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1796
                                              8 BANK0      4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED7SegBlankDisplay                                  0     0      0    1213
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegShiftOutPulseClock                            3     3      0    1213
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (4) _LED7SegPulseClock                                    0     0      0    1052
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1052
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LED7SegDisplayValue
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___lwdiv (ARG)
       ___lwmod (ARG)
   _LED7SegLoop
     _LED7SegBlankDisplay
       _LED7SegShiftOutPulseClock
         _LED7SegPinWrite
         _LED7SegPulseClock
           _delay
             ___wmul
     _LED7SegDisplayValue
       _LED7SegShiftOutPulseClock
         _LED7SegPinWrite
         _LED7SegPulseClock
           _delay
             ___wmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwdiv (ARG)
       ___lwmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwmod (ARG)
     _delay
       ___wmul
   _LED7SegSetup
   _MYI2C_ReadFaders
     _I2C1_MasterReadTRBBuild
     _I2C1_MasterTRBInsert
     _I2C1_MasterWriteTRBBuild
   _MYI2C_Write2LEDBytes
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _UpdateLEDsFromValue
   ___ftdiv
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jul 08 12:14:03 2018

                                     _b 00A8                                       _c 00AD  
                                     _d 00A5                                       _e 00AB  
                                     pc 0002                             __CFG_CP$OFF 0000  
            __size_of_LED7SegPulseClock 000B              MYI2C_Write2LEDBytes@F14457 00DB  
                   ___wmul@multiplicand 0022         MYI2C_Write2LEDBytes@dataAddress 0044  
                                   l163 0DB7                                     l450 0FE3  
                                   l541 0635                                     l606 0D6D  
                                   l730 0E48                                     l891 06B7  
                                   l982 05F6                                     l898 06CA  
                                   l899 06D2                                     _GIE 005F  
                          __CFG_CPD$OFF 0000                            __CFG_BORV$LO 0000  
                                   wreg 0009                                    S3396 0818  
                          __CFG_LVP$OFF 0000                            __CFG_ZCD$OFF 0000  
                          ___ftdiv@cntr 003A                        __end_of_I2C1_ISR 017E  
                          ___ftdiv@sign 003F                                    l2210 07E7  
                                  l2204 07DA                                    l2214 07EF  
                                  l2312 0F2C                                    l2208 07E1  
                                  l2306 0F14                                    l2170 069E  
                                  l2236 05A2                                    l2308 0F20  
                                  l2316 0F35                                    l2180 06C4  
                                  l2172 06A3                                    l2164 068D  
                                  l2262 05ED                                    l2254 05D2  
                                  l2414 0F06                                    l3230 06F9  
                                  l2264 05F9                                    l2256 05E0  
                                  l2168 0694                                    l3232 073B  
                                  l3320 01EF                                    l3058 0E42  
                                  l2290 0F61                                    l2282 0F43  
                                  l2178 06BC                                    l3314 01D1  
                                  l2268 0607                                    l2284 0F4F  
                                  l3164 0505                                    l3252 03D3  
                                  l2700 078E                                    l3324 0210  
                                  l3308 01AF                                    l2294 0F6A  
                                  l3246 03B7                                    l3342 0258  
                                  l3326 0224                                    l3280 0431  
                                  l3272 0413                                    l2800 0356  
                                  l3352 0286                                    l3336 023C  
                                  l3344 0268                                    l3178 0579  
                                  l3266 03F7                                    l3274 0423  
                                  l3258 03E1                                    l2714 0759  
                                  l2802 035D                                    l2812 0371  
                                  l2804 0364                                    l2740 02CF  
                                  l2732 02C3                                    l3286 044D  
                                  l2718 07A0                                    l2814 0378  
                                  l2742 02D6                                    l2824 038C  
                                  l2816 037F                                    l2752 02EA  
                                  l2744 02DD                                    l2728 02BC  
                                  l2826 0393                                    l2754 02F1  
                                  l2914 04D7                                    l2906 04BE  
                                  l2780 032E                                    l2764 0305  
                                  l2756 02F8                                    l2828 039A  
                                  l2870 064B                                    l2790 0342  
                                  l2766 030C                                    l2872 0673  
                                  l2856 0661                                    l2792 0349  
                                  l2776 0320                                    l2768 0313  
                                  l2778 0327                                    l2788 033B  
                                  l2892 047D                                    l2878 067F  
                                  l2886 0467           __size_of_MYI2C_Write2LEDBytes 0074  
                                  _LATA 0016                                    _LATB 0017  
                                  _LATC 0018                                    u2400 061C  
                                  u1525 06D9                                    u1445 0699  
                                  u1465 06B2                                    u2505 049F  
                                  u1635 05A9                                    u2515 04BF  
                                  u1805 0F17                                    u1485 06BF  
                                  u2525 04CE                                    u1735 0F46  
                                  u2535 04D8                                    u2705 0E49  
                                  u1665 05D3                                    u1825 0F26  
                                  u2465 063B                                    u2715 0E4E  
                                  u1755 0F50                                    u1835 0F2D  
                                  u1765 0F5A                                    u2743 0FF5  
                                  u2735 0FD8                                    u1695 05EE  
                                  u1775 0F62                                    u2495 048F  
                                  u2905 0421                                    u2915 042F  
                                  u2925 044B                                    u2845 0703  
                                  u2774 0E67                                    u2790 0FAB  
                                  u2775 0E66                                    u2855 03B5  
                                  u2865 03D1                                    u2945 01E3  
                                  u2875 03DF                                    u2955 01F9  
                                  u2885 03F5                                    u2895 0411  
                                  _WPUA 0F39                                    _WPUB 0F44  
                                  _WPUC 0F4F                                    _WPUE 0F65  
       __end_of_I2C1_MasterReadTRBBuild 0EE3                            __CFG_WRT$OFF 0000  
                         __CFG_FCMEN$ON 0000                                    _main 017E  
                          ___ftpack@arg 0020                            ___ftpack@exp 0023  
            MYI2C_Write2LEDBytes@nCount 0047                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    _twoK 1002  
                ??_I2C1_MasterTRBInsert 0022                                    btemp 007E  
                          main@iCounter 0065                           __CFG_BOREN$ON 0000  
               __end_of_LED7SegPinWrite 0D6F                                    start 0020  
                         __CFG_CSWEN$ON 0000                           __CFG_MCLRE$ON 0000  
            MYI2C_Write2LEDBytes@status 0052          I2C1_MasterWriteTRBBuild@length 0021  
                          ___fttol@exp1 004D                            ___fttol@lval 0049  
MYI2C_Write2LEDBytes@slaveDeviceAddress 0049                              _i2c1_state 006F  
        __size_of_OSCILLATOR_Initialize 0009               I2C1_MasterTRBInsert@count 0023  
         __end_of_OSCILLATOR_Initialize 0D78               I2C1_MasterTRBInsert@pflag 0021  
                                 _ADACQ 009D                                   _ADACT 0099  
                                 _ADCAP 009B                                   ?_main 0077  
                                 _ADCLK 0098                                   _ADCNT 010C  
                                 _ADPCH 009E                                   _ADREF 009A  
                     __end_of_I2C1_Stop 0DEF                                   _ADPRE 009C  
                         __CFG_WDTE$OFF 0000                                   _ADRPT 010D  
                       __end_of___ftdiv 04F9                         __end_of___fttol 0610  
                        __CFG_DEBUG$OFF 0000                         __end_of___lwdiv 0F6F  
                                 i1l303 00AC                                   i1l304 00B8  
                                 i1l321 012C                                   i1l322 013A  
                                 i1l314 00FA                                   i1l333 0DAA  
                                 i1l326 015F                                   i1l318 0119  
                       __end_of___lwmod 0F3A                                   i1l292 0055  
                                 i1l297 0081                                   i1l298 0089  
                                 i1l394 0013                                   i1l398 001B  
                                 _OSCEN 0891                                   _PORTB 000D  
                                 _PORTC 000E                                   _TRISA 0011  
                                 _TRISB 0012                                   _TRISC 0013  
                       __end_of_datapin 1008            __end_of_I2C1_BusCollisionISR 0004  
                     ??_I2C1_Initialize 0020                                   _delay 0FAD  
                         ___ftpack@sign 0024                                   _speed 1004  
                                 status 0003                                   wtemp0 007E  
           MYI2C_Write2LEDBytes@counter 004A         I2C1_MasterWriteTRBBuild@address 0022  
           MYI2C_Write2LEDBytes@timeOut 004C                              _iLEDs0_LSB 00B2  
                            _iLEDs0_MSB 00B3                              _iLEDs1_LSB 00B0  
                            _iLEDs1_MSB 00B1             __end_of_UpdateLEDsFromValue 03A6  
                  __end_of_LED7SegSetup 0D9C                         __initialization 0022  
                 I2C1_MasterWrite@pdata 002D                   I2C1_MasterWrite@pflag 002A  
                          __end_of_main 02B2                            __end_of_twoK 1004  
           ?_INTERRUPT_InterruptManager 0077                             _i2c1_object 00A0  
                                ??_main 005F                           ___fttol@sign1 0048  
           ??_LED7SegShiftOutPulseClock 0031                    __size_of_LED7SegLoop 00AA  
                                ?_delay 0026                                  _ADACCH 0091  
                                _ADACCL 0090                                  _ADCON0 0093  
                                _ADCON1 0094                                  _ADCON2 0095  
                                _ADCON3 0096                                  _ADERRH 0117  
                                _ADERRL 0116                                  i1S3398 0800  
                                _ADLTHH 010F                                  _ADLTHL 010E  
                                _ADRESH 008D                                  _ADRESL 008C  
                                _ADSTAT 0097                                  _ADUTHH 0111  
                                _ADUTHL 0110                                  _ANSELA 0F38  
                                _ANSELB 0F43                                  _ANSELC 0F4E  
                      __end_of___ftpack 06E9                        __end_of___lbtoft 0E3F  
                    __CFG_RSTOSC$HFINT1 0000                                  _RC3PPS 0F23  
                                _RC4PPS 0F24                                  _ODCONA 0F3A  
                                _ODCONB 0F45                                  _ODCONC 0F50  
                                i1l2404 0DEC                                  i1l2600 0169  
                                i1l2512 00A6                                  i1l2506 0095  
                                i1l2526 00D5                                  i1l2606 0172  
                                i1l2560 0108                                  i1l2552 00F4  
                                i1l2546 00E9                                  i1l2580 0141  
                                i1l2494 0074                                  i1l2584 0148  
                                i1l2568 0121                                  i1l2596 0162  
                                i1l2598 0165                          __CFG_WDTCCS$SC 0000  
                      __end_of___lwtoft 0DD7                                  _OSCFRQ 0893  
           __end_of_LED7SegDisplayValue 0589                       ?_I2C1_MasterWrite 0027  
                      ?_LED7SegPinWrite 0077                          __CFG_PWRTE$OFF 0000  
                      __end_of_clockpin 100A                      ??_I2C1_MasterWrite 002B  
                        _p_i2c1_current 0072               __size_of_MYI2C_ReadFaders 0057  
                                ___wmul 0E3F                          __CFG_STVREN$ON 0000  
                             ??___ftdiv 0036                               ??___fttol 0044  
                      __end_of_latchpin 100C                               ??___lwdiv 0024  
                             ??___lwmod 0024              ??_I2C1_MasterWriteTRBBuild 0024  
                             ?_I2C1_ISR 0077        __size_of_I2C1_MasterReadTRBBuild 0028  
                       _ADCC_Initialize 0E09          MYI2C_Write2LEDBytes@sourceData 0034  
     __size_of_ADCC_GetSingleConversion 0014               ?_ADCC_GetSingleConversion 0020  
         I2C1_MasterWriteTRBBuild@pdata 0020                       _SYSTEM_Initialize 0D83  
             _LED7SegShiftOutPulseClock 0E5B                 __end_of__initialization 003E  
                    ?_SYSTEM_Initialize 0077                              ___ftdiv@f1 0033  
                            ___ftdiv@f2 0030                              ___ftdiv@f3 003B  
                        _i2c1_trb_count 0074                          _byteFaderValue 00B4  
                            ___lbtoft@c 002F                   _I2C1_FunctionComplete 0D9C  
                  _I2C1_BusCollisionISR 0003                              ___fttol@f1 0040  
                        __pcstackCOMMON 0077                  I2C1_MasterWrite@length 0027  
                          __pidataBANK1 0E97                     ??_SYSTEM_Initialize 0021  
              main@I2C_ADDRESS_FADELED0 0068                           __end_of_delay 1000  
                        main@faderValue 006C                           __end_of_speed 1006  
                            ??_I2C1_ISR 0079                              ___lwtoft@c 0028  
        I2C1_MasterReadTRBBuild@address 0022                      main@fader8bitValue 0069  
                               ??_delay 0028               __end_of_SYSTEM_Initialize 0D8F  
                            __pbssBANK0 006E                              __pbssBANK1 00A0  
                 __size_of_LED7SegSetup 000D              LED7SegShiftOutPulseClock@i 0033  
          __size_of_LED7SegBlankDisplay 000B           UpdateLEDsFromValue@inFaderNum 0022  
                 ?_I2C1_BusCollisionISR 0077                          _SSP1DATPPSbits 0EC6  
                            __pmaintext 017E                                 ?___wmul 0020  
          __end_of_MYI2C_Write2LEDBytes 0684                         __CFG_PPS1WAY$ON 0000  
               __end_of_ADCC_Initialize 0E24                              __pintentry 0004  
                       _I2C1_Initialize 0DEF                                 _ADFLTRH 0115  
                               _ADFLTRL 0114                              _blinkyLoop 06E9  
                               _ADPREVH 008F                                 _ADPREVL 008E  
                             ?___ftpack 0020                               ?___lbtoft 0028  
                               _ADSTPTH 0113                                 _ADSTPTL 0112  
                        _SSP1CLKPPSbits 0EC5                               ?___lwtoft 0028  
                               _OSCCON1 088D                                 _OSCCON3 088F  
                             _I2C1_Stop 0DD7                  MYI2C_Write2LEDBytes@pD 0046  
                               _OSCTUNE 0892                            _LED7SegSetup 0D8F  
                               _SSP1ADD 018D                                 _PPSLOCK 0E8F  
                               _SSP1BUF 018C         MYI2C_Write2LEDBytes@pointerByte 004E  
                        main@readStatus 0067           I2C1_MasterTRBInsert@ptrb_list 0020  
                ?_I2C1_FunctionComplete 0077           __size_of_I2C1_MasterTRBInsert 0053  
                    _p_i2c1_trb_current 0073                        _MYI2C_ReadFaders 074B  
                  __CFG_SCANE$available 0000                                 ___ftdiv 0450  
                       __size_of___wmul 001C                                 ___fttol 0589  
                               ___lwdiv 0F3A                                 ___lwmod 0F0D  
                            ??___ftpack 0025                              ??___lbtoft 002B  
                               _datapin 1006                 _I2C1_MasterReadTRBBuild 0EBB  
                               __ptext1 06E9                                 __ptext2 0E24  
                               __ptext3 0450                                 __ptext4 02B2  
                               __ptext5 0D83                                 __ptext6 0F6F  
                               __ptext7 0D6F                                 __ptext8 0DEF  
                               __ptext9 0E09                              ??___lwtoft 002B  
                 _OSCILLATOR_Initialize 0D6F            I2C1_MasterReadTRBBuild@pdata 0020  
                               _segdisp 00C7                ??_PIN_MANAGER_Initialize 0020  
                            ?_I2C1_Stop 0077              __size_of_SYSTEM_Initialize 000C  
                  I2C1_ISR@pi2c_buf_ptr 0071                                 main@ndx 006A  
                               clrloop0 0D5B                    end_of_initialization 003E  
                               init_ram 0D60                                 initloop 0D61  
                ??_I2C1_BusCollisionISR 0077                 __end_of_I2C1_Initialize 0E09  
                     __end_of_toggleDly 1002                        ?_ADCC_Initialize 0077  
      __end_of_ADCC_GetSingleConversion 0DC2                             ?_blinkyLoop 0031  
                 __CFG_WDTCPS$WDTCPS_31 0000                           ??_LED7SegLoop 0056  
          __size_of_UpdateLEDsFromValue 00F4               __size_of_I2C1_MasterWrite 002A  
                     __size_of_I2C1_ISR 013C                               _TRISCbits 0013  
       MYI2C_Write2LEDBytes@writeBuffer 004F                        __CFG_FEXTOSC$OFF 0000  
    LED7SegDisplayValue@iTwoDigitNumber 004E                    _MYI2C_Write2LEDBytes 0610  
     I2C1_ISR@i2c_10bit_address_restart 006E                             ___ftdiv@exp 003E  
               I2C1_MasterWrite@address 0028             MYI2C_ReadFaders@dataAddress 002B  
          __size_of_LED7SegDisplayValue 0090               ??_I2C1_MasterReadTRBBuild 0024  
                delay@adjustedDelaytime 0029                __size_of_LED7SegPinWrite 0009  
                        __end_of___wmul 0E5B                 I2C1_MasterWrite@trBlock 00C0  
              I2C1_Stop@completion_code 0078                  ?_OSCILLATOR_Initialize 0077  
                   _LED7SegBlankDisplay 07F5         UpdateLEDsFromValue@wkBrightFlag 0024  
                   start_initialization 0022                             ??_I2C1_Stop 0077  
                   __end_of_LED7SegLoop 0450         __size_of_PIN_MANAGER_Initialize 003E  
                 ?_MYI2C_Write2LEDBytes 002E       __size_of_I2C1_MasterWriteTRBBuild 0020  
             ?_I2C1_MasterWriteTRBBuild 0020                     __size_of_blinkyLoop 0062  
                  ?_LED7SegBlankDisplay 0077                        ?_I2C1_Initialize 0077  
                      __CFG_LPBOREN$OFF 0000                                ??___wmul 0024  
                           __pdataBANK1 00C7            I2C1_MasterWriteTRBBuild@ptrb 0026  
              _ADCC_GetSingleConversion 0DAE                       __size_of___ftpack 0065  
                     __size_of___lbtoft 001B                             __pbssCOMMON 0070  
                             ___latbits 0002                       __size_of___lwtoft 0015  
                         __pcstackBANK0 0020        MYI2C_Write2LEDBytes@LSBWriteByte 002F  
                         _i2c1_tr_queue 00C4                __end_of_MYI2C_ReadFaders 07A2  
                   blinkyLoop@delayTime 0034                 ??_I2C1_FunctionComplete 0077  
            UpdateLEDsFromValue@inValue 0020                   ??_LED7SegBlankDisplay 0034  
                             _main$1595 0063                        ___lwdiv@dividend 0022  
                _PIN_MANAGER_Initialize 0F6F        MYI2C_Write2LEDBytes@MSBWriteByte 002E  
       ADCC_GetSingleConversion@channel 0023                                ?___ftdiv 0030  
                              ?___fttol 0040                                ?___lwdiv 0020  
                              ?___lwmod 0020                                _I2C1_ISR 0042  
          ??_INTERRUPT_InterruptManager 007D                             _LED7SegLoop 03A6  
                             __pswtext1 0818                               __pswtext2 0800  
                      _I2C1_MasterWrite 0EE3                      LED7SegPinWrite@val 0020  
          __end_of_I2C1_MasterTRBInsert 07F5                  main@prevFader8bitValue 0062  
                     ??_LED7SegPinWrite 0020                     blinkyLoop@loopCount 0036  
                ??_MYI2C_Write2LEDBytes 0030                            _wkFaderValue 00AF  
                      ___lwdiv@quotient 0025                          __size_of_delay 0053  
                          delay@counter 002D             I2C1_MasterReadTRBBuild@ptrb 0026  
                I2C1_MasterRead@trBlock 00BC                     _UpdateLEDsFromValue 02B2  
                        ___wmul@product 0024                                _LATCbits 0018  
                             clear_ram0 0D5A                                _PIE3bits 0719  
   __size_of_INTERRUPT_InterruptManager 001C                                _PIR3bits 070F  
                              _SSP1CON1 0190                                _SSP1CON3 0192  
                              _SSP1STAT 018F                            ??_blinkyLoop 0033  
                             _toggleDly 1000                    ?_UpdateLEDsFromValue 0020  
                            _ADCON0bits 0093                              _ADCON1bits 0094  
                            _ADCON2bits 0095                              _ADCON3bits 0096  
                     ___wmul@multiplier 0020                     _LED7SegDisplayValue 04F9  
                    __end_of_blinkyLoop 074B                              _ADSTATbits 0097  
         __size_of_I2C1_BusCollisionISR 0001                    ?_LED7SegDisplayValue 004E  
                I2C1_ISR@i2c_bytes_left 0070                 ??_OSCILLATOR_Initialize 0020  
                        delay@delaytime 0026                       LED7SegLoop@d_1040 005B  
                     LED7SegLoop@d_1039 0059                        __size_of___ftdiv 00A9  
                      __size_of___fttol 0087                        __size_of___lwdiv 0035  
                 ??_UpdateLEDsFromValue 0021                        __size_of___lwmod 002D  
                              ___ftpack 0684                                ___lbtoft 0E24  
      __end_of_I2C1_MasterWriteTRBBuild 0E97                       _LED7SegPulseClock 0D78  
                              ___lwtoft 0DC2                              _ANSELCbits 0F4E  
                    ?_LED7SegPulseClock 0077                __size_of_ADCC_Initialize 001B  
                       ___lwdiv@divisor 0020                     I2C1_ISR@i2c_address 0075  
                       ___lwdiv@counter 0027                                __ptext10 0610  
                              __ptext11 0EE3                                __ptext20 0684  
                              __ptext12 074B                                __ptext21 0F0D  
                              __ptext13 0E77                                __ptext30 0DAE  
                              __ptext22 0F3A                                __ptext14 07A2  
                              __ptext23 0589                                __ptext15 0EBB  
                              __ptext32 0042                                __ptext24 07F5  
                              __ptext16 0D8F                                __ptext33 0DD7  
                              __ptext25 0E5B                                __ptext17 03A6  
                              __ptext34 0D9C                                __ptext26 0D78  
                              __ptext18 04F9                                __ptext35 0003  
                              __ptext27 0FAD                                __ptext19 0DC2  
                              __ptext28 0E3F                                __ptext29 0D66  
                    blinkyLoop@maxLoops 0031                            _SSP1CON1bits 0190  
                          _SSP1CON2bits 0191                                _clockpin 1008  
                   ??_LED7SegPulseClock 0031                                _latchpin 100A  
                         __size_of_main 0134           I2C1_MasterReadTRBBuild@length 0021  
                  __CFG_WDTCWS$WDTCWS_7 0000      MYI2C_ReadFaders@slaveDeviceAddress 002F  
                  _I2C1_MasterTRBInsert 07A2                   ??_LED7SegDisplayValue 0050  
                          LED7SegLoop@d 0057                            LED7SegLoop@z 005D  
            ??_ADCC_GetSingleConversion 0023                                int$flags 007E  
    __end_of_INTERRUPT_InterruptManager 0020              _INTERRUPT_InterruptManager 0004  
             __end_of_LED7SegPulseClock 0D83      __size_of_LED7SegShiftOutPulseClock 001C  
            ?_LED7SegShiftOutPulseClock 0077             MYI2C_ReadFaders@pointerByte 0030  
           PIN_MANAGER_Initialize@state 0020            LED7SegShiftOutPulseClock@val 0032  
                        _cMstrClkAdjust 100C                              _INTCONbits 000B  
                         ?_LED7SegSetup 0077                       ?_MYI2C_ReadFaders 0077  
                              intlevel1 0000                      ??_MYI2C_ReadFaders 0027  
                      ___lwmod@dividend 0022                 ?_PIN_MANAGER_Initialize 0077  
           UpdateLEDsFromValue@wkOnFlag 0023                __end_of_I2C1_MasterWrite 0F0D  
                     __CFG_CLKOUTEN$OFF 0000          __size_of_I2C1_FunctionComplete 0012  
         __end_of_I2C1_FunctionComplete 0DAE                             _PPSLOCKbits 0E8F  
                 ?_I2C1_MasterTRBInsert 0020                ?_I2C1_MasterReadTRBBuild 0020  
        LED7SegDisplayValue@iUnitsDigit 0050                         _LED7SegPinWrite 0D66  
         LED7SegDisplayValue@iTensDigit 0054                  __end_of_cMstrClkAdjust 100E  
              __size_of_I2C1_Initialize 001A                            ?_LED7SegLoop 0077  
                         __pstringtext1 1000                           __pstringtext2 1002  
                         __pstringtext3 1004                           __pstringtext4 1006  
                         __pstringtext5 1008                           __pstringtext6 100A  
                         __pstringtext7 100C       __end_of_LED7SegShiftOutPulseClock 0E77  
               MYI2C_ReadFaders@readTRB 0031                         ___lwmod@divisor 0020  
                       ___lwmod@counter 0025                          ??_LED7SegSetup 0020  
              _I2C1_MasterWriteTRBBuild 0E77                 MYI2C_ReadFaders@timeOut 002D  
          LED7SegDisplayValue@iTensCode 0052             __end_of_LED7SegBlankDisplay 0800  
        __end_of_PIN_MANAGER_Initialize 0FAD                       ??_ADCC_Initialize 0020  
                    __size_of_I2C1_Stop 0018                  MYI2C_ReadFaders@status 0039  
